[{"instruction": "Generate java code\ngenerate mappings for each function node and parameters and variables names associated with it . ", "input": " int parentScope \n ArrayList functionBracePositions \n ObjArray funcObjects \n int functionNum \n ArrayList functionVarMappings \n int lastTokenCount \n ArrayList replacedTokens \n\n boolean isInScopeChain \n void reset \n void leaveNestingLevel \n String getMappedToken \n String getPreviousTokenMapping \n void collectFuncNodes \n int sourceCompress \n void enterNestingLevel", "output": ""}, {"instruction": "Generate java code\nreturns a hash of the given files contents . reads the file fully into memory before hashing so only use with small files . ", "input": " Sha256Hash ZERO_HASH \n byte[] bytes \n\n Sha256Hash createDouble \n int hashCode \n boolean equals \n Sha256Hash create \n BigInteger toBigInteger \n String toString \n Sha256Hash duplicate \n int compareTo \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\nobtains the id of an object and returns it as a string . if cancreate is true it will try to create a new id for the object if it has none . ", "input": " Logger LOG \n Class MYCLASS \n String id \n\n String readObjectID \n String createObjectID \n String generateID \n String toString", "output": ""}, {"instruction": "Generate java code\ncreates a matcher of comparable object that matches when the examined object isgreater than the specified value , as reported by the compareto method of the examined object . for example : assertthat 2 , greaterthan 1 ", "input": " PlaceHolder placeHolder \n\n Matcher<T> lessThan \n Matcher<T> comparesEqualTo \n Matcher<T> greaterThanOrEqualTo \n Matcher<T> lessThanOrEqualTo", "output": ""}, {"instruction": "Generate java code\nreturns denominator ", "input": " int denom \n int num \n\n boolean isOne \n int getScaled \n boolean equals \n int getNum", "output": ""}, {"instruction": "Generate java code\nnot required ", "input": " double lat \n String id_str \n String screen_name \n String place_name \n String image \n String user_name \n double lng \n Date created_at \n int loc_radius \n String user_id \n String text \n ArrayList<String> extras \n\n GenericJSONBuilder setIDstr \n GenericJSONBuilder setPlaceName \n GenericJSONBuilder addText \n GenericJSONBuilder addField \n void insert \n GenericJSONBuilder setCoordinateRadius \n GenericJSONBuilder setAuthor \n GenericJSONBuilder builder \n GenericJSONBuilder setCoordinate \n GenericJSONBuilder setCreatedTime \n void persist \n String buildFieldJSON \n GenericJSONBuilder setUserid", "output": ""}, {"instruction": "Generate java code\nimplements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . ", "input": " IEnvironments environments \n HashMap<String,XMPPConnectionFactory> factories \n AutoSIMXMPPConfig config \n\n void start", "output": ""}, {"instruction": "Generate java code\ntests for the bufferedblockinstream #seek long method . ", "input": " TestBufferedBlockInStream mTestStream \n long mBlockSize \n long mBufferSize \n\n void before \n void bufferRead \n void skip \n void bulkRead \n void singleByteRead", "output": ""}, {"instruction": "Generate java code\ntries to perform a `` full '' garbage collection cycle including processing of weak references and invocation of finalize methods and waits for it to complete . ensures that at least one weak reference has been cleared and one finalize method has been run before thismethod returns . this method may be useful when testing the garbage collection mechanism itself , or inhibiting a spontaneous gc initiation in subsequent code . in contrast , a plain call to java.lang.system #gc does not ensure finalizationprocessing and may run concurrently , for example , if the jvm flag - xx : + explicitgcinvokesconcurrent is used.whenever possible , it is preferable to test directly for some observable change resulting from gc , as with #awaitclear . because there are no guarantees for the order of gc finalization processing , there may still be some unfinished work for the gc to do after this method returns . this method does not create any memory pressure as would be required to cause soft references to be processed . ", "input": " PlaceHolder placeHolder \n\n RuntimeException formatRuntimeException \n void await \n void createUnreachableLatchFinalizer \n long timeoutSeconds \n boolean isDone \n void awaitDone \n void awaitDone \n void awaitClear", "output": ""}, {"instruction": "Generate java code\nsets the properties and configuration before each test runs . ", "input": " TransferManager mManager \n String BUCKET_NAME \n String KEY \n S3ADirectOutputStream mStream \n\n void close", "output": ""}, {"instruction": "Generate java code\nthis function returns the documentation in c-style comment format . ", "input": " String LINE_SEPARATOR \n\n void setDocs \n int appendComment \n boolean hasDocs \n String getComments \n String getComments \n String defaultFor", "output": ""}, {"instruction": "Generate java code\nget the log level for reporting the selection of the new alternative address or endpoint ", "input": " Logger LOG \n long delayBetweenRetries \n List<String> alternateAddresses \n\n String selectAlternateAddress \n void setDelayBetweenRetries \n List<Endpoint> getEndpoints \n T getNextAlternate \n long getDelayBetweenRetries \n void setAlternateAddresses \n List<Endpoint> getAlternateEndpoints \n Endpoint selectAlternateEndpoint \n List<String> getAlternateAddresses", "output": ""}, {"instruction": "Generate java code\nfunction to search for a word ", "input": " TSTNode middle \n char data \n TSTNode left \n TSTNode root \n TSTNode right \n ArrayList<String> al \n boolean is_End_Of_String \n\n void traverse \n void makeEmpty \n boolean isEmpty \n void insert \n TSTNode insert \n String toString \n void main \n void delete \n void delete", "output": ""}, {"instruction": "Generate java code\ncloses the current scans . ", "input": " Transaction tx \n TableInfo ti \n int nextblknum \n Scan lhsscan \n int chunksize \n int filesize \n Scan prodscan \n Scan rhsscan \n\n boolean next \n int getInt \n Constant getVal \n boolean useNextChunk \n void beforeFirst \n String getString \n boolean hasField", "output": ""}, {"instruction": "Generate java code\nconvert a given string propertyname #propertyvalue to a map ", "input": " Map<String,Map<String,String>> userStoreManagers \n\n Set<String> getAvailableDomainNames \n void clearUserStoreManager \n void addUserStoreManager \n Map<String,String> getUserStoreManager", "output": ""}, {"instruction": "Generate java code\nfind the attributes or simple/text nodes ", "input": " String XML_NAMESPACE \n InputStream stream \n Document doc \n Map<String,String> namespaces \n\n URI[] getLinks \n String getPrefix \n T[] getNodes \n T[] getNodes \n void setBuffering \n String getValue \n String getValue \n T getValue \n URI getLink \n URI getLink \n String getNamespaceURI \n Iterator<?> getPrefixes \n Object readPrimitiveValue \n T getNode \n T getNode \n URI getBaseURI \n Object evaluate \n T readNode", "output": ""}, {"instruction": "Generate java code\nvalidates the files listed in the set of sources source byrunning passes that are dependent on the validation goal . returns true on success . ", "input": " ExtensionInfo extensionInfo \n ClassFileLoader loader \n ErrorQueue eq \n Collection<JavaFileObject> outputFiles \n List<ExtensionInfo> allExtensions \n List<Job> jobs \n\n Collection<JavaFileObject> outputFiles \n int outputWidth \n ClassFileLoader loader \n CodeWriter createCodeWriter \n CodeWriter createCodeWriter \n CodeWriter createCodeWriter \n CodeWriter createCodeWriter \n List<Job> jobs \n ErrorQueue errorQueue \n boolean useFullyQualifiedNames \n boolean compile \n Goal getGoal \n ExtensionInfo sourceExtension \n boolean compileFiles \n void addExtension \n boolean serializeClassInfo \n boolean runToGoal \n List<ExtensionInfo> allExtensions", "output": ""}, {"instruction": "Generate java code\nenable/disable gps ", "input": " Context context \n\n void reboot \n boolean getGPS", "output": ""}, {"instruction": "Generate java code\n23 returns true if view 's layout direction is right-to-left . 24 25 @param view the view whose layout is being considered 26 ", "input": " TypedValue mTmpValue \n\n void showSystemUI \n int getSystemBarHeightInDp \n int getStatusBarHeight \n int getStatusBarHeightInDp \n int getActionBarHeightInDp \n void hideSystemUI \n int getSystemBarHeight \n int pxToDp \n int pxToDp \n int getActionBarHeight \n int getResourceValue \n T findById \n T findById \n int dpToPx \n int dpToPx \n Point getScreenRawSize", "output": ""}, {"instruction": "Generate java code\ngets the checklist for an element . ", "input": " Hashtable lists \n Hashtable statuses \n\n ChecklistStatus getStatusFor \n Checklist lookupChecklist \n void register", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #setday int . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nreturns the next available tile in the specified lane that is closest to the base . a tile is available if it 's not occupied by a card . ", "input": " Array<Array<Array<Card>>> tiles \n int HUMAN_PLAYER \n String name \n int id \n int COMPUTER_PLAYER \n\n int playerBaseAttacked \n int laneWithMoreEnemiesInvading \n int nextAvailableLane \n void read \n int nextAvailableTile \n int laneWithMoreEnemies \n String getName \n int tileFurthestFromBase \n int enemyBaseAttacked \n Array<Card> getEnemyCards \n boolean cardOnMap \n void addCard \n Array<Card> getPlayerCards \n void setTiles \n void write \n int laneWithLessAllies \n Array<Array<Array<Card>>> getTiles", "output": ""}, {"instruction": "Generate java code\ninverse of a matrix - a-1 a = i where i is the identity matrix a matrix that have inverse is called non-singular or invertible . if the matrix does not have inverse it is called singular . for a singular matrix the values of the inverted matrix are either nan or infinity only square matrices have inverse and the following method will throw exception if the matrix is not square . ", "input": " PlaceHolder placeHolder \n\n int changeSign \n Matrix add \n Matrix cofactor \n Matrix subtract \n Matrix transpose \n Matrix multiply \n Matrix createSubMatrix \n double determinant", "output": ""}, {"instruction": "Generate java code\ngetter for the exit code defaults to blank . ", "input": " JobExitStatus NOOP \n JobExitStatus FILES_AVAILABLE \n JobExitStatus CAPTURE_SOURCE_METADATA_ERRORS \n JobExitStatus SOURCE_DELETION_ERRORS \n JobExitStatus DOWNLOAD_ERRORS \n JobExitStatus CONFIG_VALIDATION_FAIL \n JobExitStatus MOVEFILES_WORKAREA_ERRORS \n JobExitStatus EXECUTING \n JobExitStatus DB_NOT_ACCESSABLE \n JobExitStatus ANOTHER_FETCHER_IS_RUNNING \n JobExitStatus RUNFAILED \n JobExitStatus MULTIPLE_PARTIAL_ERRORS \n JobExitStatus MOVEFILES_DESTINATION_ERRORS \n JobExitStatus NO_NEW_FILES_FOUND \n JobExitStatus WORK_AREA_NOT_ACCESSABLE \n JobExitStatus PROCESS_VALIDATION_FAIL \n JobExitStatus DESTINATION_NOT_ACCESSABLE \n JobExitStatus UNKNOWN \n JobExitStatus DELAYERING_ERRORS \n ExitStatus thisExitStatus \n List<JobExitStatus> partialExitCodes \n JobExitStatus NO_FILES_FOUND \n JobExitStatus SOURCE_NOT_ACCESSABLE \n JobExitStatus COMPLETED \n\n List<JobExitStatus> getPartialFailureCodes \n int hashCode \n boolean equals \n ExitStatus getExitStatus \n String toString \n boolean isPartialFailureCode \n boolean isPartialFailureCode \n String getExitDescription", "output": ""}, {"instruction": "Generate java code\ngets the hover attribute of the standardattributeresolver object ", "input": " NamespaceHandler nsh \n UserInterface ui \n UserAgentCallback uac \n\n String getClass \n boolean isLink \n String getAttributeValue \n String getAttributeValue \n boolean isVisited \n boolean isFocus \n String getLang \n String getID \n String getNonCssStyling \n String getElementStyling \n boolean isActive", "output": ""}, {"instruction": "Generate java code\nget the list of attributestatementproviders . ", "input": " boolean signToken \n ConditionsProvider conditionsProvider \n Logger LOG \n List<AttributeStatementProvider> attributeStatementProviders \n SubjectProvider subjectProvider \n\n boolean canHandleToken \n boolean canHandleToken \n SamlAssertionWrapper createSamlToken \n boolean isSignToken \n void setSubjectProvider \n ConditionsProvider getConditionsProvider \n void testKeyType \n TokenProviderResponse createToken \n void setAttributeStatementProviders \n SamlCallbackHandler createCallbackHandler \n SubjectProvider getSubjectProvider \n void setConditionsProvider \n void setSignToken", "output": ""}, {"instruction": "Generate java code\nunloads the sounds from memory . ", "input": " ShadowStruggles game \n Array<Asset> textures \n Array<Asset> sounds \n Array<Asset> rpgMaps \n String assetName \n Array<Asset> textureRegions \n String LOG \n String assetType \n\n void loadMaps \n TextureRegion getTextureRegion \n TiledMap getTiledMap \n void disposeTextures \n void disposeMaps \n Texture getTexture \n void unloadSounds \n void loadSounds \n boolean equals \n void setAssetsToLoad \n void loadAssets \n void dispose \n void loadTextureAtlas \n void createTextureAtlas \n void disposeAtlas \n void loadTextures", "output": ""}, {"instruction": "Generate java code\nreturns the project model for the specified user . ", "input": " IStoredSettings settings \n IRuntimeManager runtimeManager \n FileBasedConfig projectConfigs \n Logger logger \n IRepositoryManager repositoryManager \n Map<String,ProjectModel> projectCache \n IUserManager userManager \n ObjectCache<String> projectMarkdownCache \n ObjectCache<String> projectRepositoriesMarkdownCache \n\n ProjectManager stop \n void reloadProjectMarkdown \n ProjectManager start \n Map<String,ProjectModel> getProjectConfigs \n List<ProjectModel> getProjectModels \n List<ProjectModel> getProjectModels", "output": ""}, {"instruction": "Generate java code\nget the color name of the color that is closest to the given hex color value as a 6-digit hex string . ", "input": " int r \n int b \n Map<RGB,String> namedColors \n int g \n\n int hashCode \n boolean equals \n Color getColor \n Optional<String> getNamedColor \n Optional<String> getNamedColor \n double calculateColorDistSq", "output": ""}, {"instruction": "Generate java code\ngets the data source as a pseudo file name faux-file . adding a suffix matching the source object type ensures that the appropriate language parser is used . ", "input": " String schema \n String name \n Logger LOG \n String type \n String CLASS_NAME \n String revision \n\n void setName \n String getName \n String getType \n String toString \n void setRevision \n String getSuffixFromType \n void setType \n void setSchema \n String getSchema \n String getRevision", "output": ""}, {"instruction": "Generate java code\ndefault tcp port on which to connect to nodes . ", "input": " int addressHeader \n int INTERVAL \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n long packetMagic \n int p2shHeader \n List<NetworkParameters> paramSet \n int PROTOCOL_VERSION \n Block genesisBlock \n BigInteger proofOfWorkLimit \n int subsidyDecreaseBlockCount \n int port \n BigInteger MAX_MONEY \n int TARGET_SPACING \n String[] dnsSeeds \n Map<Integer,Sha256Hash> checkpoints \n byte[] SATOSHI_KEY \n int interval \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n Sha256Hash calculateBlockPoWHash \n BigInteger getMaxMoney \n NetworkParameters getParamsFromAddressByte \n void registerParams \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n int getRetargetBlockCount \n int getRetargetBlockCount \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n long getPacketMagic \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n boolean isAcceptableAddressVersion \n String getURIScheme \n BigInteger getProofOfWorkLimit", "output": ""}, {"instruction": "Generate java code\nreturns urlset keys for the terms that have been indexed . should be used for development and testing , not production . ", "input": " Jedis jedis \n\n void add \n boolean isIndexed \n void deleteAllKeys \n Map<String,Integer> getCounts \n void main \n void printIndex \n String termCounterKey \n Set<String> termSet \n List<Object> pushTermCounterToRedis \n void loadIndex \n void deleteTermCounters \n String urlSetKey \n Integer getCount \n void indexPage \n void deleteURLSets \n Set<String> termCounterKeys \n Set<String> getURLs \n Map<String,Integer> getCountsFaster", "output": ""}, {"instruction": "Generate java code\nclears all marks about blocks to move in/out in this view . ", "input": " BlockMetadataManagerView mManagerView \n StorageDir mDir \n long mBlocksToMoveOutSize \n long mBlocksToMoveInSize \n StorageTierView mTierView \n Set<Long> mBlocksToMoveIn \n Set<Long> mBlocksToMoveOut \n\n long getEvitableBytes \n StorageTierView getParentTierView \n boolean isMarkedToMoveOut \n void markBlockMoveIn \n TempBlockMeta createTempBlockMeta \n int getDirViewIndex \n long getCommittedBytes \n List<BlockMeta> getEvictableBlocks \n long getCapacityBytes \n long getAvailableBytes \n BlockStoreLocation toBlockStoreLocation \n void markBlockMoveOut", "output": ""}, {"instruction": "Generate java code\nreturns a subject capturing the login name the end user used to login to the resource server when authorizing a given client request ", "input": " long issuedAt \n List<OAuthPermission> scopes \n UserSubject subject \n Client client \n boolean preAuthorized \n String tokenString \n long lifetime \n String tokenSecret \n\n void setScopes \n void setPreAuthorized \n void setSubject \n String getTokenKey \n boolean isPreAuthorized \n long getLifetime \n Client getClient \n long getIssuedAt \n String getTokenSecret \n List<OAuthPermission> getScopes", "output": ""}, {"instruction": "Generate java code\nretrieve a length from the format string . either for a repeat count or a string length . return one if no explicit repeat count . \\ param advance whether to move the stream position . ", "input": " int formatOff \n int formatRepeatCount \n String format \n\n void checkType \n char getType \n int available \n void reset \n String toString \n void consume \n int getIntFromFormat", "output": ""}, {"instruction": "Generate java code\ngets the error msg . ", "input": " Long expectedDataUnitId \n Long seqNo \n Long dataSetId \n Long dataUnitId \n String expectedValue \n String actualValue \n Long expectedDataSetId \n String errorCode \n Long testId \n String failedAttributeName \n String srcFileName \n String errorMsg \n\n void setExpectedValue \n String getExpectedValue \n Long getExpectedDataSetId \n void setExpectedDataSetId \n void setActualValue \n Long getDataSetId \n void setSrcFileName \n Long getExpectedDataUnitId \n void setExpectedDataUnitId \n String getSrcFileName \n Long getSeqNo \n String getFailedAttributeName \n void setTestId \n void setFailedAttributeName \n Long getTestId \n void setErrorCode \n String getActualValue \n Long getDataUnitId \n void setSeqNo \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setDataSetId \n String toString", "output": ""}, {"instruction": "Generate java code\ndetermine if the set contains a particular symbol . ", "input": " HashMap<String,symbol> _all \n\n boolean add \n boolean add \n Iterator<symbol> iterator \n int size \n void not_null \n int hashCode \n boolean is_superset_of \n boolean equals \n boolean equals \n boolean is_subset_of \n String toString \n void remove \n void remove", "output": ""}, {"instruction": "Generate java code\ntries to merge all direct text and cdata children of the given node and concatenates their value . ", "input": " char SPACE \n\n Node stripWhitespace \n Map<QName,String> getAttributes \n Node normalizeWhitespace \n String normalize \n QName getQName \n void handleWsRec", "output": ""}, {"instruction": "Generate java code\nget the marshalregistry stored in the context , and if necessary create a new one . ", "input": " int nextId \n Map<Object,String> instances \n Map<String,Object> notMarshalled \n\n String getInstanceId \n Iterator<Object> iterator", "output": ""}, {"instruction": "Generate java code\nreturn a list containing o1 and o2 . ", "input": " PlaceHolder placeHolder \n\n List<T> add \n T firstOrElse \n boolean equals \n List<T> nonNullList \n List<U> map \n Iterator<Pair<T,T>> pairs", "output": ""}, {"instruction": "Generate java code\nsets the value of the parametersmetadata property . ", "input": " MetaData.Template template \n MetaData.WorkflowImpl workflowImpl \n String workflowImplId \n ParametersMetaData parametersMetaData \n String templateName \n String templateDescription \n String templateId \n String workflowImplName \n String workflowImplDescription \n\n MetaData.WorkflowImpl getWorkflowImpl \n MetaData.Template getTemplate \n void setWorkflowImplId \n ParametersMetaData getParametersMetaData \n ParametersMetaData getParametersMetaData \n void setWorkflowImplName \n void setTemplateId \n void setTemplateId \n String getTemplateDescription \n void setTemplateDescription \n void setTemplateName \n String getWorkflowImplName \n void setTemplate \n String getTemplateId \n String getTemplateId \n String getWorkflowImplId \n String getWorkflowImplDescription \n String getTemplateName \n void setWorkflowImpl \n void setWorkflowImplDescription", "output": ""}, {"instruction": "Generate java code\nreturn our details tab s . proof of concept only . ", "input": " long serialVersionUID \n String aboutName \n Logger LOG \n\n String getName \n String getInfo \n boolean enable \n boolean disable", "output": ""}, {"instruction": "Generate java code\nwrite character bytes - note that we cheat , we just convert them directly to a string for output with no regard to the encoding . ", "input": " XMLStreamWriter writer \n\n void processGroupStart \n void processDocumentEnd \n void processGroupEnd \n void processCommand \n void processString \n void processDocumentStart \n void processBinaryBytes", "output": ""}, {"instruction": "Generate java code\ngets the checks if is active . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nfactory for dataserver . ", "input": " PlaceHolder placeHolder \n\n int getPort \n boolean isClosed \n String getBindHost", "output": ""}, {"instruction": "Generate java code\nreturns the first key that has private bytes ", "input": " List<ECKey> keys \n Script redeemScript \n\n RedeemData of \n RedeemData of", "output": ""}, {"instruction": "Generate java code\ndestroy the instrumentation service . ", "input": " String CONF_LOGGING_INTERVAL \n String JVM_INSTRUMENTATION_GROUP \n XLog log \n Instrumentation instrumentation \n String CONF_PREFIX \n\n void init \n Class<? extends Service> getInterface \n Instrumentation get \n String mapToString", "output": ""}, {"instruction": "Generate java code\nset the maximum key size to use when generating a symmetric key to sign an issued token . the requestor can specify a keysize value to use . the default is 512 bits . ", "input": " List<String> acceptedC14nAlgorithms \n String signatureAlgorithm \n long maximumKeySize \n long keySize \n List<String> acceptedSignatureAlgorithms \n String c14nAlgorithm \n String digestAlgorithm \n long minimumKeySize \n boolean useKeyValue \n\n String getC14nAlgorithm \n boolean isUseKeyValue \n List<String> getAcceptedC14nAlgorithms \n void setUseKeyValue \n long getMinimumKeySize \n void setAcceptedC14nAlgorithms \n void setC14nAlgorithm \n void setDigestAlgorithm \n void setMinimumKeySize \n void setAcceptedSignatureAlgorithms \n String getDigestAlgorithm \n List<String> getAcceptedSignatureAlgorithms \n String getSignatureAlgorithm \n void setSignatureAlgorithm \n long getKeySize \n void setKeySize \n long getMaximumKeySize", "output": ""}, {"instruction": "Generate java code\nreturns the constant value of the specified field . ", "input": " Scan s \n String joinfield \n Index idx \n TableScan ts \n\n boolean next \n int getInt \n void resetIndex \n void beforeFirst \n String getString \n void close \n boolean hasField", "output": ""}, {"instruction": "Generate java code\nreturns the 4 byte header for bip32 hd wallet - public key part . ", "input": " int INTERVAL \n String ID_UNITTESTNET \n long MAX_COINS \n int p2shHeader \n int PROTOCOL_VERSION \n BigInteger maxTarget \n int TARGET_SPACING \n String[] dnsSeeds \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n String PAYMENT_PROTOCOL_ID_MAINNET \n int addressHeader \n Coin MAX_MONEY \n int bip32HeaderPriv \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n int bip32HeaderPub \n String ID_MAINNET \n long packetMagic \n byte[] SATOSHI_KEY \n Block genesisBlock \n String PAYMENT_PROTOCOL_ID_TESTNET \n int subsidyDecreaseBlockCount \n int port \n String ID_TESTNET \n Map<Integer,Sha256Hash> checkpoints \n int interval \n String ID_REGTEST \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n int getBip32HeaderPriv \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n String getPaymentProtocolId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n BigInteger getMaxTarget \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n NetworkParameters fromPmtProtocolID", "output": ""}, {"instruction": "Generate java code\nreturns the number of satoshis of this monetary value . ", "input": " Coin MICROCOIN \n int SMALLEST_UNIT_EXPONENT \n long COIN_VALUE \n Coin SATOSHI \n MonetaryFormat FRIENDLY_FORMAT \n Coin COIN \n Coin CENT \n Coin FIFTY_COINS \n Coin NEGATIVE_SATOSHI \n Coin MILLICOIN \n long MAX_SATOSHIS \n Coin ZERO \n long value \n MonetaryFormat PLAIN_FORMAT \n\n Coin add \n int signum \n boolean isNegative \n boolean isLessThan \n Coin valueOf \n Coin valueOf \n Coin subtract \n boolean isGreaterThan \n boolean isPositive \n String toPlainString \n int smallestUnitExponent \n int compareTo \n long longValue \n Coin parseCoin \n String toFriendlyString \n Coin shiftLeft \n Coin shiftRight \n Coin[] divideAndRemainder \n int hashCode \n Coin negate \n boolean equals \n boolean isZero \n Coin divide \n long divide \n String toString \n Coin multiply", "output": ""}, {"instruction": "Generate java code\nset an action view for this menu item . an action view will be displayed in place of an automatically generated menu item element in the ui when this item is shown as an action within a parent . ", "input": " android.view.MenuItem mMenuItem \n\n boolean hasSubMenu \n CharSequence getTitleCondensed \n int getGroupId \n int getItemId \n View getActionView \n View getActionView \n CharSequence getTitle \n MenuItem setChecked \n char getAlphabeticShortcut \n MenuItem setOnMenuItemClickListener \n MenuItem setOnMenuItemClickListener \n Intent getIntent \n boolean isCheckable \n MenuItem setShortcut \n MenuItem setVisible \n void setShowAsAction \n void setShowAsAction \n SubMenu getSubMenu \n MenuItem setIntent \n MenuItem setCheckable \n MenuItem setAlphabeticShortcut \n MenuItem setTitle \n MenuItem setTitle \n MenuItem setNumericShortcut \n boolean isVisible \n boolean isChecked \n MenuItem setTitleCondensed \n Drawable getIcon \n MenuItem setIcon \n MenuItem setIcon \n MenuItem setEnabled \n int getOrder \n boolean isEnabled \n char getNumericShortcut \n ContextMenuInfo getMenuInfo", "output": ""}, {"instruction": "Generate java code\ntest method for deletepersistentnotification serversession serversession , servermessage servermessage verifies that illegalargumentexception is thrown when serversession is null . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n NotificationController notificationController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication \n void testDeregisterUserSessionWithNullServerSessonThrowsException \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle \n void testGetServerSessionByUserId \n void tearDown \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId \n void testRegisterUserSessionWithNullServerSessionThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\nset seconds of minute . ", "input": " int offsetHours \n int offsetMinutes \n double seconds \n int minutes \n int hour \n String TIME_PATTERN \n\n int getOffsetHours \n Date toDate \n String toISO8601 \n void setMinutes \n void setHour \n long getMilliseconds \n void setOffsetMinutes \n int getMinutes \n double getSeconds \n int hashCode \n boolean equals \n int getOffsetMinutes \n int getHour \n String toString \n void setOffsetHours \n void setTime", "output": ""}, {"instruction": "Generate java code\nsets the serviceid for this datagram packet . ", "input": " byte[] data \n int offset \n int length \n ServiceID serviceID \n int capacity \n InetAddress address \n\n ServiceID getServiceID \n void setLengthOnly \n void setLength \n void setAddress \n void setData \n void setData \n SocketAddress getSocketAddress \n int getOffset \n int getLength \n InetAddress getAddress \n void setSocketAddress \n byte[] getData \n int getCapacity", "output": ""}, {"instruction": "Generate java code\nreturns the size in bytes of the file that is used to store the chain with the current parameters . ", "input": " Logger log \n ReentrantLock lock \n StoredBlock lastChainHead \n NetworkParameters params \n String HEADER_MAGIC \n int RECORD_SIZE \n int FILE_PROLOGUE_BYTES \n LinkedHashMap<Sha256Hash,Object> notFoundCache \n int DEFAULT_NUM_HEADERS \n int numHeaders \n Object notFoundMarker \n FileLock fileLock \n RandomAccessFile randomAccessFile \n MappedByteBuffer buffer \n LinkedHashMap<Sha256Hash,StoredBlock> blockCache \n\n boolean removeEldestEntry \n boolean removeEldestEntry \n void setRingCursor \n StoredBlock getChainHead \n void setChainHead \n StoredBlock get \n int getRingCursor \n void initNewStore \n void close \n void put", "output": ""}, {"instruction": "Generate java code\ngets the payload of the node . ", "input": " List<DirectedAcyclicGraphNode<T>> mParents \n List<DirectedAcyclicGraphNode<T>> mChildren \n T mPayload \n\n List<DirectedAcyclicGraphNode<T>> getParents \n List<DirectedAcyclicGraphNode<T>> getChildren \n void removeChild \n void addParent \n void addChild", "output": ""}, {"instruction": "Generate java code\nreturns added date in `` yyyy-mm-dd hh : mm : ss '' format ", "input": " String ext \n Date addedDate \n int rating \n int previousPlayCounter \n Date ratingModifDate \n Date lastPlayed \n String relativeFullPath \n boolean updateRatingModifDate \n int idPath \n String filename \n boolean deleted \n float BPM \n String relativePath \n int idFile \n String sourceName \n int playCounter \n\n String getFormattedRatingModifDate \n void setIdPath \n void setAddedDate \n String getSourceName \n boolean equalsStats \n int getIdFile \n int compareTo \n void setFilename \n void setRelativePath \n int getPreviousPlayCounter \n boolean isDeleted \n int hashCode \n void setPlayCounter \n String getLastPlayedLocalTime \n void setBPM \n String getRelativeFullPath \n String getAddedDateLocalTime \n float getBPM \n void setIdFile \n Date getAddedDate \n String getExt \n Date getRatingModifDate \n void setLastPlayed \n void setRelativeFullPath \n void setPath \n void setSourceName \n String getFilename \n String getFormattedLastPlayed \n Date getLastPlayed \n boolean equals \n Object clone \n String toString \n void setUpdateRatingModifDate \n int getIdPath \n String getRelativePath \n void setRating \n int getPlayCounter \n int getRating", "output": ""}, {"instruction": "Generate java code\ngets the children nodes of the node . ", "input": " List<DirectedAcyclicGraphNode<T>> mParents \n List<DirectedAcyclicGraphNode<T>> mChildren \n T mPayload \n\n List<DirectedAcyclicGraphNode<T>> getParents \n T getPayload \n void removeChild \n void addParent \n void addChild", "output": ""}, {"instruction": "Generate java code\nreturns the first item currently in the recyclerview that is not obscured by a header . ", "input": " OrientationProvider mOrientationProvider \n StickyRecyclerHeadersAdapter mAdapter \n DimensionCalculator mDimensionCalculator \n HeaderProvider mHeaderProvider \n\n int getListLeft \n boolean hasNewHeader \n int getListTop \n void translateHeaderWithNextHeader \n Rect getDefaultHeaderOffset \n boolean isStickyHeaderBeingPushedOffscreen \n boolean itemIsObscuredByHeader \n boolean indexOutOfBounds \n Rect getHeaderBounds", "output": ""}, {"instruction": "Generate java code\nsets the reg test result details lst . ", "input": " Date lastModifiedTimeStamp \n Long feedId \n String createdBy \n Date fetcherStartTimeStamp \n Date createTimeStamp \n Long testId \n Long runId \n Date fetcherEndTimeStamp \n List<TestResultDetailsDTO> regTestResultDetailsLst \n OutcomeType outcome \n RunStatusType runStatus \n String errorMsg \n\n void setLastModifiedTimeStamp \n Date getFetcherEndTimeStamp \n void setFeedId \n void setFetcherStartTimeStamp \n Date getLastModifiedTimeStamp \n OutcomeType getOutcome \n Long getRunId \n List<TestResultDetailsDTO> getRegTestResultDetailsLst \n Long getFeedId \n void setTestId \n Long getTestId \n Date getFetcherStartTimeStamp \n void setRunId \n void setErrorMsg \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n RunStatusType getRunStatus \n Date getCreateTimeStamp \n void setOutcome \n String toString \n String getCreatedBy \n String getErrorMsg \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\ngets the test id . ", "input": " Timestamp lastModifiedTimeStamp \n Timestamp fetcherStartTimestamp \n Timestamp createTimeStamp \n long serialVersionUID \n BigDecimal batchId \n String errorMsg \n OutcomeType outcomeType \n String createdBy \n BigDecimal feedId \n long testId \n BigDecimal runId \n Timestamp fetcherEndTimeStamp \n List<RegPCLTestResultDetailsEntity> regPclTestResultDetails \n RunStatusType runStatus \n\n void setLastModifiedTimeStamp \n void setFeedId \n void setFetcherStartTimestamp \n OutcomeType getOutcomeType \n void updateLastModifiedTimeStamp \n void updateCreateTimeStamp \n BigDecimal getRunId \n void setBatchId \n List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails \n void setTestId \n RegPCLTestResultDetailsEntity removeRegPclTestResultDetail \n void setRegPclTestResultDetails \n void setErrorMsg \n RunStatusType getRunStatus \n RegPCLTestResultDetailsEntity addRegPclTestResultDetail \n String getErrorMsg \n void setRunStatus \n Timestamp getFetcherEndTimeStamp \n Timestamp getLastModifiedTimeStamp \n BigDecimal getFeedId \n void setRunId \n Timestamp getFetcherStartTimestamp \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n Timestamp getCreateTimeStamp \n BigDecimal getBatchId \n void setOutcomeType \n String getCreatedBy", "output": ""}, {"instruction": "Generate java code\ntest method for settime and todate round-trip . ", "input": " Time time \n\n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\nsets the feed config id . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n void setFileCount \n BigDecimal getDownloadSize \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\ncompression type for images to be generated from this writer . see javax.imageio.imagewriteparam #setcompressiontype string for a description of what this meansand valid range of values . ", "input": " String imageFormat \n float writeCompressionQuality \n String writeCompressionType \n int writeCompressionMode \n String DEFAULT_IMAGE_FORMAT \n\n void setWriteCompressionMode \n FSImageWriter newJpegWriter \n void setWriteCompressionQuality \n void write \n void write \n ImageWriteParam getImageWriteParameters \n ImageWriter lookupImageWriterForFormat", "output": ""}, {"instruction": "Generate java code\nreturns true if for each range in other there exists a member range in thisrange set which @linkplain range #encloses encloses it . returns true if other is empty . this is equivalent to checking if this range set #encloses each range in other . ", "input": " PlaceHolder placeHolder \n\n void add \n Set<Range<C>> asDescendingSetOfRanges \n boolean intersects \n boolean isEmpty \n void clear \n RangeSet<C> subRangeSet \n void remove \n boolean contains \n Range<C> rangeContaining \n void removeAll \n void removeAll \n void addAll \n void addAll \n int hashCode \n boolean equals \n String toString \n RangeSet<C> complement \n boolean encloses \n Set<Range<C>> asRanges \n Range<C> span", "output": ""}, {"instruction": "Generate java code\nadd variables to the context . ", "input": " Map<String,Method> functions \n ThreadLocal<ELEvaluator> current \n Context context \n ExpressionEvaluator evaluator \n Map<String,Object> vars \n\n Method resolveFunction \n void addFunction \n Object resolveVariable \n void setVariable \n void setVariable \n ELEvaluator getCurrent \n Object getVariable \n Object getVariable \n Context getContext \n T evaluate", "output": ""}, {"instruction": "Generate java code\ndetermines if the buffer contains data . ", "input": " int mode \n ByteBuffer buffer \n ByteBufferAllocator allocator \n int OUTPUT_MODE \n int INPUT_MODE \n\n void expandCapacity \n void setOutputMode \n void expand \n void setInputMode \n int length \n int available \n void clear \n String toString \n int getMode \n void ensureCapacity \n int capacity", "output": ""}, {"instruction": "Generate java code\nwrites a setstring record to the log . this log record contains the setstring operator , followed by the transaction id , the filename , number , and offset of the modified block , and the previous string value at that offset . ", "input": " Block blk \n String oldval \n int offset \n int txnum \n String newval \n\n int op \n void undo \n String toString \n void redo \n int txNumber", "output": ""}, {"instruction": "Generate java code\nthis class encapsulates the access to the dataflownode class . is this worthwhile ? todo i think it 's too confusing to have the dataflownode constructor add the created instance to the list . i think it 'd be clearer if we did that more `` procedurally '' , i.e. , create the object , then add it to the list . ", "input": " List<DataFlowNode> dataFlow \n Stack<StackObject> continueBreakReturnStack \n Logger LOGGER \n DataFlowHandler dataFlowHandler \n Stack<StackObject> braceStack \n\n List<StackObject> getContinueBreakReturnStack \n DataFlowNode createStartNode \n DataFlowNode createEndNode \n DataFlowNode getFirst \n List<StackObject> getBraceStack \n String dump \n DataFlowNode getLast \n void pushOnStack", "output": ""}, {"instruction": "Generate java code\ngets the user from the threadlocal variable . ", "input": " ThreadLocal<User> sUserThreadLocal \n\n void set \n void remove", "output": ""}, {"instruction": "Generate java code\nadd an recipient to the required recipients list ", "input": " String enableClaims \n String enableRecipients \n List<String> selectedClaims \n String attributeConsumingServiceIndex \n String singleLogoutUrl \n String enableAudiences \n String enableSignatureValidation \n List<String> selectedAudiences \n String issuer \n String certificateAlias \n String isIdPInitSSOEnabled \n String assertionConsumerUrl \n String enableAssertionSigning \n String enableSingleLogout \n List<String> selectedRecipients \n\n List<String> getSelectedAudiences \n void setIdPInitSSOEnabled \n String getAttributeConsumingServiceIndex \n String getEnableClaims \n String[] getSelectedClaimsAttay \n boolean addAudienceToList \n String[] getSelectedAudiencesArray \n void removeClaimFromList \n String getEnableSignatureValidation \n List<String> getSelectedClaims \n void removeRecipientFromList \n void setEnableAssertionSigning \n List<String> getSelectedRecipients \n void setEnableSignatureValidation \n String getAssertionConsumerUrl \n String getIssuer \n String getCertificateAlias \n void setAttributeConsumingServiceIndex \n void clearBean \n void setSelectedAttributes \n String getSingleLogoutUrl \n String[] getSelectedRecipientsArray \n boolean addClaimToList \n void setEnableAudiences \n String getEnableAssertionSigning \n void setCertificateAlias \n String getEnableAudiences \n String getEnableSingleLogout \n void setIssuer \n void setSingleLogoutUrl \n void setEnableClaims \n void setEnableRecipients \n String isIdPInitSSOEnabled \n String getEnableRecipients \n void removeAudienceFromList \n void setAssertionConsumerUrl \n void setEnableSingleLogout", "output": ""}, {"instruction": "Generate java code\ntests the fileutils #delete string method to throw an exception when trying to delete anon-existent file . ", "input": " ExpectedException mException \n TemporaryFolder mTestFolder \n\n void deleteFile \n void setLocalDirStickyBit \n void getLocalFileMode \n void changeNonExistentFile \n void moveNonExistentFile \n void moveFile \n void createFile \n void createStorageDirPath \n void changeLocalDirPermissionTests \n void concurrentCreateStorageDirPath \n void createDir \n void createBlockPath \n void changeLocalFilePermission \n void deletePathRecursively", "output": ""}, {"instruction": "Generate java code\nchecks whether the class declares an operation by the name given which is covered by the signature mask . ", "input": " Map<FieldSignature,Set<String>> fields \n Map<String,ClassStats> nestedClasses \n Map<ClassMetricKey,Double> memo \n Map<OperationSignature,Map<String,OperationStats>> operations \n\n double compute \n double compute \n void addOperation \n void addField \n ClassStats getNestedClassStats", "output": ""}, {"instruction": "Generate java code\nupdates/writes all specified user objects . ", "input": " IStoredSettings settings \n Map<String,String> legacyBackingServices \n IRuntimeManager runtimeManager \n Logger logger \n IUserService userService \n\n boolean deleteRepositoryRole \n List<String> getAllUsernames \n List<UserModel> getAllUsers \n UserModel getUserModel \n UserModel getUserModel \n boolean updateUserModel \n boolean updateUserModel \n TeamModel getTeamModel \n boolean updateTeamModel \n boolean updateTeamModel \n boolean isInternalAccount \n List<String> getTeamNamesForRepositoryRole \n boolean deleteTeam \n List<String> getUsernamesForRepositoryRole \n boolean deleteTeamModel \n UserManager start \n void setUserService \n IUserService createUserService \n List<TeamModel> getAllTeams \n String getCookie \n boolean deleteUserModel \n UserManager stop \n boolean deleteUser \n void setup \n boolean renameRepositoryRole \n List<String> getAllTeamNames \n boolean updateTeamModels", "output": ""}, {"instruction": "Generate java code\nlogs the message and throwable prepended by the filter name copy of genericservlet #log string , throwable ", "input": " String CLASSPATH_PREFIX \n FilterConfig config \n\n void init \n URL findResource \n String loadResource \n void doFilter \n void destroy", "output": ""}, {"instruction": "Generate java code\nwrites an empty response for calls that are purely one-way rpc . ", "input": " Logger LOG \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nsets the current value . ", "input": " boolean consoleMode \n org.apache.log4j.Logger logger \n int maxValue \n boolean showProgress \n ProgressMonitor progressMonitor \n StringBuffer log \n String currentMessage \n List<String> debugMessages \n TreeSet<String> warnings \n int curValue \n HashMap<String,Integer> warningCounts \n\n void setConsoleModeAndParseShowProgress \n void setShowProgress \n void setCurrentMessage \n int getMaxValue \n String getLog \n void logWarning \n ArrayList<String> getWarnings \n void logDebug \n ArrayList<String> getMessages \n boolean isConsoleMode \n List<String> getDebugMessages \n void setMaxValue \n void incrementCurValue \n boolean isRunningOnServer \n String getCurrentMessage \n void setConsoleMode \n int getCurValue \n boolean isShowProgress \n double getPercentComplete", "output": ""}, {"instruction": "Generate java code\naccessor for the json string . ", "input": " FileMapper m_fileMapper \n String m_escapedJson \n Logger m_log \n int STOP_DOWNLOAD_DELETE_FILES \n JLibTorrent m_libTorrent \n\n void addDownload \n String normalizeId \n boolean addComplete", "output": ""}, {"instruction": "Generate java code\ndoes this nodetest pass using the specified nodetester instance ? ", "input": " DocumentTraversal documentTraversal \n short[] nodeTypes \n Node rootNode \n\n short acceptNode \n DocumentTraversal getDocumentTraversal \n boolean acceptNodeType", "output": ""}, {"instruction": "Generate java code\ngets a context with the specified master address from the cache if it 's created before . otherwise creates a new one and puts it in the cache . ", "input": " ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_HEARTBEAT_POOL \n BlockMasterClientPool mBlockMasterClientPool \n Boolean mHasLocalWorker \n ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_POOL \n ConcurrentHashMapV8<InetSocketAddress,NettyChannelPool> NETTY_CHANNEL_POOL_MAP \n Map<InetSocketAddress,BlockStoreContext> CACHED_CONTEXTS \n\n BlockWorkerClient acquireWorkerClient \n void releaseBlockWorkerThriftClient \n void initializeGauges \n boolean hasLocalWorker \n void releaseBlockWorkerThriftClientHeartbeat \n void releaseWorkerClient \n CloseableResource<BlockMasterClient> acquireMasterClientResource \n void releaseNettyChannel \n BlockWorkerClientService.Client acquireBlockWorkerThriftClient \n List<WorkerNetAddress> getWorkerAddresses \n Channel acquireNettyChannel \n BlockWorkerClientService.Client acquireBlockWorkerThriftClientHeartbeat", "output": ""}, {"instruction": "Generate java code\nconvenience method for initializing a writer for the jpeg image format . ", "input": " String imageFormat \n float writeCompressionQuality \n String writeCompressionType \n int writeCompressionMode \n String DEFAULT_IMAGE_FORMAT \n\n void setWriteCompressionMode \n void setWriteCompressionType \n void setWriteCompressionQuality \n void write \n void write \n ImageWriteParam getImageWriteParameters \n ImageWriter lookupImageWriterForFormat", "output": ""}, {"instruction": "Generate java code\ncreates a redirect link from portal to oma . incoming links look like this : http://mutationassessor.org/?cm=var&var=17,7517830,g,c&fts=all outgoing links look like this : omaredirect.do?path = / & cm = var & var = 17,7517830 , g , c & fts = all ", "input": " String OMA_REDIRECT_LINK \n String SITE_PARAM \n\n String removePath \n String conditionallyPrependHttp \n String createOmaLink \n String createQueryString \n HashMap<String,String> getParameterMap \n ArrayList<String> getKeyList \n String getDelimiter", "output": ""}, {"instruction": "Generate java code\nthis call sets the threadingparameters for a jettyhttpserverengine ", "input": " Logger LOG \n Bus bus \n Container.Listener mBeanContainer \n ConcurrentHashMap<Integer,JettyHTTPServerEngine> portMap \n ThreadingParameters fallbackThreadingParameters \n int FALLBACK_THREADING_PARAMS_KEY \n Map<String,ThreadingParameters> threadingParametersMap \n Map<String,TLSServerParameters> tlsParametersMap \n BusLifeCycleManager lifeCycleManager \n\n void setTlsServerParametersMap \n MBeanServer getMBeanServer \n Bus getBus \n JettyHTTPServerEngine retrieveJettyHTTPServerEngine \n void setEnginesList \n void initComplete \n void initComplete \n void destroyForPort \n Map<String,ThreadingParameters> getThreadingParametersMap \n boolean isJetty8 \n void postShutdown \n void postShutdown \n Container.Listener getMBeanContainer \n JettyHTTPServerEngine getOrCreate \n Map<String,TLSServerParameters> getTlsServerParametersMap \n JettyHTTPServerEngine createJettyHTTPServerEngine \n JettyHTTPServerEngine createJettyHTTPServerEngine \n void setBus \n void preShutdown \n void preShutdown \n void setTLSServerParametersForPort \n void setTLSServerParametersForPort", "output": ""}, {"instruction": "Generate java code\nregisters a new generator . if a generator with the same language is already registered , it 's replaced by the new one . ", "input": " GeneratorManager INSTANCE \n Logger LOG \n Language currLanguage \n Map<Language,CodeGenerator> generators \n\n String getCodePath \n CodeGenerator getGenerator \n CodeGenerator getGenerator \n Language getCurrLanguage \n CodeGenerator removeGenerator \n CodeGenerator removeGenerator \n Set<Language> getLanguages \n GeneratorManager getInstance \n Language findLanguage \n CodeGenerator getCurrGenerator \n Map<Language,CodeGenerator> getGenerators", "output": ""}, {"instruction": "Generate java code\nconvenience method that sets a variable in the el evaluator context . ", "input": " Map<String,Method> functions \n ThreadLocal<ELEvaluator> current \n Context context \n ExpressionEvaluator evaluator \n Map<String,Object> vars \n\n void setVariables \n Method resolveFunction \n void addFunction \n Object resolveVariable \n ELEvaluator getCurrent \n Object getVariable \n Object getVariable \n Context getContext \n T evaluate", "output": ""}, {"instruction": "Generate java code\nthe index of this output in the transaction which holds it ", "input": " int NONCOINBASE_HEIGHT \n long serialVersionUID \n long index \n BigInteger value \n byte[] scriptBytes \n Sha256Hash hash \n int height \n\n BigInteger getValue \n int getHeight \n Sha256Hash getHash \n int hashCode \n void serializeToStream \n boolean equals \n String toString \n byte[] getScriptBytes", "output": ""}, {"instruction": "Generate java code\nfire a bullet . ", "input": " float xStartPos \n FloatBuffer lModelAmbient \n float zPos \n float yPos \n float MOVE_FORWARD_SPEED \n float yStartPos \n float walkbiasangle \n float walkbias \n int BULLET_INTERVAL \n long bulletTime \n int MAX_BULLETS \n float ROTATE_SPEED \n Monster[] monsters \n float xPos \n float MOVE_BACKWARD_SPEED \n int MAX_MONSTERS \n FloatBuffer lightPosition \n FloatBuffer whiteLight \n boolean[] monstersLiving \n float heading \n float STRAFE_SPEED \n float zStartPos \n ArrayList<Bullet> bullets \n\n void turnRight \n void restart \n void start \n void update \n boolean isFinished \n void walkForwards \n void renderFloor \n void walkBackwards \n void strafeLeft \n Level LoadFromFile \n void strafeRight \n void renderWalls \n void turnLeft \n Level ReadFromXML \n void render", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getofferdetailsresponse.return.detailofferdata.offerdisplay ", "input": " PlaceHolder placeHolder \n\n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos \n GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia \n GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue \n GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData \n GetOfferDetailsResponse createGetOfferDetailsResponse \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem \n GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses \n GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo", "output": ""}, {"instruction": "Generate java code\nget the number of milliseconds for the acknowledgment interval . ", "input": " DeliveryAssurance deliveryAssurance \n Long inactivityTimeout \n Long acknowledgementInterval \n String rmNamespace \n boolean sequenceTransportSecurityRequired \n String rm10AddressingNamespace \n boolean inOrder \n boolean exponentialBackoff \n Long baseRetransmissionInterval \n boolean sequenceSTRRequired \n\n void setInactivityTimeout \n void setRMNamespace \n Long getInactivityTimeout \n void setAcknowledgementInterval \n void setDeliveryAssurance \n Long getAcknowledgementInterval \n void setSequenceSTRRequired \n boolean isSequenceTransportSecurityRequired \n String getAddressingNamespace \n void setRM10AddressingNamespace \n String getRMNamespace \n ProtocolVariation getProtocolVariation \n String getRM10AddressingNamespace \n boolean isSequenceSTRRequired \n void setExponentialBackoff \n boolean isExponentialBackoff \n long getInactivityTimeoutTime \n void setInOrder \n Long getBaseRetransmissionInterval \n boolean isInOrder \n void setSequenceTransportSecurityRequired \n void setBaseRetransmissionInterval \n DeliveryAssurance getDeliveryAssurance", "output": ""}, {"instruction": "Generate java code\ncloses all client connections currently connected gracefully . note that this does not settle the actual payment channels and broadcast payment transactions , which must be done using the storedpaymentchannelserverstates which manages the states for the associatedwallet . ", "input": " HandlerFactory eventHandlerFactory \n NioServer server \n Wallet wallet \n TransactionBroadcaster broadcaster \n ProtobufParser.Listener<Protos.TwoWayChannelMessage> protobufHandlerListener \n ProtobufParser<Protos.TwoWayChannelMessage> socketProtobufHandler \n int timeoutSeconds \n PaymentChannelServer paymentChannelManager \n PaymentChannelCloseException.CloseReason closeReason \n Coin minAcceptedChannelSize \n ServerConnectionEventHandler eventHandler \n\n void bindAndStart \n ServerConnectionEventHandler onNewConnection", "output": ""}, {"instruction": "Generate java code\nthis is the standard way to report debugging information in the compiler . it reports a message of the specified level which controls the presentation of the message . to test whether such message should be reported , use `` should_report '' . note : this is a change of spec from earlier versions of report . note : this version takes an explicit position , so that position info gets properly associated with the errorinfo that gets created by enqueue . ", "input": " String types \n String verbose \n Map<String,Integer> reportTopics \n String dataflow \n Stack<String> should_report \n String frontend \n String imports \n ErrorQueue eq \n String loader \n String time \n String debug \n String cfg \n String context \n String visit \n String resolver \n Collection<String> topics \n String serialize \n boolean noReporting \n String errors \n\n boolean should_report \n boolean should_report \n boolean should_report \n void setQueue \n int level \n void pushTopic \n void popTopic \n void addTopic \n ErrorQueue getQueue \n void setTopic", "output": ""}, {"instruction": "Generate java code\ncreate an instance of access ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n RoleList createRoleList \n CheckServiceAccessRequest createCheckServiceAccessRequest \n JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n PasswordCredentials createPasswordCredentials \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n ValidateAccess createValidateAccess \n JAXBElement<ValidateAccess> createValidateAccess \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n CertificateInfo createCertificateInfo \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n RegistrationRequest createRegistrationRequest \n JAXBElement<RegistrationRequest> createRegistrationRequest \n ProjectValidation createProjectValidation \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\nsets the failed attribute name . ", "input": " Long expectedDataUnitId \n Long seqNo \n Long dataSetId \n Long dataUnitId \n String expectedValue \n String actualValue \n Long expectedDataSetId \n String errorCode \n Long testId \n String failedAttributeName \n String srcFileName \n String errorMsg \n\n void setExpectedValue \n String getExpectedValue \n Long getExpectedDataSetId \n void setExpectedDataSetId \n void setActualValue \n Long getDataSetId \n void setSrcFileName \n Long getExpectedDataUnitId \n void setExpectedDataUnitId \n String getSrcFileName \n Long getSeqNo \n String getFailedAttributeName \n void setTestId \n Long getTestId \n void setErrorCode \n String getActualValue \n Long getDataUnitId \n void setSeqNo \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setDataSetId \n String toString \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nreturns list of groups for a user . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nflush outstanding data and make sure it is acknowledged ", "input": " org.slf4j.Logger logger \n UDPEndPoint clientEndpoint \n ClientSession clientSession \n\n void sendBlocking \n int read \n UDTStatistics getStatistics \n Socket getSocket \n OutputStream getOutputStream \n UDPEndPoint getEndpoint \n void send \n InputStream getInputStream \n void connect \n void connect \n void shutdown", "output": ""}, {"instruction": "Generate java code\nadds textual information to be displayed . note that none of the information added after #apply has been called , will be displayed . ", "input": " boolean HAS_REMOTE_CONTROL_APIS \n Object mActualMetadataEditor \n int METADATA_KEY_ARTWORK \n Object mActualRemoteControlClient \n\n void setPlaybackState \n MetadataEditorCompat putBitmap \n void apply \n void removeFromMediaRouter \n void clear \n void addToMediaRouter \n Object getActualRemoteControlClientObject \n MetadataEditorCompat putLong \n MetadataEditorCompat editMetadata \n void setTransportControlFlags", "output": ""}, {"instruction": "Generate java code\nlanding land the drone ", "input": " GeneralMotorCon ourInstance \n int spin90Time \n String TAG \n int batLvl \n long threadTimer \n int spinSpeed \n CommandManager cmd \n int hoverTime \n int speed \n int spin90Speed \n ARDrone drone \n int spinTime \n\n void spin90Left \n void spinRight \n void takeoff \n void forward \n void spinLeft \n void right \n void lowerAltitude \n void spin90Right \n void setDrone \n void left \n void backward \n GeneralMotorCon getInstance \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n void raiseAltitude", "output": ""}, {"instruction": "Generate java code\noptional . this optional parameter specifies custom metadata for your group configuration . you can use the metadata parameter for customer automation , but it does not change any functionality in auto scale . there currently is no limitation on depth . ", "input": " Map<String,String> metadata \n int maxEntities \n int minEntities \n String name \n int cooldown \n\n Builder toBuilder \n ImmutableMap<String,String> getMetadata \n Builder metadata \n String getName \n int getMaxEntities \n ToStringHelper string \n Builder minEntities \n int compareTo \n int getCooldown \n int getMinEntities \n Builder maxEntities \n GroupConfiguration build \n int hashCode \n boolean equals \n Builder builder \n Builder name \n Builder cooldown \n Builder fromGroupConfiguration \n String toString", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #getdirectionofvariation . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetCourse \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nescapes javascript characters for the given string . also strips all occurrences of the word `` javascript '' from the string . ", "input": " AntiSamy as \n ServletXssUtil servletUtil \n Policy policy \n\n String getCleanInput \n String getCleanInput \n String getCleanerInput \n String getCleanerInput \n ServletXssUtil getInstance", "output": ""}, {"instruction": "Generate java code\nget the wsse valuetype attribute ", "input": " String identifier \n String wsseValueType \n boolean useKeyIdentifier \n boolean useDirectReference \n String wsse11TokenType \n\n void setWsse11TokenType \n void setWsseValueType \n String getWsse11TokenType \n String getIdentifier \n void setIdentifier \n void setUseDirectReference \n boolean isUseKeyIdentifier \n boolean isUseDirectReference \n void setUseKeyIdentifier", "output": ""}, {"instruction": "Generate java code\nnot required ", "input": " double lat \n String id_str \n String screen_name \n String place_name \n String image \n String user_name \n double lng \n Date created_at \n int loc_radius \n String user_id \n String text \n ArrayList<String> extras \n\n GenericJSONBuilder setIDstr \n GenericJSONBuilder setPlaceName \n GenericJSONBuilder addText \n GenericJSONBuilder addField \n void insert \n GenericJSONBuilder setCoordinateRadius \n GenericJSONBuilder setAuthor \n GenericJSONBuilder builder \n GenericJSONBuilder setCoordinate \n GenericJSONBuilder setCreatedTime \n void persist \n String buildFieldJSON \n GenericJSONBuilder setImage", "output": ""}, {"instruction": "Generate java code\ngets the resources . ", "input": " List<Resource> resources \n Logger LOGGER \n Map<Object,Object> bag \n\n String getProperty \n void loadProperties \n void setResources", "output": ""}, {"instruction": "Generate java code\ntests for the existence of a setting . ", "input": " Logger logger \n Properties overrides \n Set<String> removals \n\n Properties read \n int getFilesize \n long getFilesize \n Properties getSettings \n int getInteger \n String getString \n void removeSetting \n boolean saveSettings \n boolean saveSettings \n Map<String,String> getMap \n List<String> getStrings \n List<String> getStrings \n void overrideSetting \n void overrideSetting \n void overrideSetting \n long getLong \n char getChar \n String getRequiredString \n List<String> getAllKeys \n void merge \n boolean getBoolean \n List<Integer> getIntegers \n List<Integer> getIntegers", "output": ""}, {"instruction": "Generate java code\na wrapper for #valueof string . it returns null instead of throwing an exception . ", "input": " Map<String,ResourceTypeHandler> types \n ResourceTypeHandler FLASH \n ResourceTypeHandler MEDIA \n ResourceTypeHandler FILE \n String name \n ResourceTypeHandler IMAGE \n Map<ResourceTypeHandler,String> paths \n\n String getName \n ResourceTypeHandler valueOf \n int hashCode \n boolean isValid \n boolean equals \n String getPath \n ResourceTypeHandler getDefaultResourceType \n String toString", "output": ""}, {"instruction": "Generate java code\ntemplate delegator for testnode method . override to add custom logic ", "input": " PlaceHolder placeHolder \n\n void unhandled \n void testDocumentType \n void testComment \n void testNode \n void testElement \n void testEntity \n void noMoreNodes \n void testAttribute \n void testText \n void testEntityReference \n void testCDATASection \n void testProcessingInstruction", "output": ""}, {"instruction": "Generate java code\nget average elapsed . ", "input": " AtomicInteger failed \n AtomicLong totalElapsed \n AtomicInteger active \n AtomicLong succeededMaxElapsed \n ConcurrentMap<String,RpcStatus> SERVICE_STATISTICS \n ConcurrentMap<String,ConcurrentMap<String,RpcStatus>> METHOD_STATISTICS \n ConcurrentMap<String,Object> values \n AtomicLong total \n AtomicLong failedElapsed \n AtomicLong maxElapsed \n AtomicLong failedMaxElapsed \n\n long getFailedAverageElapsed \n long getSucceededMaxElapsed \n void set \n long getSucceededElapsed \n long getSucceeded \n long getSucceededAverageElapsed \n long getMaxElapsed \n RpcStatus getStatus \n RpcStatus getStatus \n void removeStatus \n void removeStatus \n long getAverageTps \n long getFailedElapsed \n long getFailedMaxElapsed \n Object get \n void endCount \n void endCount \n int getActive \n long getTotal \n long getTotalElapsed \n void beginCount \n void beginCount \n int getFailed", "output": ""}, {"instruction": "Generate java code\nsets result as ok . always for match , so not touching errorlevelfolder ", "input": " int errorLevelFolder \n String tooltip \n int errorLevel \n String value \n\n void restoreFolderErrorLevel \n void setKO \n void setKO \n boolean isWarning \n void setErrorLevel \n int getErrorLevel \n String analyseTrack \n String analyseTrackYear \n String formatNumber \n String colorField \n String colorField \n String getValue \n String analyseTrackComment \n String analyseTrackBpm \n int hashCode \n void setValue \n boolean equals \n String getDisplayToolTip \n String toString \n boolean isNotValid \n Color getDisplayColor \n String analyseTrackNumber \n String getDisplayText \n void setWarning \n void setWarning \n String analyseTrackString \n boolean isKO", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmbparser #setbearing double . ", "input": " String EXAMPLE \n RMBSentence rmb \n RMBSentence empty \n\n void testGetVelocity \n void testGetCrossTrackError \n void testArrivalStatus \n void testSetDestination \n void testSetBearing \n void testSetSteerToWithNull \n void testSetOriginId \n void testSetStatus \n void testConstructor \n void testGetBearing \n void testSetSteerTo \n void testGetSteerTo \n void testSetVelocity \n void testGetOriginId \n void testSetVelocityWithNegativeValue \n void setUp \n void testGetStatus \n void testSetBearingWithValueGreaterThanAllowed \n void testGetRange \n void testSetRange \n void testGetDestination \n void testSetCrossTrackError", "output": ""}, {"instruction": "Generate java code\ngets the path of a file with the given id . ", "input": " FileSystemMaster mFileSystemMaster \n\n long getFileId \n List<Long> getLostFiles \n List<WorkerInfo> getWorkerInfoList \n List<FileBlockInfo> getFileBlockInfoList \n FileInfo getFileInfo \n PersistenceState getFilePersistenceState", "output": ""}, {"instruction": "Generate java code\nhash code of the byte array as calculated by arrays #hashcode . note the difference between a sha256 secure bytes and the type of quick/dirty bytes used by the java hashcode method which is designed for use in bytes tables . ", "input": " Sha256Hash ZERO_HASH \n byte[] bytes \n\n Sha256Hash createDouble \n Sha256Hash hashFileContents \n boolean equals \n Sha256Hash create \n BigInteger toBigInteger \n String toString \n Sha256Hash duplicate \n int compareTo \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\nget the tag of the constant . ", "input": " byte INTEGER \n byte FIELD_REF \n byte DOUBLE \n byte UTF8 \n byte STRING \n byte FLOAT \n byte METHOD_REF \n byte NAME_AND_TYPE \n byte METHOD_TYPE \n byte LONG \n int tag \n byte METHOD_HANDLE \n Object value \n byte INTERFACE_METHOD_REF \n byte CLASS \n byte INVOKE_DYNAMIC \n\n int hashCode \n boolean equals \n Object value", "output": ""}, {"instruction": "Generate java code\nthe block header this object wraps . the referenced block object must not have any transactions in it . ", "input": " int COMPACT_SERIALIZED_SIZE \n BigInteger chainWork \n int CHAIN_WORK_BYTES \n Block header \n long serialVersionUID \n byte[] EMPTY_BYTES \n int height \n\n int getHeight \n BigInteger getChainWork \n StoredBlock deserializeCompact \n StoredBlock build \n void serializeCompact \n int hashCode \n boolean equals \n boolean moreWorkThan \n String toString \n StoredBlock getPrev", "output": ""}, {"instruction": "Generate java code\nget the advanced configuration set . by adding elements to this collection you can override the settings specified in the config.js file . ", "input": " HttpServletRequest request \n String toolbarSet \n String instanceName \n String height \n String basePath \n FCKeditorConfig config \n String value \n String width \n\n String createHtml \n void setInstanceName \n void setValue \n String escapeXml \n String createInputForVariable \n String toString \n void setToolbarSet \n void setBasePath \n void setWidth \n void setHeight \n void setConfig", "output": ""}, {"instruction": "Generate java code\nget the addition difference . ", "input": " Difference additionDifference \n Difference deletionDifference \n\n Difference getDeletionDifference \n void setAdditionDifference \n void setDeletionDifference", "output": ""}, {"instruction": "Generate java code\naccessor for the language version . ", "input": " Logger LOG \n String name \n Icon icon \n ArrayList<NotationName> notations \n String version \n\n String getNotationNameString \n String getName \n void fireEvent \n boolean removeNotation \n Icon getIcon \n String getConfigurationValue \n String getTitle \n NotationName findNotation \n NotationName getNotation \n NotationName getNotation \n List<NotationName> getAvailableNotations \n String toString \n NotationName makeNotation \n boolean sameNotationAs", "output": ""}, {"instruction": "Generate java code\ntransfer an element from the real to the virtual stack . this assumes that the virtual stack is currently empty . ", "input": " int real_next \n Stack<Integer> vstack \n Stack<Symbol> real_stack \n\n void pop \n int top \n void push \n boolean empty", "output": ""}, {"instruction": "Generate java code\nverify that the listener completes in a reasonable amount of time , and asserts that the future returns the expected data . ", "input": " ListenableFuture<?> future \n CountDownLatch countDownLatch \n\n void assertTimeout \n void run \n void assertException", "output": ""}, {"instruction": "Generate java code\nsets the internal id associated with this record ", "input": " boolean AMPLIFIED \n boolean DELETED \n int gisticID \n int peakStart \n ArrayList<CanonicalGene> genes_in_ROI \n String cytoband \n boolean amp \n int NO_SUCH_GISTIC \n int cancerStudyId \n int chromosome \n int peakEnd \n double qValue \n\n void setPeakEnd \n void setAmp \n String getCytoband \n void setPeakStart \n int getPeakStart \n void setqValue \n boolean getAmp \n int getInternalId \n void setGenes_in_ROI \n int peakSize \n int getCancerStudyId \n int getChromosome \n int getPeakEnd \n void addGene \n void setCancerStudyId \n double getqValue \n String toString \n ArrayList<CanonicalGene> getGenes_in_ROI \n void setCytoband \n void setChromosome", "output": ""}, {"instruction": "Generate java code\nadds delta to the value currently associated with key , and returns the new value . ", "input": " Map<K,Long> asMap \n ConcurrentHashMap<K,Long> map \n\n long getAndIncrement \n long incrementAndGet \n Map<K,Long> createAsMap \n Map<K,Long> asMap \n boolean removeIfZero \n boolean replace \n long decrementAndGet \n long updateAndGet \n long sum \n long put \n long remove \n boolean remove \n void removeAllZeros \n long get \n void putAll \n AtomicLongMap<K> create \n AtomicLongMap<K> create \n long getAndAdd \n long getAndAccumulate \n long accumulateAndGet \n boolean containsKey \n boolean isEmpty \n void clear \n int size \n String toString \n long getAndUpdate \n long getAndDecrement \n long putIfAbsent", "output": ""}, {"instruction": "Generate java code\nmain method for sshexample ", "input": " boolean connected \n\n void connected \n void disconnected \n void dataReceived", "output": ""}, {"instruction": "Generate java code\nremove plugin from available list ", "input": " PluginContainer activePlugins \n List<PluginManagerListener> listeners \n Logger LOG \n PluginManager singleton \n PluginContainer allPlugins \n\n void notifyContainerChanged \n void addPlugin \n void loadPlugins \n boolean isActive \n Iterator<AbstractPlugin> iterator \n int countActivePlugins \n AbstractPlugin getByName \n void loadAvailablePlugins \n int indexOf \n void addListener \n void removeAllPlugins \n Iterator<AbstractPlugin> getActivePluginIterator \n void setAllActive \n AbstractPlugin getByIndex \n void notifyActiveChanged \n void addToClasspath \n void removeListener \n void pluginStateChanged \n int indexOfActive \n int countPlugins \n void savePlugins \n void setActive \n void loadAvailableJars \n AbstractPlugin getActive \n PluginManager getInstance \n void currentPointsChanged", "output": ""}, {"instruction": "Generate java code\nreturns list of groups for a user . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nbinds this socket to the specified local serviceid . ", "input": " boolean shutdownInput \n ServalNetworkStack netImpl \n boolean streaming \n ServiceID localServiceID \n InetAddress address \n ServiceID remoteServiceID \n FileDescriptor fd \n\n InetAddress getInetAddress \n ServiceID getServiceID \n void setOption \n int available \n Object getOption \n InputStream getInputStream \n void listen \n void shutdownOutput \n void accept \n void shutdownInput \n void setPerformancePreferences \n void sendUrgentData \n boolean supportsUrgentData \n ServiceID getLocalServiceID \n FileDescriptor getFileDescriptor \n void create \n OutputStream getOutputStream \n String toString \n void close \n void connect \n void connect \n void connect \n void connect", "output": ""}, {"instruction": "Generate java code\ntest of getresponsestringcsv method , of class logentryrequest . ", "input": " LogEntryRequest instance \n\n void testGetTsSend \n void testGetTsReceived \n void testSetResponseString \n void testGetResponseString \n void testGetFaultFlag \n void testSetFaultFlag \n void testSetDuration \n void testGetErrorFlag \n void testSetThreadNumber \n void testSetTsSend \n void testSetTsReceived \n void testGetDuration \n void testGetThreadNumber", "output": ""}, {"instruction": "Generate java code\nbuilds a textbutton according to the specified parameters , encapsulating its initialization . ", "input": " PlaceHolder placeHolder \n\n Label defineLabel \n Image defineImage \n Image defineImage", "output": ""}, {"instruction": "Generate java code\nreturns a hash of the concatenated checkpoint data . ", "input": " TreeMap<Long,StoredBlock> checkpoints \n Sha256Hash dataHash \n String TEXTUAL_MAGIC \n Logger log \n int MAX_SIGNATURES \n String BINARY_MAGIC \n NetworkParameters params \n BaseEncoding BASE64 \n\n void checkpoint \n Sha256Hash readTextual \n StoredBlock getCheckpointBefore \n Sha256Hash readBinary \n int numCheckpoints", "output": ""}, {"instruction": "Generate java code\nadd a record field to the stream . \\ param value the record value to be added . ", "input": " byte[] intBuf \n int MAX_INT_BYTES \n PackFormatInputStream format \n ByteArrayOutputStream packed \n\n byte[] getValue \n void packLong \n void addShort \n void reset \n String getFormat \n void addByte \n void addInt \n void addLong \n void addByteArray \n void addByteArray \n void addString", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdtparser #istrue . ", "input": " HDMSentence hdm \n String EXAMPLE \n\n void testSetHeadingTooHigh \n void testSetHeading \n void setUp \n void testGetHeading \n void testSetNegativeHeading \n void testConstructor", "output": ""}, {"instruction": "Generate java code\nforbid all mentioned visibilities . ", "input": " Set<Signature.Visibility> visMask \n\n void restrictVisibilitiesTo \n void coverAllVisibilities \n boolean covers", "output": ""}, {"instruction": "Generate java code\nmethod ask user for an input string ", "input": " Scanner scanner \n\n char getChar \n char getChar \n int getInt \n int getInt \n int getInt \n String getStringIgnoreCase \n double getDouble \n boolean getBoolean", "output": ""}, {"instruction": "Generate java code\ngets the supported options of the command . ", "input": " Option MOUNT_SHARED_OPTION \n FileSystem mFileSystem \n Option RECURSIVE_OPTION \n Option FORCE_OPTION \n Option PROPERTY_FILE_OPTION \n Option READONLY_OPTION \n\n CommandLine parseAndValidateArgs \n int getNumOfArgs \n boolean validateArgs", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.vhwparser #setheading double . ", "input": " VHWParser vhw \n String EXAMPLE \n\n void testGetSpeedKnots \n void testSetMagneticHeading \n void testGetMagneticHeading \n void testConstructorTalkerId \n void testIsTrue \n void testSetSpeedKilometres \n void setUp \n void testSetSpeedKnots \n void testGetHeading \n void testGetSpeedKilometres \n void testConstructorString", "output": ""}, {"instruction": "Generate java code\nreturns for binary constraints the other variable from the scope . ", "input": " Hashtable<Variable,Integer> varIndexHash \n List<Variable> variables \n Hashtable<Variable,List<Constraint>> cnet \n List<Domain> domains \n List<Constraint> constraints \n\n Domain getDomain \n List<Constraint> getConstraints \n List<Constraint> getConstraints \n List<Variable> getVariables \n void removeValueFromDomain \n void setDomain \n void addConstraint \n int indexOf \n CSP copyDomains", "output": ""}, {"instruction": "Generate java code\ngets the occupancy . ", "input": " int volume \n double occupancy \n Timestamp measurement_date \n int lane_id \n long id \n double speed \n int quality \n\n void setOccupancy \n Timestamp getMeasurement_date \n int getLane_id \n long getId \n void setVolume \n void setLane_id \n void setSpeed \n int getVolume \n void setQuality \n int getQuality \n double getSpeed \n void setMeasurement_date \n void setId \n String toString", "output": ""}, {"instruction": "Generate java code\nreturns a string representation of the enumeration value . ", "input": " ScopeKindEnum SK_CLASSIFIER \n java.util.List typeName \n ScopeKindEnum SK_INSTANCE \n java.lang.String literalName \n\n java.lang.Object readResolve \n ScopeKind forName \n java.util.List refTypeName \n int hashCode \n boolean equals", "output": ""}, {"instruction": "Generate java code\nsets the document to render , lays it out , and renders it . ", "input": " Dimension dim \n XHTMLPanel panel \n\n void layout \n BufferedImage renderToImageAutoSize \n BufferedImage renderToImageAutoSize \n void setSharedContext \n Rectangle getMinimumSize \n XHTMLPanel getPanel \n SharedContext getSharedContext \n void render \n BufferedImage renderToImage \n BufferedImage renderToImage", "output": ""}, {"instruction": "Generate java code\nencodes the headline of this todoitem in an xml safe way and returns the new string . the string can be regained by running the returned string through todoparser #decode string . ", "input": " ToDoItem item \n\n String getPriority \n String getMoreInfoURL \n String getDescription", "output": ""}, {"instruction": "Generate java code\nthis methods return the account number summary for all existing user that registered in the bank . ", "input": " List<Customer> customers \n\n void addCustomer \n double totalInterestPaid \n String format", "output": ""}, {"instruction": "Generate java code\nreturns the lowest value in the dataset . the count must be non-zero . non-finite values if the dataset contains double #nan then the result is double #nan . if it contains double #negative_infinity and not double #nan then the result is double #negative_infinity . if it contains double #positive_infinity and finitevalues only then the result is the lowest finite value . if it contains double #positive_infinity only then the result is double #positive_infinity . ", "input": " long count \n double max \n double mean \n double sumOfSquaresOfDeltas \n double min \n\n void add \n double sumOfSquaresOfDeltas \n double max \n long count \n double sampleVariance \n double sum \n double populationVariance \n double sampleStandardDeviation \n double calculateNewMeanNonFinite \n void addAll \n void addAll \n void addAll \n void addAll \n void addAll \n void addAll \n double mean \n double populationStandardDeviation \n Stats snapshot", "output": ""}, {"instruction": "Generate java code\ntest of getdeviceblock method , of class device . ", "input": " Device dev \n\n void testGetType \n void setUpClass \n void testGetDeviceName_0args \n void testAddToPane \n void testGetAddress \n void tearDownClass \n void tearDown \n void testGetDeviceNames \n void testAddCapabilities \n void testToString \n void testGetImgName \n void testAddCapability \n void testGetDeviceName_Locale \n void setUp \n void testGetImage \n void testGetDeviceID \n void testGetCapabilityBlock \n void testGetCapabilities \n void testRemoveCapability", "output": ""}, {"instruction": "Generate java code\nlower altitude lowering the altitude a little bit ", "input": " GeneralMotorCon ourInstance \n int spin90Time \n String TAG \n int batLvl \n long threadTimer \n int spinSpeed \n CommandManager cmd \n int hoverTime \n int speed \n int spin90Speed \n ARDrone drone \n int spinTime \n\n void spin90Left \n void spinRight \n void takeoff \n void forward \n void spinLeft \n void right \n void spin90Right \n void landing \n void setDrone \n void left \n void backward \n GeneralMotorCon getInstance \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n void raiseAltitude", "output": ""}, {"instruction": "Generate java code\nclear the buffer . ", "input": " byte[] buffer \n int INITIAL_BUFFER_CAPACITY \n int bufferSize \n\n void add \n byte[] toArray \n boolean isEmpty \n String toString", "output": ""}, {"instruction": "Generate java code\nthe key used to sign com.google.bitcoin.core.alertmessage s . you can use com.google.bitcoin.core.eckey #verify byte , byte , byte to verifysignatures using it . ", "input": " int addressHeader \n int INTERVAL \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n long packetMagic \n int p2shHeader \n List<NetworkParameters> paramSet \n int PROTOCOL_VERSION \n Block genesisBlock \n BigInteger proofOfWorkLimit \n int subsidyDecreaseBlockCount \n int port \n BigInteger MAX_MONEY \n int TARGET_SPACING \n String[] dnsSeeds \n Map<Integer,Sha256Hash> checkpoints \n byte[] SATOSHI_KEY \n int interval \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n Sha256Hash calculateBlockPoWHash \n BigInteger getMaxMoney \n NetworkParameters getParamsFromAddressByte \n void registerParams \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n int getRetargetBlockCount \n int getRetargetBlockCount \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n long getPacketMagic \n int getPort \n boolean equals \n boolean passesCheckpoint \n boolean isAcceptableAddressVersion \n String getURIScheme \n BigInteger getProofOfWorkLimit", "output": ""}, {"instruction": "Generate java code\nget full mime type for the specified uri ", "input": " List<E> mEntries \n Map<String,SQLiteUriMatcher> instances \n Uri mBaseContentUri \n String mAuthority \n UriMatcher mUriMatcher \n String TAG \n\n E createMatcherEntry \n E createMatcherEntry \n void addSQLBuilderCallback \n void addSQLBuilderCallback \n E getMatcherEntry \n List<E> getEntries \n void addTablesSQL \n void addTablesSQL \n void addMatherEntry \n void addRawSQL \n void addRawSQL \n U getInstance \n void instantiate", "output": ""}, {"instruction": "Generate java code\nshort to little-endian bytes : writes x to given stream . ", "input": " PlaceHolder placeHolder \n\n int leb2int \n short leb2short \n void int2leb \n void int2leb \n short beb2short \n int ubyte2int", "output": ""}, {"instruction": "Generate java code\nmultiplies a householder reflection against a vector : y = i + & gamma ; u ut x the householder reflection is used in some implementations of qr decomposition . ", "input": " PlaceHolder placeHolder \n\n void mult \n double innerProdA \n double innerProdTranA \n void addOuterProd \n void rank1Update \n void rank1Update \n double innerProd \n void outerProd", "output": ""}, {"instruction": "Generate java code\ntar.xz the contents of the tree at the optionally specified revision and the optionally specified basepath to the supplied outputstream . ", "input": " Logger LOGGER \n\n boolean zip \n boolean gz \n boolean tar \n boolean tar \n void error \n boolean bzip2", "output": ""}, {"instruction": "Generate java code\ncreates instance of builder for specific language . ", "input": " String FIQL \n String DEFAULT_LANGUAGE \n\n String query", "output": ""}, {"instruction": "Generate java code\nadd the given node and its subnodes to the set of nodes . if clazz is not null , only nodes of the given class are put in the set of nodes . ", "input": " PlaceHolder placeHolder \n\n Set<T> getNodes \n void assertNumberOfNodes \n Set<T> getNodesOfType", "output": ""}, {"instruction": "Generate java code\nwhether to use the motionevent as finger touch ", "input": " HandwriterView view \n RectF mRectF \n Rect mRect \n\n boolean getOnlyPenInput \n float getScaledPenThickness \n boolean onTouchEvent \n Page getPage \n boolean getDoubleTapWhileWriting \n boolean getMoveGestureWhileWriting \n void drawPinchZoomPreview \n void destroy \n Transformation pinchZoomTransform \n void draw \n boolean useForWriting \n void redraw \n float pinchZoomScaleFactor \n void interrupt \n Context getContext \n int getMoveGestureMinDistance", "output": ""}, {"instruction": "Generate java code\nhttps is the default transport for oauth 2.0 services . by default this method will issue a warning for open endpoints ", "input": " Logger LOG \n MessageContext mc \n OAuthDataProvider dataProvider \n boolean writeOptionalParameters \n boolean blockUnsecureRequests \n Method dataProviderContextMethod \n\n boolean isWriteOptionalParameters \n void setMessageContext \n void setBlockUnsecureRequests \n OAuthDataProvider getDataProvider \n MultivaluedMap<String,String> getQueryParameters \n Client getValidClient \n Client getValidClient \n void reportInvalidRequestError \n void reportInvalidRequestError \n void reportInvalidRequestError \n void reportInvalidRequestError \n void setDataProvider \n void setWriteOptionalParameters \n MessageContext getMessageContext", "output": ""}, {"instruction": "Generate java code\nstop xmpp listener & disconnect from all xmpp servers ", "input": " ConfigurationContext configurationContext \n int WORKERS_MAX_THREADS \n XMPPServerCredentials serverCredentials \n long WORKER_KEEP_ALIVE \n Map connectionFactories \n TimeUnit TIME_UNIT \n Log log \n ExecutorService workerPool \n XMPPConnection xmppConnection \n\n void init \n EndpointReference getEPRForService \n void initializeConnectionFactories \n void start \n void destroy \n SessionContext getSessionContext \n EndpointReference[] getEPRsForService", "output": ""}, {"instruction": "Generate java code\nget string value . ", "input": " Map<String,Object> mMap \n\n JSONObject getObject \n Iterator<String> keys \n double getDouble \n JSONArray getArray \n float getFloat \n void put \n void writeJSON \n long getLong \n int getInt \n boolean contains \n Object get \n void putAll \n void putAll \n boolean getBoolean", "output": ""}, {"instruction": "Generate java code\nprocess the decoded pcm bytes . ", "input": " List listeners \n SourceDataLine line \n String filePath \n Thread playerThread \n FLACDecoder decoder \n AudioFormat fmt \n DataLine.Info info \n\n void play \n String play \n void processStreamInfo \n void stop \n void update \n void run \n void removeListener \n void decode \n void addListener", "output": ""}, {"instruction": "Generate java code\ngets the minimum encoded size of the value stored in this varint ", "input": " int originallyEncodedSize \n long value \n\n byte[] encode \n int sizeOf \n int sizeOf \n int getOriginalSizeInBytes", "output": ""}, {"instruction": "Generate java code\nwhether the serializer will produce cached mode messages ", "input": " Map<Class<? extends Message>,String> names \n int size \n Logger log \n boolean parseLazy \n int HEADER_LENGTH \n byte[] checksum \n byte[] header \n NetworkParameters params \n int COMMAND_LEN \n String command \n boolean parseRetain \n\n void seekPastMagicBytes \n void serialize \n void serialize \n Message makeMessage \n Message deserializePayload \n boolean isParseLazyMode \n BitcoinPacketHeader deserializeHeader \n Message deserialize", "output": ""}, {"instruction": "Generate java code\nsets the run status . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n void setFileCount \n BigDecimal getDownloadSize \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\nspin 90 right spin the drone 90 degrees to the right ", "input": " GeneralMotorCon ourInstance \n int spin90Time \n String TAG \n int batLvl \n long threadTimer \n int spinSpeed \n CommandManager cmd \n int hoverTime \n int speed \n int spin90Speed \n ARDrone drone \n int spinTime \n\n void spin90Left \n void spinRight \n void takeoff \n void forward \n void spinLeft \n void right \n void lowerAltitude \n void landing \n void setDrone \n void left \n void backward \n GeneralMotorCon getInstance \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n void raiseAltitude", "output": ""}, {"instruction": "Generate java code\ncreate a new map of all client ids set to zero ", "input": " ApprovedSiteService approvedSiteService \n Supplier<Map<Long,Integer>> byClientIdCache \n ClientDetailsEntityService clientService \n Supplier<Map<String,Integer>> summaryCache \n\n Integer getCountForClientId \n Map<String,Integer> computeSummaryStats \n Map<Long,Integer> computeByClientId \n void resetCache \n Map<Long,Integer> getByClientId \n Supplier<Map<Long,Integer>> createByClientIdCache \n Map<String,Integer> getSummaryStats \n Supplier<Map<String,Integer>> createSummaryCache", "output": ""}, {"instruction": "Generate java code\ncreates a deep copy of this xpathcontext . ", "input": " String OPEN \n String expression \n String PI \n String TEXT \n short type \n String EMPTY \n Map<String,String> uri2Prefix \n Map<QName,Level> attributes \n Deque<Level> path \n String SEP \n String COMMENT \n String xpath \n String ATTR \n List<Level> children \n QName name \n String CLOSE \n\n void navigateToParent \n String getName \n QName getName \n QName getName \n void appendChildren \n Map<String,String> invert \n void addAttribute \n short getType \n short getType \n void addAttributes \n int add1OrIncrement \n String getXPath \n String getXPath \n void navigateToChild \n void setChildren \n void navigateToAttribute", "output": ""}, {"instruction": "Generate java code\nhashes a key in byte array to a bucket index in non-negative integer value . ", "input": " int mKeyCount \n int BUCKET_SIZE_BYTES \n ByteBuffer mBuf \n int INDEX_HASHER_SEED \n int FINGERPRINT_HASHER_SEED \n HashFunction FINGERPRINT_HASHER \n HashFunction INDEX_HASHER \n ByteBuffer mHashTableBuf \n int MAX_PROBES \n int mNumBuckets \n\n int keyCount \n Iterator<ByteBuffer> keyIterator \n int bucketOffset \n LinearProbingIndex createEmptyIndex \n LinearProbingIndex loadFromByteArray \n int byteCount \n ByteBuffer get \n byte fingerprintHash \n byte fingerprintHash \n ByteBuffer nextKey \n boolean put \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.sentencefactory #hasparser java.lang.string . ", "input": " SentenceFactory instance \n\n void testRegisterInvalidParser \n void testUnregisterParser \n void testListParsers \n void testCreateParserWithNull \n void testCreateEmptyParserWithSentenceIdStr \n void testCreateEmptyCustomParser \n void testCreateParserWithUnregistered \n void testCreateEmptyParserWithSentenceId \n void testCreateCustomParser \n void testRegisterParserWithAlternativeBeginChar \n void testSupportedTypesRegistered \n void testCreateParser \n void testCreateParserWithRandom \n void setUp \n void testGetInstance \n void testCreateParserWithEmptyString", "output": ""}, {"instruction": "Generate java code\nthe proxiesheader directive specifies a header into which mod_remoteip will collect a list of all of the intermediate client ip addresses trusted to resolve the actual remote ip . note that intermediate remoteiptrustedproxy addresses are recorded in this header , while any intermediate remoteipinternalproxy addresses are discarded . name of the http header that holds the list of trusted proxies that has been traversed by the http request . the value of this header can be comma delimited . default value : x-forwarded-by ", "input": " Pattern commaSeparatedValuesPattern \n ESLogger log \n String remoteIpHeader \n Pattern internalProxies \n Pattern trustedProxies \n String proxiesHeader \n\n String listToCommaDelimitedString \n String getProxiesHeader \n String getTrustedProxies \n void setInternalProxies \n void setTrustedProxies \n String[] commaDelimitedListToStringArray \n String detect \n String getRemoteIpHeader \n String getInternalProxies \n void setRemoteIpHeader", "output": ""}, {"instruction": "Generate java code\nstringifies the xpath of the current node . ", "input": " String OPEN \n String expression \n String PI \n String TEXT \n short type \n String EMPTY \n Map<String,String> uri2Prefix \n Map<QName,Level> attributes \n Deque<Level> path \n String SEP \n String COMMENT \n String xpath \n String ATTR \n List<Level> children \n QName name \n String CLOSE \n\n void navigateToParent \n String getName \n QName getName \n QName getName \n void appendChildren \n Map<String,String> invert \n void addAttribute \n short getType \n short getType \n void addAttributes \n XPathContext clone \n Level clone \n int add1OrIncrement \n void navigateToChild \n void setChildren \n void navigateToAttribute", "output": ""}, {"instruction": "Generate java code\nsets the run id . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nis the dot at the end of the production ? ", "input": " production _the_production \n int _core_hash_cache \n symbol _symbol_after_dot \n int _dot_pos \n\n lr_item_core shift_core \n symbol symbol_after_dot \n int obj_hash \n String to_simple_string \n int dot_pos \n int hashCode \n boolean equals \n boolean equals \n String toString \n non_terminal dot_before_nt \n production the_production \n int core_hashCode \n boolean core_equals", "output": ""}, {"instruction": "Generate java code\ntests that building a completefileoptions with the defaults works . ", "input": " PlaceHolder placeHolder \n\n void toThrift \n void fields \n void equalsTest", "output": ""}, {"instruction": "Generate java code\nutility method for accessing permission instances by their permission id . this is used internally by hibernate to map database values to instances of this class . normal application code should never call this method . ", "input": " String m_key \n Permission NOT_SHARED \n Permission FRIENDS \n int m_permissionIndex \n Permission ALL \n long serialVersionUID \n Permission FRIEND_FRIEND \n Permission PUBLIC \n Permission FRIEND_PUBLIC \n Map PERMISSIONS \n int m_id \n\n String getKey \n int getID \n String toString", "output": ""}, {"instruction": "Generate java code\ncancel all operations . ", "input": " Context context \n DuplicateProviderListener<T,DuplicateProvider<T>> listener \n boolean cancelled \n\n void fetchItems \n boolean isCancelled \n String[] getReadPermissions \n String getCursorSelection \n void deletePairs \n Uri getContentUri \n String empty \n List<T> getItems \n void onPreExecute \n void populateItem \n String[] getCursorProjection \n boolean deleteItem \n boolean deleteItem \n T createItem \n void setListener \n void deleteItems \n void onPostExecute \n DuplicateProviderListener<T,DuplicateProvider<T>> getListener \n Context getContext \n String[] getDeletePermissions", "output": ""}, {"instruction": "Generate java code\ntranslate a set of strings to a json array , empty array returned as null ", "input": " Gson gson \n Logger logger \n\n Map readMap \n Date getAsDate \n List<EncryptionMethod> getAsEncryptionMethodList \n Set readSet \n String getAsString \n EncryptionMethod getAsJweEncryptionMethod \n Set<String> getAsStringSet \n List<JWEAlgorithm> getAsJweAlgorithmList \n void writeNullSafeArray \n Long getAsLong \n Boolean getAsBoolean \n JWSAlgorithm getAsJwsAlgorithm \n JWEAlgorithm getAsJweAlgorithm \n List<JWSAlgorithm> getAsJwsAlgorithmList \n List<String> getAsStringList", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.vhwparser #getspeedkmh . ", "input": " VHWParser vhw \n String EXAMPLE \n\n void testGetSpeedKnots \n void testSetMagneticHeading \n void testGetMagneticHeading \n void testConstructorTalkerId \n void testIsTrue \n void testSetHeading \n void testSetSpeedKilometres \n void setUp \n void testSetSpeedKnots \n void testGetHeading \n void testConstructorString", "output": ""}, {"instruction": "Generate java code\nvalidate the message . throws an exception if the message is invalid . ", "input": " int mId \n\n void encode \n ByteToMessageDecoder createFrameDecoder \n Type getType \n DataBuffer getPayloadDataBuffer \n int getId \n RPCMessage decodeMessage \n boolean hasPayload \n Type decode \n int getEncodedLength", "output": ""}, {"instruction": "Generate java code\nreturns true if the specified field is in either of the underlying scans . ", "input": " Scan s1 \n Scan s2 \n\n boolean next \n int getInt \n Constant getVal \n void beforeFirst \n String getString \n void close", "output": ""}, {"instruction": "Generate java code\nregisters the users session as authenticated . ", "input": " String EMAIL \n\n boolean isUserAuthenticated \n void logoutUser \n String getEmailId", "output": ""}, {"instruction": "Generate java code\ngets the value of the handlerclass property . ", "input": " FullyQualifiedClassType handlerClass \n List<CString> soapRole \n List<ParamValueType> initParam \n List<DisplayNameType> displayName \n List<XsdQNameType> soapHeader \n List<IconType> icon \n List<DescriptionType> description \n CString handlerName \n java.lang.String id \n\n List<ParamValueType> getInitParam \n List<DisplayNameType> getDisplayName \n void setHandlerClass \n void setHandlerName \n void setId \n CString getHandlerName \n java.lang.String getId \n List<CString> getSoapRole \n List<DescriptionType> getDescription \n List<XsdQNameType> getSoapHeader \n List<IconType> getIcon", "output": ""}, {"instruction": "Generate java code\nsave old revision information of graph ", "input": " HashMap<String,String> oldRevisionGraphMap \n Logger logger \n String revisionInformation \n\n String getaddSetUri \n void saveGraphVorMergingInMap \n String getPatchUserUri \n String getRevisionNumber \n String getCommitUri \n boolean isFastForward \n LinkedList<String> createAddedOrRemovedTripleSet \n String loadGraphVorMerging \n String getPatchMessage \n String getdeleteSetUri \n String loadGraphVorMergingFromMap \n String createRebaseQuery", "output": ""}, {"instruction": "Generate java code\nnumber of columns terminals in every row . ", "input": " int default_reduce \n int reduction_count[] \n parse_action under_term[] \n int _size \n\n void clear \n void compute_default", "output": ""}, {"instruction": "Generate java code\nretrieve the control spring so you can manipulate it to drive the positions of the other springs . ", "input": " int DEFAULT_ATTACHMENT_TENSION \n CopyOnWriteArrayList<SpringListener> mListeners \n SpringConfig mAttachmentSpringConfig \n int DEFAULT_ATTACHMENT_FRICTION \n int DEFAULT_MAIN_TENSION \n int mControlSpringIndex \n SpringConfigRegistry registry \n SpringConfig mMainSpringConfig \n SpringSystem mSpringSystem \n int DEFAULT_MAIN_FRICTION \n CopyOnWriteArrayList<Spring> mSprings \n int id \n\n SpringConfig getMainSpringConfig \n List<Spring> getAllSprings \n SpringChain setControlSpringIndex \n void onSpringActivate \n void onSpringAtRest \n SpringChain create \n SpringChain create \n void onSpringUpdate \n SpringChain addSpring \n void onSpringEndStateChange \n SpringConfig getAttachmentSpringConfig", "output": ""}, {"instruction": "Generate java code\nget information about the language extension being compiled . ", "input": " ExtensionInfo extensionInfo \n ClassFileLoader loader \n ErrorQueue eq \n Collection<JavaFileObject> outputFiles \n List<ExtensionInfo> allExtensions \n List<Job> jobs \n\n Collection<JavaFileObject> outputFiles \n int outputWidth \n ClassFileLoader loader \n CodeWriter createCodeWriter \n CodeWriter createCodeWriter \n CodeWriter createCodeWriter \n CodeWriter createCodeWriter \n List<Job> jobs \n ErrorQueue errorQueue \n boolean useFullyQualifiedNames \n boolean compile \n Goal getGoal \n boolean compileFiles \n void addExtension \n boolean serializeClassInfo \n boolean runToGoal \n boolean validate \n List<ExtensionInfo> allExtensions", "output": ""}, {"instruction": "Generate java code\nsetup ", "input": " String EXAMPLE \n RMBSentence rmb \n RMBSentence empty \n\n void testGetVelocity \n void testGetCrossTrackError \n void testArrivalStatus \n void testSetDestination \n void testSetBearing \n void testSetSteerToWithNull \n void testSetOriginId \n void testSetStatus \n void testConstructor \n void testGetBearing \n void testSetBearingWithNegativeValue \n void testSetSteerTo \n void testGetSteerTo \n void testSetVelocity \n void testGetOriginId \n void testSetVelocityWithNegativeValue \n void testGetStatus \n void testSetBearingWithValueGreaterThanAllowed \n void testGetRange \n void testSetRange \n void testGetDestination \n void testSetCrossTrackError", "output": ""}, {"instruction": "Generate java code\nsets a list of opaque permissions/scopes ", "input": " long issuedAt \n List<OAuthPermission> scopes \n UserSubject subject \n Client client \n boolean preAuthorized \n String tokenString \n long lifetime \n String tokenSecret \n\n UserSubject getSubject \n void setPreAuthorized \n void setSubject \n String getTokenKey \n boolean isPreAuthorized \n long getLifetime \n Client getClient \n long getIssuedAt \n String getTokenSecret \n List<OAuthPermission> getScopes", "output": ""}, {"instruction": "Generate java code\nget all the ingredients . ", "input": " Logger log \n IngredientRepository ingredientRepository \n int max_suggest \n\n List<String> getAutoSuggest \n Ingredient save \n List<Ingredient> save \n Ingredient findOne \n void delete", "output": ""}, {"instruction": "Generate java code\nreturn the trimmed string from the column , or an empty string if -1 . require the column to exist before the end of the data line . this can be used instead of getpartstring if na may be a meaningful value and the file is expected to have been validated . ", "input": " long NA_LONG \n String NA_STRING \n int NA_INT \n float NA_FLOAT \n\n Float getPartPercentage \n Float getPartFloat \n String adjustDataLine \n String getPartString \n Long getPartLong \n Float getPartFloat2 \n Integer getPartInt", "output": ""}, {"instruction": "Generate java code\nsets the receive timeout to the given number of milliseconds , automatically killing the connection if no messages are received for this long a timeout of 0 is interpreted as no timeout . the default is for timeoutenabled to be true but timeoutmillis to be set to 0 ie disabled . this call will reset the current progress towards the timeout . ", "input": " Timer timeoutTimer \n TimerTask timeoutTask \n boolean timeoutEnabled \n long timeoutMillis \n\n void resetTimeout \n void setTimeoutEnabled \n void timeoutOccurred", "output": ""}, {"instruction": "Generate java code\nrecurisvely lists folders in the box account . primarily used for debugging . ", "input": " String LOGIN_MESSAGE \n BoxFolder rootFolder \n String MISSING_FOLDER_MESSAGE \n BoxFolder currentFolder \n String devToken \n TextBot tb \n String INDENT_APPEND \n\n void goToFolder \n void uploadFile \n void downloadFromCurrent \n void createNewFolder \n void deleteFolder \n void uploadFolder \n void uploadFolder \n void listFolders \n void notify \n List<String> getCurrentFiles \n void uploadFileToFolder \n BoxFolder getFolder \n BoxFolder getFolder \n void setUpNotifications \n void goToRootFolder", "output": ""}, {"instruction": "Generate java code\ncloses the connection to the server , triggering the streamparser #connectionclosed event on the network-handling thread where all callbacks occur . ", "input": " ByteBuffer dbuf \n int BUFFER_SIZE_LOWER_BOUND \n Socket socket \n org.slf4j.Logger log \n int BUFFER_SIZE_UPPER_BOUND \n boolean vCloseRequested \n\n void writeBytes", "output": ""}, {"instruction": "Generate java code\nassign encoder to muxer ", "input": " String DIR_NAME \n String mOutputPath \n MediaMuxer mMediaMuxer \n int mStatredCount \n boolean DEBUG \n String TAG \n SimpleDateFormat mDateTimeFormat \n boolean mIsStarted \n int mEncoderCount \n MediaEncoder mAudioEncoder \n MediaEncoder mVideoEncoder \n\n void prepare \n String getDateTimeString \n void stop \n void addEncoder \n void startRecording \n boolean start \n File getCaptureFile \n boolean isStarted \n String getOutputPath \n void stopRecording \n void writeSampleData", "output": ""}, {"instruction": "Generate java code\nreturns where the scroll will end . valid only for `` fling '' scrolls . ", "input": " int mDuration \n Interpolator mInterpolator \n float mFinal \n boolean mFinished \n float mDurationReciprocal \n float mStart \n long mStartTime \n float mCurr \n float mDeltaX \n\n void abortAnimation \n void forceFinished \n void extendDuration \n int timePassed \n int getDuration \n float getStart \n float getCurr \n void startScroll \n boolean isFinished \n void setFinal \n boolean computeScrollOffset", "output": ""}, {"instruction": "Generate java code\nassert that a map has entries ; that is , it must not be null and must have at least one entry . assert.notempty map ; ", "input": " PlaceHolder placeHolder \n\n void isTrue \n void isTrue \n void isAssignable \n void isAssignable \n void notNull \n void notNull \n void isNull \n void isNull \n void noNullElements \n void noNullElements \n void isInstanceOf \n void isInstanceOf \n void state \n void state", "output": ""}, {"instruction": "Generate java code\ntest method for notificationcontroller #registerusersession serversession , servermessage . verifies that method throws nullpointerexception when serversession is null . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n NotificationController notificationController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication \n void testDeregisterUserSessionWithNullServerSessonThrowsException \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle \n void testGetServerSessionByUserId \n void tearDown \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\nundo the action done after the given step . for example , when the given step is 0 , nothing was done , so nothing can be undone ; and when the given step is 1 , undo the first action . undo allows users to work part way through fixing a problem , see the partial result , and explore a different alternative . ", "input": " int step \n List<JPanel> panels \n boolean started \n boolean finished \n WizardItem item \n\n void next \n void removePanel \n JPanel getCurrentPanel \n boolean canGoBack \n boolean canFinish \n int getStep \n JPanel makePanel \n void back \n int getNumSteps \n boolean isStarted \n void setToDoItem \n boolean isFinished \n int getProgress \n WizardItem getToDoItem \n boolean canGoNext \n void finish \n JPanel getPanel \n void doAction \n void doAction", "output": ""}, {"instruction": "Generate java code\ncompares this tag to the specified tag . the tag comparison is based on a comparison of key and value in that order . ", "input": " String value \n String key \n\n String getKey \n String getValue \n String toString", "output": ""}, {"instruction": "Generate java code\nset a default spacing value . this is used as a fallback when no spacing has been set for a particular direction . ", "input": " boolean mHasAliasesSet \n int END \n float[] mDefaultSpacing \n int LEFT \n int VERTICAL \n int mValueFlags \n int RIGHT \n int ALL \n int TOP \n int START \n int BOTTOM \n int[] sFlagsMap \n float[] mSpacing \n int HORIZONTAL \n\n boolean set \n float[] newFullSpacingArray \n float get \n void reset \n float[] newSpacingResultArray \n float[] newSpacingResultArray \n float getRaw \n float getWithFallback", "output": ""}, {"instruction": "Generate java code\nscans list of base packages for all resources with the given extension . ", "input": " ClasspathScanner HELPER \n String ALL_CLASS_FILES \n String CLASSPATH_URL_SCHEME \n String ALL_FILES \n String WILDCARD \n String[] PACKAGES_TO_SKIP \n\n Set<String> parsePackages \n ClasspathScanner getClasspathScanner \n Map<Class<? extends Annotation>,Collection<Class<?>>> findClassesInternal \n Map<Class<? extends Annotation>,Collection<Class<?>>> findClasses \n Map<Class<? extends Annotation>,Collection<Class<?>>> findClasses \n Map<Class<? extends Annotation>,Collection<Class<?>>> findClasses \n Map<Class<? extends Annotation>,Collection<Class<?>>> findClasses \n List<URL> findResourcesInternal", "output": ""}, {"instruction": "Generate java code\nadds knowledge about a single attribute of the current node . ", "input": " String OPEN \n String expression \n String PI \n String TEXT \n short type \n String EMPTY \n Map<String,String> uri2Prefix \n Map<QName,Level> attributes \n Deque<Level> path \n String SEP \n String COMMENT \n String xpath \n String ATTR \n List<Level> children \n QName name \n String CLOSE \n\n void navigateToParent \n String getName \n QName getName \n QName getName \n void appendChildren \n Map<String,String> invert \n short getType \n short getType \n void addAttributes \n XPathContext clone \n Level clone \n int add1OrIncrement \n String getXPath \n String getXPath \n void navigateToChild \n void setChildren \n void navigateToAttribute", "output": ""}, {"instruction": "Generate java code\ndetermine the content type of the given message . this method will try the registered rules in turn until the first rule matches . ", "input": " String defaultContentTypeProperty \n List<ContentTypeRule> rules \n\n String getDefaultContentTypeProperty \n void addRule", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getofferdetailsresponse.return.detailofferdata.fulfillmentpartner ", "input": " PlaceHolder placeHolder \n\n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos \n GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue \n GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData \n GetOfferDetailsResponse createGetOfferDetailsResponse \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem \n GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses \n GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "output": ""}, {"instruction": "Generate java code\nsets the items . ", "input": " long serialVersionUID \n ItemList<T> items \n ResponseStatus status \n\n ItemList<T> getItems \n String toString \n ResponseStatus getStatus \n void setStatus", "output": ""}, {"instruction": "Generate java code\nchecks if a given payload is in a root of the dag . ", "input": " List<DirectedAcyclicGraphNode<T>> mRoots \n Map<T,DirectedAcyclicGraphNode<T>> mIndex \n\n void add \n void deleteLeaf \n List<T> getParents \n List<T> sortTopologically \n List<T> getChildren \n boolean contains \n List<T> getRoots \n List<T> getAllInTopologicalOrder", "output": ""}, {"instruction": "Generate java code\nreturn the len of a file . ", "input": " PlaceHolder placeHolder \n\n long fs_dirSize \n FileStatus getFileStatus \n long fs_blockSize \n FileSystem getFileSystem \n boolean fs_isDir \n boolean fs_exists", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.sentencefactory #createparser talkerid , sentenceid . ", "input": " SentenceFactory instance \n\n void testRegisterInvalidParser \n void testHasParser \n void testUnregisterParser \n void testCreateParserWithNull \n void testCreateEmptyParserWithSentenceIdStr \n void testCreateEmptyCustomParser \n void testCreateParserWithUnregistered \n void testCreateEmptyParserWithSentenceId \n void testCreateCustomParser \n void testRegisterParserWithAlternativeBeginChar \n void testSupportedTypesRegistered \n void testCreateParser \n void testCreateParserWithRandom \n void setUp \n void testGetInstance \n void testCreateParserWithEmptyString", "output": ""}, {"instruction": "Generate java code\ngets the global chromosomal stop . ", "input": " long tStart \n long qStart \n long tStop \n int blockSize \n\n long getQStart \n long getTStart \n int getBlockSize", "output": ""}, {"instruction": "Generate java code\nreturns the starting count number for the count down animation . ", "input": " TextView mTextView \n Animation mAnimation \n int mCurrentCount \n Handler mHandler \n int mStartCount \n CountDownListener mListener \n Runnable mCountDown \n\n void cancel \n Animation getAnimation \n void start \n void onCountDownEnd \n void run \n void setCountDownListener \n void setStartCount \n void setAnimation", "output": ""}, {"instruction": "Generate java code\nestimates the number of output records in the join . the formula is : r indexjoin p1 , p2 , idx = r p1 r idx ", "input": " IndexInfo ii \n Plan p1 \n Plan p2 \n String joinfield \n Schema sch \n\n Schema schema \n int blocksAccessed \n int distinctValues \n Scan open", "output": ""}, {"instruction": "Generate java code\nreturns a list of space-separated strings from the specified key . ", "input": " boolean spaceDelimited \n String SINCE \n String defaultValue \n boolean caseSensitive \n String SPACE_DELIMITED \n String description \n long serialVersionUID \n String RESTART_REQUIRED \n boolean restartRequired \n String name \n String CASE_SENSITIVE \n String currentValue \n String since \n\n char getChar \n boolean getBoolean \n int getInteger \n String getString \n Map<String,String> getMap \n boolean isDefaultValue", "output": ""}, {"instruction": "Generate java code\nclears the list of collected events . ", "input": " List<SentenceEvent> events \n SentenceReader reader \n List<ProviderListener<T>> listeners \n\n void fireProviderEvent \n void readingStopped \n boolean hasAll \n T createProviderEvent \n boolean isReady \n boolean isValid \n boolean hasOne \n void readingStarted \n void removeListener \n void readingPaused \n void sentenceRead \n List<Sentence> getSentences \n void addListener \n boolean validate", "output": ""}, {"instruction": "Generate java code\nsets up the constructors before a test run . ", "input": " ClientRWLock mClientRWLock \n Lock mReadLock \n Lock mWriteLock \n\n void unlock \n void lockInterruptibly \n void notSameLock \n void referenceCounting \n void tryLockTestFail", "output": ""}, {"instruction": "Generate java code\nset the hour of day . ", "input": " int offsetHours \n int offsetMinutes \n double seconds \n int minutes \n int hour \n String TIME_PATTERN \n\n int getOffsetHours \n Date toDate \n String toISO8601 \n void setMinutes \n long getMilliseconds \n void setOffsetMinutes \n int getMinutes \n double getSeconds \n int hashCode \n void setSeconds \n boolean equals \n int getOffsetMinutes \n int getHour \n String toString \n void setOffsetHours \n void setTime", "output": ""}, {"instruction": "Generate java code\nfactory for evictor . ", "input": " PlaceHolder placeHolder \n\n EvictionPlan freeSpaceWithView", "output": ""}, {"instruction": "Generate java code\nreturns the time in seconds when this token was issued at ", "input": " long issuedAt \n List<OAuthPermission> scopes \n UserSubject subject \n Client client \n boolean preAuthorized \n String tokenString \n long lifetime \n String tokenSecret \n\n void setScopes \n UserSubject getSubject \n void setPreAuthorized \n void setSubject \n String getTokenKey \n boolean isPreAuthorized \n long getLifetime \n Client getClient \n String getTokenSecret \n List<OAuthPermission> getScopes", "output": ""}, {"instruction": "Generate java code\nturns the iterable into a list . ", "input": " Predicate<? super T> filter \n boolean iterated \n Iterator<T> i \n Mapper<? super F,T> mapper \n T lookAhead \n E element \n\n Iterable<E> singleton \n Iterable<T> filter \n boolean all \n E next \n T next \n T next \n Iterable<E> cast \n int count \n boolean hasNext \n boolean hasNext \n boolean hasNext \n Iterable<T> map \n boolean any \n void remove \n void remove \n void remove", "output": ""}, {"instruction": "Generate java code\nimplementation of portaluserdao ", "input": " Log log \n NamedParameterJdbcTemplate namedParameterJdbcTemplate \n\n Collection<String> getUserAuthorities \n void addPortalUser \n void addPortalUserAuthorities \n User getPortalUser", "output": ""}, {"instruction": "Generate java code\nreturns an eigendecomposition that has been optimized for the specified matrix size.if the input matrix is symmetric within tolerance then the symmetric algorithm will be used , otherwise a general purpose eigenvalue decomposition is used . ", "input": " PlaceHolder placeHolder \n\n SingularValueDecomposition<DenseMatrix64F> svd \n TridiagonalSimilarDecomposition<DenseMatrix64F> tridiagonal \n QRDecomposition<DenseMatrix64F> qr \n boolean decomposeSafe \n LUDecomposition<DenseMatrix64F> lu \n CholeskyDecomposition<DenseMatrix64F> chol \n CholeskyDecompositionLDL_D64 cholLDL \n QRPDecomposition<DenseMatrix64F> qrp \n double quality \n double quality \n double quality", "output": ""}, {"instruction": "Generate java code\nregisters a listener that is notified of each comparison . ", "input": " List<ComparisonListener> matchListeners \n List<ComparisonListener> compListeners \n List<ComparisonListener> diffListeners \n\n void addDifferenceListener \n void addMatchListener \n void fire \n void fireComparisonPerformed", "output": ""}, {"instruction": "Generate java code\nreturns the int identifier of the type . note : this is only used for getting the int representation of the type for alluxio.worker.dataservermessage , since that class needs to manually encode all messages . alluxio.worker.dataservermessage and this method should no longer be neededwhen the client is converted to use netty . ", "input": " int mId \n\n void encode \n ByteToMessageDecoder createFrameDecoder \n Type getType \n DataBuffer getPayloadDataBuffer \n RPCMessage decodeMessage \n boolean hasPayload \n Type decode \n int getEncodedLength \n void validate", "output": ""}, {"instruction": "Generate java code\nthe cofactor of a matrix ", "input": " PlaceHolder placeHolder \n\n int changeSign \n Matrix add \n Matrix inverse \n Matrix subtract \n Matrix transpose \n Matrix multiply \n Matrix createSubMatrix \n double determinant", "output": ""}, {"instruction": "Generate java code\nconfigure if the client should cache tokens locally or not ", "input": " int defaultExpireTime \n HttpClient httpClient \n OAuth2Authentication auth \n Map<String,TokenCacheObject> authCache \n HttpComponentsClientHttpRequestFactory factory \n OAuth2AccessToken token \n IntrospectionConfigurationService introspectionConfigurationService \n boolean forceCacheExpireTime \n boolean cacheNonExpiringTokens \n Date cacheExpire \n boolean cacheTokens \n Logger logger \n IntrospectionAuthorityGranter introspectionAuthorityGranter \n\n int getDefaultExpireTime \n boolean isCacheNonExpiringTokens \n OAuth2AccessToken createAccessToken \n void setForceCacheExpireTime \n void setIntrospectionAuthorityGranter \n OAuth2Authentication loadAuthentication \n void setDefaultExpireTime \n TokenCacheObject parseToken \n void setCacheNonExpiringTokens \n Authentication createAuthentication \n IntrospectionConfigurationService getIntrospectionConfigurationService \n boolean isForceCacheExpireTime \n OAuth2Request createStoredRequest \n boolean isCacheTokens \n void setIntrospectionConfigurationService \n IntrospectionAuthorityGranter getIntrospectionAuthorityGranter \n OAuth2AccessToken readAccessToken \n TokenCacheObject checkCache", "output": ""}, {"instruction": "Generate java code\nhandy method to find a certain pattern into a file . while this method lives in the fileutils , it was designed with with unit test in mind to check result redirected into a file ", "input": " PlaceHolder placeHolder \n\n String getFileNameWithoutExtension \n String readFilelist \n String normalizeFilename \n List<DataSource> collectFiles \n List<DataSource> collect", "output": ""}, {"instruction": "Generate java code\nreturn the servletconfig associated with this instance . ", "input": " DAVProcessor processor \n ServletContext context \n DAVLogger logger \n DAVRepository repository \n ServletConfig config \n\n void init \n ServletContext getServletContext \n void service \n String getRepositoryKey \n void destroy \n String getServletInfo \n void notify", "output": ""}, {"instruction": "Generate java code\nreturns the schema of the sorted table , which is the same as in the underlying query . ", "input": " Plan p \n RecordComparator comp \n Transaction tx \n Schema sch \n\n List<TempTable> splitIntoRuns \n int blocksAccessed \n int distinctValues \n int recordsOutput \n boolean copy \n List<TempTable> doAMergeIteration \n TempTable mergeTwoRuns \n Scan open", "output": ""}, {"instruction": "Generate java code\ntest of setduration method , of class logentryrequest . ", "input": " LogEntryRequest instance \n\n void testGetResponseStringCsv \n void testGetTsSend \n void testGetTsReceived \n void testSetResponseString \n void testGetResponseString \n void testGetFaultFlag \n void testSetFaultFlag \n void testGetErrorFlag \n void testSetThreadNumber \n void testSetTsSend \n void testSetTsReceived \n void testGetDuration \n void testGetThreadNumber", "output": ""}, {"instruction": "Generate java code\nmoves the scan to the next record . the method moves to the next index record , if possible . otherwise , it moves to the next lhs record and the first index record . if there are no more lhs records , the method returns false . ", "input": " Scan s \n String joinfield \n Index idx \n TableScan ts \n\n int getInt \n Constant getVal \n void resetIndex \n void beforeFirst \n String getString \n void close \n boolean hasField", "output": ""}, {"instruction": "Generate java code\nreturns the population covariance of the values . the count must be non-zero . this is guaranteed to return zero if the dataset contains a single pair of finite values . it is not guaranteed to return zero when the dataset consists of the same pair of values multiple times , due to numerical errors . non-finite values if the dataset contains any non-finite values double #positive_infinity , double #negative_infinity , or double #nan then the result is double #nan . ", "input": " StatsAccumulator yStats \n double sumOfProductsOfDeltas \n StatsAccumulator xStats \n\n void add \n Stats yStats \n void addAll \n double sampleCovariance \n double ensurePositive \n double ensureInUnitRange \n long count \n double pearsonsCorrelationCoefficient \n LinearTransformation leastSquaresFit \n Stats xStats \n PairedStats snapshot", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.zdaparser #getlocalzoneminutes . ", "input": " String EXAMPLE \n ZDAParser zda \n ZDAParser empty \n\n void testGetYear \n void testGetDate \n void testSetTimeAndLocalZone \n void testConstructor \n void testGetTime \n void testToDate \n void testSetLocalZoneMinutes \n void testSetLocalZoneHours \n void testSetTime \n void testGetDay \n void setUp \n void testGetMonth \n void testSetDate \n void testGetLocalZoneHours", "output": ""}, {"instruction": "Generate java code\nsets the start time . ", "input": " Long totalElapsedMinutes \n List<TestResultDTO> testResultLst \n String startTime \n String endTime \n Long batchId \n String batchStatus \n Long totalElapsedSeconds \n\n void setBatchStatus \n Long getTotalElapsedSeconds \n void setBatchId \n void setTotalElapsedMinutes \n void setTestResultLst \n String getEndTime \n Long getTotalElapsedMinutes \n void setEndTime \n Long getBatchId \n void setTotalElapsedSeconds \n String toString \n String getStartTime \n List<TestResultDTO> getTestResultLst \n String getBatchStatus", "output": ""}, {"instruction": "Generate java code\nreturns true if the specified field is in the schema ", "input": " int length \n int type \n Map<String,FieldInfo> info \n\n void add \n void addStringField \n void addAll \n void addField \n void addIntField \n int length \n Collection<String> fields \n int type", "output": ""}, {"instruction": "Generate java code\ncompares to a specific object . ", "input": " Set<InodeFile> mFiles \n long sTtlIntervalMs \n long mTtlIntervalStartTimeMs \n\n void removeFile \n long getTtlIntervalMs \n int hashCode \n int compareTo \n Set<InodeFile> getFiles \n long getTtlIntervalStartTimeMs \n long getTtlIntervalEndTimeMs \n void addFile", "output": ""}, {"instruction": "Generate java code\nreturns the number of eigenvalues/eigenvectors . this is the matrix 's dimension . ", "input": " DenseMatrix64F mat \n EigenDecomposition<DenseMatrix64F> eig \n\n Complex64F getEigenvalue \n T getEigenVector \n EigenDecomposition getEVD \n int getIndexMax \n int getIndexMin \n double quality", "output": ""}, {"instruction": "Generate java code\ncreate an instance of checkserviceaccessrequest ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n RoleList createRoleList \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n PasswordCredentials createPasswordCredentials \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n ValidateAccess createValidateAccess \n JAXBElement<ValidateAccess> createValidateAccess \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n CertificateInfo createCertificateInfo \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n RegistrationRequest createRegistrationRequest \n JAXBElement<RegistrationRequest> createRegistrationRequest \n Access createAccess \n JAXBElement<Access> createAccess \n ProjectValidation createProjectValidation \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\nsets the feed id . ", "input": " String feedId \n String destFileName \n String testId \n\n void setDestFileName \n String toString \n String getFeedId \n void setTestId \n String getTestId \n String getDestFileName", "output": ""}, {"instruction": "Generate java code\ninvoked to request the service to stop . by default this method does nothing . ", "input": " Logger logger \n Service delegate \n\n void doStop \n void run \n Throwable failureCause \n String serviceName \n Service startAsync \n void shutDown \n boolean isRunning \n void startUp \n Executor executor \n void doStart \n void awaitTerminated \n void awaitTerminated \n Service stopAsync \n String toString \n String toString \n State state \n void awaitRunning \n void awaitRunning \n void addListener", "output": ""}, {"instruction": "Generate java code\nreturns gammas from the householder operations for the u matrix . ", "input": " double gammasV[] \n int min \n double gammasU[] \n double b[] \n double u[] \n DenseMatrix64F UBV \n int m \n int n \n\n void init \n DenseMatrix64F handleV \n DenseMatrix64F handleU \n boolean decompose \n void getDiagonal \n boolean _decompose \n boolean inputModified \n DenseMatrix64F getU \n DenseMatrix64F getV \n DenseMatrix64F handleB \n void computeV \n void computeU \n DenseMatrix64F getUBV \n DenseMatrix64F getB \n double[] getGammasV", "output": ""}, {"instruction": "Generate java code\nretrieve the physical transformed bounds geom + effect + clip + transform of a node . ", "input": " PlaceHolder placeHolder \n\n Bounds translateBounds \n Bounds nodeBoundsInScene \n boolean areBoundsVisible \n Bounds makeSceneBounds \n Bounds bounds \n Bounds bounds \n Bounds bounds \n Bounds bounds \n Bounds bounds \n Bounds bounds \n Bounds nodeBoundsInLocal \n Bounds limitToVisibleBounds \n Bounds intersectBounds \n Point2D byOffset \n Bounds nodeBounds \n Bounds boundsOnScreen \n Bounds boundsOnScreen \n Bounds boundsOnScreen \n Bounds boundsOnScreen", "output": ""}, {"instruction": "Generate java code\nsets the value of the maptype property . ", "input": " MapType mapType \n\n MapType getMapType", "output": ""}, {"instruction": "Generate java code\ncheck whether the value is greater than or equals 0 . ", "input": " int MAX_NODE_NAME_LEN \n\n int checkInteger \n String validateActionName \n T notNull \n Date checkUTC \n int checkGEZero \n boolean isMember \n String notEmpty \n List<String> notEmptyElements \n TimeZone checkTimeZone \n List<T> notNullElements \n boolean isValidIdentifier", "output": ""}, {"instruction": "Generate java code\ntests the customauthenticationprovider #customauthenticationprovider string constructor to throw an exception when the class can not be found . ", "input": " ExpectedException mThrown \n\n void authenticate \n void mockCustomProvider \n void classNotProvider", "output": ""}, {"instruction": "Generate java code\ntests a null return . ", "input": " Map<String,Object> stormConf \n ApplicationContext applicationContextMock \n Tuple tupleMock \n OutputCollector outputCollectorMock \n OutputFieldsDeclarer outputFieldsDeclarerMock \n ArgumentCaptor<Fields> outputFieldsCaptor \n TopologyContext topologyContextMock \n\n void executionException \n void init \n void prototypeIntegrationRun \n void sideOperation \n void cleanup \n void run \n void pipe \n void bindingException \n void frameworkError \n void multiplexPassThroughWithScatter \n void passThroughOverlap", "output": ""}, {"instruction": "Generate java code\nreturns an escaper instance that escapes strings so they can be safely included inurl path segments . the returned escaper escapes all non-ascii characters , even though many of these are accepted in modern urls . if the escaper were to leave these characters unescaped , they would be escaped by the consumer at parse time , anyway . additionally , the escaper escapes the slash character '' / '' . while slashes are acceptable in url paths , they are considered by the specification to be separators between `` path segments . '' this implies that , if you wish for your path to contain slashes , you must escape each segment separately and then join them . when escaping a string , the following rules apply : the alphanumeric characters `` a '' through `` z '' , `` a '' through `` z '' and `` 0 '' through `` 9 '' remain the same . the unreserved characters '' . '' , '' - '' , '' ~ '' , and '' _ '' remain the same . the general delimiters '' @ '' and '' : '' remain the same . the subdelimiters '' ! '' , `` $ '' , '' & '' , '' ' '' , '' '' , '' '' , '' '' , '' + '' , '' , '' , '' ; '' , and '' = '' remain the same . the space character '' '' is converted into % 20 . all other characters are converted into one or more bytes using utf-8 encoding and each byte is then represented by the 3-character string '' % xy '' , where `` xy '' is the two-digit , uppercase , hexadecimal representation of the byte value . note : unlike other escapers , url escapers produce uppercase hexadecimal sequences . ", "input": " String URL_FORM_PARAMETER_OTHER_SAFE_CHARS \n Escaper URL_FORM_PARAMETER_ESCAPER \n Escaper URL_FRAGMENT_ESCAPER \n Escaper URL_PATH_SEGMENT_ESCAPER \n String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS \n\n Escaper urlFragmentEscaper \n Escaper urlFormParameterEscaper", "output": ""}, {"instruction": "Generate java code\ngets the seq no . ", "input": " Long expectedDataUnitId \n Long seqNo \n Long dataSetId \n Long dataUnitId \n String expectedValue \n String actualValue \n Long expectedDataSetId \n String errorCode \n Long testId \n String failedAttributeName \n String srcFileName \n String errorMsg \n\n void setExpectedValue \n String getExpectedValue \n Long getExpectedDataSetId \n void setExpectedDataSetId \n void setActualValue \n Long getDataSetId \n void setSrcFileName \n Long getExpectedDataUnitId \n void setExpectedDataUnitId \n String getSrcFileName \n String getFailedAttributeName \n void setTestId \n void setFailedAttributeName \n Long getTestId \n void setErrorCode \n String getActualValue \n Long getDataUnitId \n void setSeqNo \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setDataSetId \n String toString \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nwrite 24-bit of the given value in big-endian order to the buffer ", "input": " ByteBuffer mWriter \n byte[] mBuffer \n\n BufferedByteWriter putLen8 \n BufferedByteWriter put16 \n BufferedByteWriter put16 \n BufferedByteWriter putLen16 \n byte[] toByteArray \n void ensureCapacity \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put \n BufferedByteWriter put \n BufferedByteWriter put32 \n BufferedByteWriter put32 \n BufferedByteWriter put32", "output": ""}, {"instruction": "Generate java code\nfrees database connection . ", "input": " Log LOG \n Map<String,Integer> activeConnectionCount \n DataSource ds \n\n DataSource getDataSource \n Long readLongFromResultSet \n void logMessage \n void disableForeignKeyCheck \n DataSource initDataSource \n Integer readIntegerFromResultSet \n void enableForeignKeyCheck \n void setDataSource \n Connection getDbConnection \n Connection getDbConnection \n Double readDoubleFromResultSet \n void closeConnection \n void closeConnection", "output": ""}, {"instruction": "Generate java code\nadd an uplink to this node . ", "input": " int edgeOffset \n FigNode figure \n float UPLINK_FACTOR \n List<ClassdiagramNode> uplinks \n int rank \n List<ClassdiagramNode> downlinks \n int NORANK \n int column \n int placementHint \n float weight \n int NOCOLUMN \n int NOWEIGHT \n\n Vector<ClassdiagramNode> getUplinks \n Point getLocation \n boolean isComment \n List<ClassdiagramNode> getUpNodes \n float getWeight \n FigNode getFigure \n Vector<ClassdiagramNode> getDownlinks \n int compareTo \n void setColumn \n void addDownlink \n void setLocation \n void setEdgeOffset \n boolean isStandalone \n int getColumn \n float getSubtreeWeight \n float calculateWeight \n void setRank \n void addRank \n int getTypeOrderNumer \n int getEdgeOffset \n int getRank \n void setWeight \n boolean isPackage \n int getLevel \n Dimension getSize \n void setPlacementHint \n int getPlacementHint \n void setFigure \n List<ClassdiagramNode> getDownNodes", "output": ""}, {"instruction": "Generate java code\ntests the storagetierview #getdirviews method . ", "input": " StorageTier mTestTier \n int TEST_TIER_LEVEL \n ExpectedException mThrown \n TemporaryFolder mTestFolder \n StorageTierView mTestTierView \n\n void getDirView \n void before \n void getDirViewBadIndex \n void getTierViewAlias \n void getTierViewOrdinal", "output": ""}, {"instruction": "Generate java code\ncheck if this itemset appears in a given period ", "input": " Integer item \n int sumIutilP \n int sumIutilN \n List<Element>[] periodsElements \n int periodsSumIutilRutil[] \n\n List<Element> getElementsOfPeriod \n double getSumIRUtilsInPeriod \n void addElement \n void construct \n void construct \n Element findElementWithTID", "output": ""}, {"instruction": "Generate java code\nreturns true if this registration represents the result data sent by a pulling gitblit instance . ", "input": " boolean mirror \n boolean mergeAccounts \n boolean notifyOnError \n long serialVersionUID \n String url \n String token \n String frequency \n Map<String,FederationPullStatus> results \n String folder \n String name \n boolean sendStatus \n Date lastPull \n boolean bare \n List<String> exclusions \n Date nextPull \n List<String> inclusions \n FederationPullStatus status \n\n List<RepositoryStatus> getStatusList \n void updateStatus \n FederationPullStatus getLowestStatus \n String toString \n int compareTo \n int compareTo \n boolean isIncluded", "output": ""}, {"instruction": "Generate java code\ncreates a scriptpubkey that encodes payment to the given raw public key . ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder op \n Script updateScriptWithSignature \n Script createOpReturnScript \n ScriptBuilder data \n ScriptBuilder data \n Script createMultiSigInputScriptBytes \n Script createMultiSigInputScriptBytes \n ScriptBuilder smallNum \n ScriptBuilder smallNum \n Script createRedeemScript \n ScriptBuilder addChunk \n ScriptBuilder addChunk \n Script createInputScript \n Script createInputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript \n Script createMultiSigOutputScript \n Script build \n Script createP2SHMultiSigInputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript", "output": ""}, {"instruction": "Generate java code\nadds an array of cookie http cookies . cookies are added individually and in the given array order . if any of the given cookies has already expired it will not be added , but existing values will still be removed . ", "input": " long serialVersionUID \n TreeSet<Cookie> cookies \n\n void addCookie \n boolean clearExpired \n List<Cookie> getCookies \n void clear \n String toString", "output": ""}, {"instruction": "Generate java code\nreturns the x coordinate of this point2d in double precision . ", "input": " double x \n double y \n\n double getY \n double distance", "output": ""}, {"instruction": "Generate java code\nconverts a list of objects to a string . ", "input": " String ALPHANUM \n Random RANDOM \n Logger LOG \n\n T createNewClassInstance \n boolean isUfsObjectStorage \n String randomString \n String argsToString \n void sleepMs \n void sleepMs \n String stripPrefixIfPresent \n String[] toStringArray \n List<String> getUnixGroups \n long getCurrentMs \n String getPrimaryGroupName \n String stripSuffixIfPresent \n String getValueFromStaticMapping \n void warmUpLoop \n void waitFor \n List<String> getGroups \n byte[] randomBytes", "output": ""}, {"instruction": "Generate java code\nreturns the current number of entries in the map . ", "input": " Object DELETED \n int _size \n int[] _values \n int _mask \n int NULL \n Object[] _keys \n\n int get \n void clear \n void resize \n String toString \n int put \n int remove", "output": ""}, {"instruction": "Generate java code\nget the array of items stored in the original q-matrix ", "input": " QMatrix originalMatrix \n List<MatrixPosition> positions \n\n int getLocalSequenceUtility \n int getItemUtility \n int getItemUtility \n int getRemainingUtility", "output": ""}, {"instruction": "Generate java code\nrelease the underlying buffer of previous/current read response . ", "input": " Callable<Bootstrap> mClientBootstrap \n RPCBlockReadResponse mReadResponse \n Counter NETTY_BLOCK_READ_FAILURES \n Logger LOG \n Counter NETTY_BLOCK_READ_OPS \n\n ByteBuffer readRemoteBlock", "output": ""}, {"instruction": "Generate java code\nreturns whether the entityaibase should begin execution . ", "input": " Entity theTarget \n Item lastAttackedItem \n boolean activated \n\n void updateLastTarget \n Entity getLastTarget", "output": ""}, {"instruction": "Generate java code\nperform a shift in a random direction that is of the same magnitude as the elements in the matrix . ", "input": " double c \n EigenvalueSmall eigenSmall \n int numSplits \n int numExceptional \n double bulge \n int steps \n int N \n double c2 \n double cs \n DenseMatrix64F Q \n int splits[] \n Random rand \n double s \n double diag[] \n int x1 \n int x2 \n double off[] \n int lastExceptional \n double s2 \n\n double computeWilkinsonShift \n void eigenvalue2by2 \n boolean nextSplit \n void createBulge \n double[] copyDiag \n void incrementSteps \n void computeRotation \n void printMatrix \n double[] swapOff \n void createBulge2by2 \n boolean isZero \n void setQ \n void removeBulge \n double[] copyEigenvalues \n void removeBulgeEnd \n void init \n double computeShift \n double[] swapDiag \n void setSubmatrix \n int getMatrixSize \n void updateQ \n double[] copyOff \n void resetSteps \n void reset \n void performImplicitSingleStep", "output": ""}, {"instruction": "Generate java code\ndoes the set contain a particular item ? ", "input": " Integer hashcode_cache \n HashMap<lalr_item,lalr_item> _all \n\n lalr_item add \n void add \n void not_null \n boolean is_superset_of \n void remove \n void remove \n Iterator<lalr_item> iterator \n int size \n lalr_item find \n int hashCode \n lalr_item get_one \n boolean equals \n boolean equals \n boolean is_subset_of \n void compute_closure \n String toString", "output": ""}, {"instruction": "Generate java code\nfactory for remoteblockwriter . ", "input": " PlaceHolder placeHolder \n\n void write \n void open", "output": ""}, {"instruction": "Generate java code\nreturns true if two doubles are considered equal . tests if the absolute difference between the two doubles has a difference less then a given double epsilon . determining the given epsilon is highly dependant on the precision of the doubles that are being compared . ", "input": " double EPSILON \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\ngets the value of the chain property . ", "input": " CertificateChainInfo chain \n\n void setChain", "output": ""}, {"instruction": "Generate java code\ncompatible with the equals implementation . ", "input": " JobExitStatus NOOP \n JobExitStatus FILES_AVAILABLE \n JobExitStatus CAPTURE_SOURCE_METADATA_ERRORS \n JobExitStatus SOURCE_DELETION_ERRORS \n JobExitStatus DOWNLOAD_ERRORS \n JobExitStatus CONFIG_VALIDATION_FAIL \n JobExitStatus MOVEFILES_WORKAREA_ERRORS \n JobExitStatus EXECUTING \n JobExitStatus DB_NOT_ACCESSABLE \n JobExitStatus ANOTHER_FETCHER_IS_RUNNING \n JobExitStatus RUNFAILED \n JobExitStatus MULTIPLE_PARTIAL_ERRORS \n JobExitStatus MOVEFILES_DESTINATION_ERRORS \n JobExitStatus NO_NEW_FILES_FOUND \n JobExitStatus WORK_AREA_NOT_ACCESSABLE \n JobExitStatus PROCESS_VALIDATION_FAIL \n JobExitStatus DESTINATION_NOT_ACCESSABLE \n JobExitStatus UNKNOWN \n JobExitStatus DELAYERING_ERRORS \n ExitStatus thisExitStatus \n List<JobExitStatus> partialExitCodes \n JobExitStatus NO_FILES_FOUND \n JobExitStatus SOURCE_NOT_ACCESSABLE \n JobExitStatus COMPLETED \n\n List<JobExitStatus> getPartialFailureCodes \n boolean equals \n ExitStatus getExitStatus \n String toString \n boolean isPartialFailureCode \n boolean isPartialFailureCode \n String getExitCode \n String getExitDescription", "output": ""}, {"instruction": "Generate java code\ndetermines whether a specified us-ascii character is an http whitespace character space or horizontal tab ", "input": " byte QS \n byte CR \n byte COLON \n byte HT \n byte FOWARD_SLASH \n byte PERCENT \n byte LF \n String US_ASCII_CHARSET_NAME \n byte BACK_SLASH \n byte AMP \n byte COMMA \n int[] HEX_DEC \n byte PLUS \n boolean[] HTTP_CONTROLS \n byte SEMI_COLON \n byte[] CRLF_BYTES \n byte SPACE \n String DEFAULT_CHARACTER_ENCODING \n byte EQUALS \n byte QUOTE \n boolean[] HTTP_SEPARATORS \n\n int hexAsciiToDecimal \n void appendCRLF \n boolean isHttpControl \n void pushBack \n void appendString \n boolean isHttpSeparator \n boolean isHex \n byte[] getAsciiBytes", "output": ""}, {"instruction": "Generate java code\nget instance of easeui ", "input": " boolean sdkInited \n EaseUserProfileProvider userProvider \n EaseSettingsProvider settingsProvider \n List<Activity> activityList \n EaseEmojiconInfoProvider emojiconInfoProvider \n EaseUI instance \n String TAG \n Context appContext \n EaseNotifier notifier \n\n void setSettingsProvider \n EaseNotifier getNotifier \n EaseUser getUser \n void setEmojiconInfoProvider \n void initNotifier \n boolean isMsgSoundAllowed \n boolean isMsgSoundAllowed \n EaseSettingsProvider getSettingsProvider \n EaseEmojicon getEmojiconInfo \n EaseEmojiconInfoProvider getEmojiconInfoProvider \n EMOptions initChatOptions \n boolean init \n String getAppName \n void setUserProfileProvider \n void pushActivity \n boolean isMsgVibrateAllowed \n boolean isMsgVibrateAllowed \n User getAppUser \n void registerMessageListener \n Map<String,Object> getTextEmojiconMapping \n boolean isMsgNotifyAllowed \n boolean isMsgNotifyAllowed \n boolean hasForegroundActivies \n boolean isSpeakerOpened \n boolean isSpeakerOpened \n void popActivity \n EaseUserProfileProvider getUserProfileProvider \n Context getContext \n EaseNotifier createNotifier", "output": ""}, {"instruction": "Generate java code\nfrees a hessian 2.0 serializer ", "input": " SerializerFactory _serializerFactory \n SerializerFactory _defaultSerializerFactory \n Logger log \n HessianFreeList<HessianInput> _freeHessianInput \n HessianFreeList<HessianOutput> _freeHessianOutput \n HessianFreeList<Hessian2Input> _freeHessian2Input \n HessianFreeList<Hessian2Output> _freeHessian2Output \n\n Hessian2Input createHessian2Input \n void freeHessian2StreamingInput \n Hessian2Output createHessian2Output \n Hessian2StreamingOutput createHessian2StreamingOutput \n void freeHessian2StreamingOutput \n void setSerializerFactory \n OutputStream createHessian2DebugOutput \n SerializerFactory getSerializerFactory \n Hessian2StreamingInput createHessian2StreamingInput \n HessianOutput createHessianOutput \n HessianInput createHessianInput \n void freeHessian2Input", "output": ""}, {"instruction": "Generate java code\ngets the date at which the access token expires . ", "input": " Date ALREADY_EXPIRED_EXPIRATION_TIME \n Date expires \n String EXPIRES_IN_KEY \n Date lastRefresh \n AccessTokenSource DEFAULT_ACCESS_TOKEN_SOURCE \n Date DEFAULT_LAST_REFRESH_TIME \n String ACCESS_TOKEN_KEY \n long serialVersionUID \n AccessTokenSource source \n String token \n Date DEFAULT_EXPIRATION_TIME \n long serialVersionUID \n List<String> permissions \n Date MIN_DATE \n Date MAX_DATE \n\n AccessToken createFromNativeLogin \n Object readResolve \n List<String> getPermissions \n String tokenToString \n Object writeReplace \n AccessToken createFromNativeLinkingIntent \n boolean isInvalid \n AccessToken createNew \n void readObject \n Date getBundleLongAsDate \n AccessToken createFromExistingAccessToken \n AccessToken createFromBundle \n void appendPermissions \n AccessTokenSource getSource \n AccessToken createFromTokenWithRefreshedPermissions \n String getToken \n Bundle toCacheBundle \n AccessToken createEmptyToken \n AccessToken createFromString \n Date getLastRefresh \n String toString \n AccessToken createFromCache \n AccessToken createFromRefresh \n AccessToken createFromWebBundle", "output": ""}, {"instruction": "Generate java code\nmakes sure that an illegalargumentexception is thrown when the message isnot a alluxio.network.protocol.rpcresponse . ", "input": " ExpectedException mThrown \n ClientHandler mHandler \n ChannelHandlerContext mContext \n\n void exceptionCaughtClosesContext \n void before \n void channelRead0ResponseReceived \n void addListener", "output": ""}, {"instruction": "Generate java code\nreturns the path of the proposals folder . this method checks to see if gitblit is running on a cloud service and may return an adjusted path . ", "input": " Map<String,FederationModel> federationPullResults \n INotificationManager notificationManager \n IStoredSettings settings \n List<FederationModel> federationRegistrations \n IRuntimeManager runtimeManager \n Logger logger \n IRepositoryManager repositoryManager \n\n boolean deletePendingFederationProposal \n UserModel authenticate \n FederationModel getFederationRegistration \n UserModel getFederationUser \n boolean acknowledgeFederationStatus \n List<FederationProposal> getPendingFederationProposals \n List<FederationModel> getFederationResultRegistrations \n FederationManager start \n boolean canFederate \n FederationProposal getPendingFederationProposal \n Map<String,RepositoryModel> getRepositories \n FederationManager stop \n List<FederationSet> getFederationSets \n boolean submitFederationProposal \n String getFederationToken \n String getFederationToken \n FederationProposal createFederationProposal \n List<FederationModel> getFederationRegistrations \n List<String> getFederationTokens \n boolean validateFederationRequest", "output": ""}, {"instruction": "Generate java code\ngets the bus ", "input": " ConduitSelector conduitSelector \n Map<String,Object> requestContext \n Bus bus \n List<Interceptor<? extends Message>> inInterceptors \n long synchronousTimeout \n List<Interceptor<? extends Message>> outInterceptors \n Logger LOG \n List<Interceptor<? extends Message>> inFault \n Map<String,Object> responseContext \n List<Interceptor<? extends Message>> outFault \n\n List<Interceptor<? extends Message>> getOutFaultInterceptors \n Endpoint getEndpoint \n long getSynchronousTimeout \n void setConduitSelector \n void setOutInterceptors \n List<Interceptor<? extends Message>> getInInterceptors \n Map<String,Object> getResponseContext \n boolean isResponseExpectedForOneway \n void setOutFaultInterceptors \n HTTPConduit getHttpConduit \n Conduit getConduit \n void setSynchronousTimeout \n ConduitSelector getConduitSelector \n List<Interceptor<? extends Message>> getInFaultInterceptors \n List<Interceptor<? extends Message>> getOutInterceptors \n void setInInterceptors \n Map<String,Object> getRequestContext \n void setInFaultInterceptors \n void setBus \n void prepareConduitSelector", "output": ""}, {"instruction": "Generate java code\ncreate an evaluator to be used in resolving configuration vars and frequency constant/functions used in stage 1 ", "input": " Integer HOUR \n Integer MINUTE \n\n ELEvaluator createLazyEvaluator \n String make2Digits \n ELEvaluator createSLAEvaluator \n void setConfigToEval \n ELEvaluator createELEvaluatorForDataEcho \n ELEvaluator createURIELEvaluator \n SyncCoordDataset getDSObject \n ELEvaluator createInstancesELEvaluator \n ELEvaluator createInstancesELEvaluator \n ELEvaluator createDataEvaluator", "output": ""}, {"instruction": "Generate java code\ncomputes the value of a metric for an operation . ", "input": " Map<FieldSignature,Set<String>> fields \n Map<String,ClassStats> nestedClasses \n Map<ClassMetricKey,Double> memo \n Map<OperationSignature,Map<String,OperationStats>> operations \n\n void addOperation \n void addField \n ClassStats getNestedClassStats \n boolean hasMatchingSig \n boolean hasMatchingSig", "output": ""}, {"instruction": "Generate java code\nretuen the phone number of the sender ", "input": " Map<String,Object> properties \n int OUT_MESSAGE \n String receiver \n String sender \n int IN_MESSAGE \n String content \n int direction \n\n String getReceiver \n int getDirection \n String getContent \n Map<String,Object> getProperties \n void addProperty", "output": ""}, {"instruction": "Generate java code\nadds a commit to the activity object as long as the commit is not a duplicate . ", "input": " Date endDate \n Set<String> authorExclusions \n Map<String,Metric> authorMetrics \n Set<RepositoryCommit> commits \n long serialVersionUID \n Map<String,Metric> repositoryMetrics \n Date startDate \n\n void excludeAuthors \n Map<String,Metric> getAuthorMetrics \n int getCommitCount \n List<RepositoryCommit> getCommits \n Map<String,Metric> getRepositoryMetrics \n int compareTo", "output": ""}, {"instruction": "Generate java code\ncheck if this path contains the given step ", "input": " Array<Step> steps \n int x \n int y \n\n int getX \n int getX \n int getY \n int getY \n void prependStep \n int hashCode \n Step getStep \n boolean equals \n Array<Step> getSteps \n int getLength \n String toString \n void appendStep", "output": ""}, {"instruction": "Generate java code\nadd an integer field to the stream . \\ param value the integer value to be added . ", "input": " boolean isRaw \n byte[] intBuf \n int MAX_INT_BYTES \n PackFormatInputStream format \n ByteArrayOutputStream packed \n\n byte[] getValue \n void packLong \n void addShort \n void reset \n String getFormat \n void addByte \n void addLong \n void addRecord \n void addByteArray \n void addByteArray \n void addString", "output": ""}, {"instruction": "Generate java code\ndestroy the purge jobs service . ", "input": " String COORD_PURGE_LIMIT \n int olderThan \n String CONF_OLDER_THAN \n int coordOlderThan \n String CONF_PURGE_INTERVAL \n int limit \n String CONF_PREFIX \n String COORD_CONF_OLDER_THAN \n\n void init \n Class<? extends Service> getInterface \n void run", "output": ""}, {"instruction": "Generate java code\ndeserialize only an i32 field addressed by recursively using field id from a byte record . ", "input": " TProtocol protocol_ \n TMemoryInputTransport trans_ \n\n Long partialDeserializeI64 \n Byte partialDeserializeByte \n Short partialDeserializeSetFieldIdInUnion \n ByteBuffer partialDeserializeByteArray \n Object partialDeserializeField \n Boolean partialDeserializeBool \n void partialDeserialize \n Double partialDeserializeDouble \n Short partialDeserializeI16 \n String partialDeserializeString \n void fromString \n TField locateField \n void deserialize \n void deserialize \n void deserialize", "output": ""}, {"instruction": "Generate java code\nset the index of the current task . ", "input": " MineOres mine \n EntityMobWithInventory mob \n HarvestCrops harvest \n int taskMode \n ArrowAttack arrow \n BuildMine shortmine \n BuildFarm largefarm \n BuildMine longmine \n RunAway runaway \n BuildHouse smallhouse \n int buildspeed \n BuildFarm smallfarm \n SowSeeds sow \n StoreLoot loot \n MeleeAttack melee \n BuildHouse largehouse \n FireballAttack fireball \n\n Entity targeter \n void nextStep \n boolean isBuilding", "output": ""}, {"instruction": "Generate java code\ncheck if the client requested a date-based conditional operation . ", "input": " int status \n int INFINITY \n HttpServletRequest request \n URI base \n HttpServletResponse response \n\n URI lookup \n int getDepth \n InputStream read \n String getNormalizedPath \n URI getDestination \n String getMethod \n int getStatus \n boolean hasRequestBody \n void setStatus \n void setHeader \n boolean getOverwrite \n String getOriginalPath \n void setContentType \n OutputStream write \n PrintWriter write", "output": ""}, {"instruction": "Generate java code\nspecifies that the current interceptor needs to be added to the interceptor chain after the specified collection of interceptors . ", "input": " String phase \n Set<String> before \n Set<String> after \n String id \n\n boolean isGET \n void addBefore \n void addBefore \n boolean isRequestor \n Set<String> getAfter \n Set<String> getBefore \n Collection<PhaseInterceptor<? extends Message>> getAdditionalInterceptors \n void handleFault \n void setBefore \n void setAfter \n String getId \n String getPhase", "output": ""}, {"instruction": "Generate java code\nsets the to address of this message . ", "input": " long messageNumber \n String to \n List<InputStream> attachments \n InputStream content \n\n List<InputStream> getAttachments \n void setAttachments \n void setContent \n void setMessageNumber \n InputStream getContent \n String getTo \n long getMessageNumber", "output": ""}, {"instruction": "Generate java code\nset the target to run away from . ", "input": " EntityMobWithInventory mob \n PathEntity path \n int ticker \n World world \n double runSpeed \n Vec3 destination \n Entity source \n boolean destinationSet \n\n void moveToBlock \n void nextStep \n void setDestination", "output": ""}, {"instruction": "Generate java code\ntests basekeyvaluepartitionwriter #close after basekeyvaluepartitionwriter #close , expecting a close is a no-op after the previous close . ", "input": " byte[] VALUE1 \n byte[] KEY1 \n ExpectedException mThrown \n ByteArrayOutStream mOutStream \n BaseKeyValuePartitionWriter mWriter \n byte[] VALUE2 \n byte[] KEY2 \n\n void keyCount \n void byteCount \n void closeAfterCancel \n void putAndGet \n void canPutKeyValue \n void putAfterCancel \n void putAfterClose \n void put", "output": ""}, {"instruction": "Generate java code\ncreates a android.media.remotecontrolclient.metadataeditor . ", "input": " boolean HAS_REMOTE_CONTROL_APIS \n Object mActualMetadataEditor \n int METADATA_KEY_ARTWORK \n Object mActualRemoteControlClient \n\n void setPlaybackState \n MetadataEditorCompat putBitmap \n void apply \n void removeFromMediaRouter \n MetadataEditorCompat putString \n void clear \n void addToMediaRouter \n Object getActualRemoteControlClientObject \n MetadataEditorCompat putLong \n void setTransportControlFlags", "output": ""}, {"instruction": "Generate java code\ngiven a persons blogs updates the naive bayes map of word probabilities ", "input": " int VocabularySize \n int CountofWordsInTwenties \n int CountofWordsInThirties \n StopWord stopWord \n int CountofWordsInTeens \n\n void updateNaiveBayesMapForSinglePost \n int getCountofWordsInTeens \n void setCountofWordsInThirties \n HashMap<String,HashMap<String,Integer>> trainNaiveBayes \n void updateClassWordCount \n void setVocabularySize \n void setCountofWordsInTwenties \n int getVocabularySize \n String[] cleanPost \n String removePuctuationMarks \n void setCountofWordsInTeens \n int getCountofWordsInTwenties \n int getCountofWordsInThirties", "output": ""}, {"instruction": "Generate java code\nformats time elapsed since the given start time in nanoseconds . ", "input": " PlaceHolder placeHolder \n\n String getSizeFromBytes \n long parseSpaceSize \n String parametersToString \n String byteBufferToString \n String formatMode \n String formatTimeTakenMs \n String byteArrayToHexString \n String byteArrayToHexString", "output": ""}, {"instruction": "Generate java code\nprints request headers . ", "input": " String HEADER_CACHE_CONTROL \n Logger LOG \n String HEADER_PRAGMA \n\n Map<String,String> toHeaderMap \n void preventCaching \n String getRequestHeaders \n void populate \n void populate \n void populate \n void populate \n void populate \n Map<String,String> toParamMap \n String sign \n Map<String,String> createCookieMap \n boolean hasParam \n void printCookies \n String getKeyName \n boolean verifyMethod \n boolean signatureMatches", "output": ""}, {"instruction": "Generate java code\nloads and optionally processes the journal checkpoint file . ", "input": " JournalReader mReader \n long mLatestSequenceNumber \n Master mMaster \n Journal mJournal \n Logger LOG \n\n long getLatestSequenceNumber \n boolean isValid \n boolean checkpointExists \n int processNextJournalLogFiles", "output": ""}, {"instruction": "Generate java code\nreturn the time difference in milliseconds between the previous accepted gesturedetector event and the current gesturedetector event . ", "input": " float mCurrPressure \n MotionEvent mCurrEvent \n float PRESSURE_THRESHOLD \n float mPrevPressure \n boolean mGestureInProgress \n MotionEvent mPrevEvent \n Context mContext \n long mTimeDelta \n\n void updateStateByEvent \n void handleStartProgressEvent \n boolean onTouchEvent \n void resetState \n void handleInProgressEvent \n boolean isInProgress \n long getEventTime", "output": ""}, {"instruction": "Generate java code\nsends the given data asynchronously ", "input": " org.slf4j.Logger logger \n UDPEndPoint clientEndpoint \n ClientSession clientSession \n\n void sendBlocking \n int read \n void flush \n UDTStatistics getStatistics \n Socket getSocket \n OutputStream getOutputStream \n UDPEndPoint getEndpoint \n InputStream getInputStream \n void connect \n void connect \n void shutdown", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gsaparser #setsatellitesids string . ", "input": " GSASentence instance \n String EXAMPLE \n GSASentence empty \n\n void testGetFixStatus \n void testSetFixStatus \n void testGetPositionDOP \n void testGetSatelliteIds \n void testConstructor \n void testGetHorizontalDOP \n void testSetPositionDOP \n void testGetVerticalDOP \n void testSetFaaMode \n void testSetHorizontalDOP \n void setUp \n void testGetFaaMode \n void testSetVerticalDOP", "output": ""}, {"instruction": "Generate java code\nestablishes a connection to the given server . starts the sender thread . ", "input": " org.slf4j.Logger logger \n UDPEndPoint clientEndpoint \n ClientSession clientSession \n\n void sendBlocking \n int read \n void flush \n UDTStatistics getStatistics \n Socket getSocket \n OutputStream getOutputStream \n UDPEndPoint getEndpoint \n void send \n InputStream getInputStream \n void shutdown", "output": ""}, {"instruction": "Generate java code\nthe index of this output in the transaction which holds it . ", "input": " boolean coinbase \n long serialVersionUID \n long index \n Coin value \n byte[] scriptBytes \n Sha256Hash hash \n int height \n\n Coin getValue \n int getHeight \n Sha256Hash getHash \n boolean isCoinbase \n int hashCode \n void serializeToStream \n boolean equals \n String toString \n byte[] getScriptBytes", "output": ""}, {"instruction": "Generate java code\nreturns the dataval component of the entry ", "input": " Constant dataval \n int blocknum \n\n int blockNumber", "output": ""}, {"instruction": "Generate java code\nset the wsse valuetype attribute ", "input": " String identifier \n String wsseValueType \n boolean useKeyIdentifier \n boolean useDirectReference \n String wsse11TokenType \n\n void setWsse11TokenType \n String getWsse11TokenType \n String getIdentifier \n void setIdentifier \n void setUseDirectReference \n boolean isUseKeyIdentifier \n String getWsseValueType \n boolean isUseDirectReference \n void setUseKeyIdentifier", "output": ""}, {"instruction": "Generate java code\nread a hashmap from a parcel , class of key and value are both string ", "input": " PlaceHolder placeHolder \n\n void writeHashMap \n void writeHashMapStringAndString \n Map<String,V> readHashMapStringKey \n Map<K,V> readHashMap \n boolean readBoolean \n void writeHashMapStringKey \n void writeBoolean", "output": ""}, {"instruction": "Generate java code\na = h + lambdai where i is an identity matrix . ", "input": " DenseMatrix64F A \n DenseMatrix64F d \n DenseMatrix64F jacobian \n double finalCost \n DenseMatrix64F H \n DenseMatrix64F tempDH \n double initialLambda \n double initialCost \n DenseMatrix64F tempParam \n DenseMatrix64F temp0 \n DenseMatrix64F negDelta \n DenseMatrix64F temp1 \n double DELTA \n Function func \n DenseMatrix64F param \n\n void compute \n double cost \n boolean optimize \n boolean adjustParam \n DenseMatrix64F getParameters \n void computeNumericalJacobian \n double getInitialCost \n void computeDandH \n void configure \n double getFinalCost", "output": ""}, {"instruction": "Generate java code\nsets the value of the singlenestedcomplexnode property . ", "input": " Date date \n Integer number \n ComplexNode singleNestedComplexNode \n List<ComplexNode> nestedComplexNodes \n Double _double \n long serialVersionUID \n String id \n BigDecimal decimal \n\n Integer getNumber \n void setDouble \n BigDecimal getDecimal \n void setDecimal \n List<ComplexNode> getNestedComplexNodes \n Double getDouble \n void setId \n void setDate \n String getId \n Date getDate \n ComplexNode getSingleNestedComplexNode \n void setNumber", "output": ""}, {"instruction": "Generate java code\nreturns a specific folder in the box account ", "input": " String LOGIN_MESSAGE \n BoxFolder rootFolder \n String MISSING_FOLDER_MESSAGE \n BoxFolder currentFolder \n String devToken \n TextBot tb \n String INDENT_APPEND \n\n void goToFolder \n void uploadFile \n void downloadFromCurrent \n void createNewFolder \n void deleteFolder \n void listFolder \n void uploadFolder \n void uploadFolder \n void listFolders \n void notify \n List<String> getCurrentFiles \n void uploadFileToFolder \n void setUpNotifications \n void goToRootFolder", "output": ""}, {"instruction": "Generate java code\nsets the units of measurement . ", "input": " String name \n String units \n String type \n Double value \n\n void setName \n double getValue \n String getName \n String getType \n void setValue \n String getUnits \n boolean isEmpty \n void setType", "output": ""}, {"instruction": "Generate java code\nreturns the uint32 encoded form of the path element , including the most significant bit . ", "input": " int i \n ChildNumber ZERO \n ChildNumber ONE \n ChildNumber ZERO_HARDENED \n int HARDENED_BIT \n\n int getI \n int hashCode \n int num \n boolean equals \n boolean hasHardenedBit \n boolean isHardened \n String toString", "output": ""}, {"instruction": "Generate java code\nloads the specified url ", "input": " WebEngine webEngine \n\n void loadContent \n void setOnAlert \n Object executeScript \n Worker<Void> getLoadWorker \n void setOnError", "output": ""}, {"instruction": "Generate java code\nadd propertychangelistener . ", "input": " PropertyChangeSupport propertyChangeSupport \n\n PropertyChangeListener[] getPropertyChangeListeners \n PropertyChangeListener[] getPropertyChangeListeners \n void firePropertyChange \n void firePropertyChange \n void fireIndexedPropertyChange \n void removePropertyChangeListener \n void removePropertyChangeListener \n boolean hasPropertyChangeListeners", "output": ""}, {"instruction": "Generate java code\nget the xmi.id for the reference . this must be unique within the given xmi file system id , but is not guaranteed to be globally unique . ", "input": " String xmiId \n String systemId \n\n String getSystemId", "output": ""}, {"instruction": "Generate java code\nvalidate the incoming request for mandatory parameters . ", "input": " IFileSystemWorkAreaService fileSystemWorkAreaServiceImpl \n Logger logger \n IFetcherRunRecorderService fetcherRunRecorderServiceImpl \n IFetcherWorkAreaService fetcherWorkAreaServiceImpl \n\n void releaseResources \n ActivityResponse perform", "output": ""}, {"instruction": "Generate java code\nchecks to see if the journal checkpoint has not been updated . if it has been updated since the creation of this reader , this reader is no longer valid . ", "input": " String mCheckpointPath \n boolean mCheckpointRead \n long mCurrentLogNumber \n long mCheckpointOpenedTime \n Journal mJournal \n UnderFileSystem mUfs \n long mCheckpointLastModifiedTime \n Logger LOG \n\n JournalInputStream getNextInputStream \n JournalInputStream getCheckpointInputStream \n long getCheckpointLastModifiedTimeMs", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #gettime . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testSetCourse \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nload the necessary state to perform an eager precondition check . this implementation does a nop . subclasses should override this method and load the state needed to do an eager precondition check . a trivial implementation is calling link #loadstate . ", "input": " String DEFAULT_LOCK_TIMEOUT \n XLog LOG \n boolean dryrun \n XLog.Info logInfo \n int priority \n String type \n Map<Long,List<XCommand<?>>> commandQueue \n boolean used \n String name \n long createdTime \n MemoryLocks.LockToken lock \n String INSTRUMENTATION_GROUP \n Instrumentation instrumentation \n\n void loadState \n String getName \n long getLockTimeOut \n void releaseLock \n void eagerVerifyPrecondition \n T execute \n void resetUsed \n String getEntityKey \n Instrumentation getInstrumentation \n T call \n void verifyPrecondition \n boolean isLockRequired \n String getType \n void acquireLock \n int getPriority \n long getCreatedTime \n void queue \n void queue", "output": ""}, {"instruction": "Generate java code\ninform the listener of a group end . ", "input": " int MAX_PARAMETER_LENGTH \n boolean parsingHex \n int MAX_COMMAND_LENGTH \n IRtfListener listener \n int groupDepth \n IRtfSource source \n ByteBuffer buffer \n\n void handleCommand \n void handleCommand \n void handleCharacterData \n void handleCharacterByte \n void parse \n void handleGroupStart \n void handleBinaryData", "output": ""}, {"instruction": "Generate java code\nbackup all notebooks ", "input": " Book preview \n String QUILL_EXTENSION \n LinkedList<BookPreview> data \n Bookshelf instance \n String TAG \n String TAG \n Storage storage \n Book currentBook \n UUID uuid \n\n int compare \n BookPreview getPreview \n BookPreview getPreview \n void reloadPreview \n void backupDescription \n void setCurrentBook \n void setCurrentBook \n void assertNoCurrentBook \n void importBook \n Bitmap getThumbnail \n void deleteBook \n void exportBook \n String getTitle \n void reload \n UUID getUUID \n Bookshelf getBookshelf \n void newBook \n void sortBookPreviewList \n int getCount \n void importBookDirectory \n String getSummary \n BookPreview getCurrentBookPreview \n void deleteFromStorage \n Book getCurrentBook \n Time getLastModifiedTime \n LinkedList<BookPreview> getBookPreviewList \n void exportCurrentBook \n void createFirstNotebook \n void finalize \n void initialize", "output": ""}, {"instruction": "Generate java code\ninserts the specified record into the index . the method first traverses the directory to find the appropriate leaf page ; then it inserts the record into the leaf . if the insertion causes the leaf to split , then the method calls insert on the root , passing it the directory entry of the new leaf page . if the root node splits , then makenewroot is called . ", "input": " TableInfo dirTi \n Transaction tx \n BTreeLeaf leaf \n TableInfo leafTi \n Block rootblk \n\n boolean next \n void beforeFirst \n int searchCost \n void delete \n void close \n RID getDataRid", "output": ""}, {"instruction": "Generate java code\nreturn a map of all the short names of classes we maintain mappings for . the names are keyed by the classes themselves . ", "input": " TypeMap PRIMITIVE_TYPE_NAMES \n TypeMap TYPES_BY_NAME \n Map<Class<?>,String> SHORT_NAMES_BY_TYPE \n Class<?>[] EMPTY_CLASS_ARRAY \n\n Class<?> getPrimitiveTypeFor \n Map<String,List<Method>> asMethodGroupsByTypeName \n Map<Class<?>,String> getClassShortNames \n Method methodFor \n Class<?> getTypeFor \n String asShortestName \n String withoutPackageName", "output": ""}, {"instruction": "Generate java code\nset whether entropy is returned to the client or not ", "input": " boolean returnEntropy \n long lifetime \n Logger LOG \n\n boolean canHandleToken \n boolean canHandleToken \n boolean isReturnEntropy \n long getLifetime \n int getWSCVersion \n void setLifetime \n TokenProviderResponse createToken", "output": ""}, {"instruction": "Generate java code\nreturn the path originally requested by the client . ", "input": " int status \n int INFINITY \n HttpServletRequest request \n URI base \n HttpServletResponse response \n\n URI lookup \n int getDepth \n InputStream read \n String getNormalizedPath \n URI getDestination \n int getStatus \n boolean hasRequestBody \n void setStatus \n void setHeader \n boolean getOverwrite \n String getOriginalPath \n void setContentType \n OutputStream write \n PrintWriter write \n Date getIfModifiedSince", "output": ""}, {"instruction": "Generate java code\ninternal engine method to return serial number for generated classes to ensure name uniqueness . ", "input": " long serialVersionUID \n HashMap<Class<?>,Object> interfaceAdapterCache \n boolean cachingIsEnabled \n HashMap<Class<?>,JavaMembers> classTable \n Object AKEY \n int generatedClassSerial \n HashMap<JavaAdapter.JavaAdapterSignature,Class<?>> classAdapterCache \n\n void clearCaches \n boolean isInvokerOptimizationEnabled \n boolean isCachingEnabled \n ClassCache get \n void setCachingEnabled \n Map<Class<?>,JavaMembers> getClassCacheMap \n Object getInterfaceAdapter \n void setInvokerOptimizationEnabled \n boolean associate \n Map<JavaAdapter.JavaAdapterSignature,Class<?>> getInterfaceAdapterCacheMap \n void cacheInterfaceAdapter", "output": ""}, {"instruction": "Generate java code\nindex of this symbol terminal or non terminal in the parse tables . note : indexes are unique among terminals and unique among non terminals , however , a terminal may have the same index as a non-terminal , etc. . ", "input": " String _stack_type \n String _name \n int _index \n int _use_count \n\n int use_count \n String stack_type \n String name \n boolean is_non_term \n void note_use \n String toString", "output": ""}, {"instruction": "Generate java code\nselect a folder open a folder chooser gui ", "input": " PlaceHolder placeHolder \n\n void enableComponents \n void selectTab \n String selectFolder", "output": ""}, {"instruction": "Generate java code\nobtains value of the coreprotocolpnames #http_content_charset parameter.if not set , defaults to iso-8859-1 . ", "input": " PlaceHolder placeHolder \n\n ProtocolVersion getVersion \n boolean useExpectContinue \n void setHttpElementCharset \n void setVersion \n String getUserAgent \n void setUserAgent \n void setUseExpectContinue \n String getHttpElementCharset \n void setContentCharset", "output": ""}, {"instruction": "Generate java code\nprocess an rtf command parameter representing a unicode character . ", "input": " IParserEventHandler handler \n IParserEvent GROUP_END \n IParserEvent GROUP_START \n IParserEvent DOCUMENT_START \n Deque<IParserEventHandler> handlerStack \n Map<Integer,String> m_fontEncodings \n Deque<ParserState> stack \n IParserEvent DOCUMENT_END \n ParserState state \n int skipBytes \n\n void processCharacter \n void processUpr \n void handleEvent \n void processDocumentEnd \n void processGroupEnd \n void processCommand \n void parse \n void processCharacterBytes \n void processString \n void processDocumentStart \n void processUnicodeAlternateSkipCount \n void handleCommand \n void processGroupStart \n void processFont \n void processEncoding \n String currentEncoding \n void processBinaryBytes \n void processFontCharset", "output": ""}, {"instruction": "Generate java code\ntest method for activitycontroller #registerusersession serversession , servermessage . verifies that method throws nullpointerexception when serversession is null . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n ActivityController acitivityController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication \n void testDeregisterUserSessionWithNullServerSessonThrowsException \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testGetServerSessionByUserId \n void tearDown \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\nwrites a soap 1.1 ref attribute . ", "input": " QName SOAP_ENCODING_REF_1_2 \n QName SOAP_ENCODING_ID_1_1 \n QName SOAP_ENCODING_ID_1_2 \n QName SOAP_ENCODING_REF_1_1 \n String SOAP_ENCODING_NS_1_2 \n\n void writeId \n String readId \n String readAttributeValue \n String readRef \n void writeAttribute", "output": ""}, {"instruction": "Generate java code\ngets full content retrieved from the cgds . ", "input": " String TAB \n int GENE_SYMBOL \n ArrayList<String> warningList \n int ID_ENTREZ_GENE \n URI uri \n String content \n\n String getAlleleCount \n ArrayList<String> getWarnings \n String getColumnHeaders \n List<ExtendedMutation> getMutationData \n String getProfileData \n URI getURI", "output": ""}, {"instruction": "Generate java code\nsets the value of the config property . ", "input": " Summary summary \n Config config \n List<TestCase> testCase \n\n void setSummary \n Summary getSummary \n Config getConfig \n List<TestCase> getTestCase", "output": ""}, {"instruction": "Generate java code\nall get methods ", "input": " String _link \n String _rss_link \n String _title \n Integer _id \n String _image \n String _description \n\n void setLink \n String getLink \n String getTitle \n void setRSSLink \n void setId \n void setTitle \n void setDescription \n String getRSSLink \n String getDescription \n String getImage \n void setImage", "output": ""}, {"instruction": "Generate java code\ncreate an instance of browseoffersresponse.return ", "input": " PlaceHolder placeHolder \n\n BrowseOffersResponse.Return.OfferData.Seo createBrowseOffersResponseReturnOfferDataSeo \n BrowseOffersResponse.Return.OfferData.Geo.Region.Country.State createBrowseOffersResponseReturnOfferDataGeoRegionCountryState \n BrowseOffersResponse.Return.OfferData.OfferMedia createBrowseOffersResponseReturnOfferDataOfferMedia \n BrowseOffersResponse createBrowseOffersResponse \n BrowseOffersResponse.Return.OfferData.Geo.Region.Country createBrowseOffersResponseReturnOfferDataGeoRegionCountry \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry.Value createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntryValue \n BrowseOffersResponse.Return.OfferData createBrowseOffersResponseReturnOfferData \n BrowseOffersResponse.Return.OfferData.Merchant createBrowseOffersResponseReturnOfferDataMerchant \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntry \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage createBrowseOffersResponseReturnOfferDataOfferMediaOfferImage \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry.Value.Item createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntryValueItem \n BrowseOffersResponse.Return.OfferData.Geo createBrowseOffersResponseReturnOfferDataGeo \n BrowseOffersResponse.Return.OfferData.Geo.Region createBrowseOffersResponseReturnOfferDataGeoRegion", "output": ""}, {"instruction": "Generate java code\nsets the type of the object for the likeview ", "input": " Creator<LikeContent> CREATOR \n String objectId \n String objectType \n\n Builder readFrom \n Builder readFrom \n LikeContent build \n String getObjectType \n LikeContent[] newArray \n LikeContent createFromParcel \n Builder setObjectId \n int describeContents \n void writeToParcel \n String getObjectId", "output": ""}, {"instruction": "Generate java code\ncreates a scriptpubkey that sends to the given script hash . read bip 16 to learn more about this kind of script . ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder op \n Script updateScriptWithSignature \n Script createOpReturnScript \n ScriptBuilder data \n ScriptBuilder data \n Script createMultiSigInputScriptBytes \n Script createMultiSigInputScriptBytes \n ScriptBuilder smallNum \n ScriptBuilder smallNum \n Script createRedeemScript \n ScriptBuilder addChunk \n ScriptBuilder addChunk \n Script createInputScript \n Script createInputScript \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript \n Script createMultiSigOutputScript \n Script build \n Script createP2SHMultiSigInputScript", "output": ""}, {"instruction": "Generate java code\nreturns the access token validator class name ", "input": " Log log \n\n OAuthServerConfiguration getOAuthServerConfiguration \n String getHostName \n String getUserInfoResponseBuilder \n String getLoginPageURL \n String getLoginPageURL \n String getRealmInfo \n String getUserInfoClaimDialect \n OAuth2TokenValidationService getOAuth2TokenValidationService \n String getUserInfoRequestValidator \n String getErrorPageURL \n String getUserInfoClaimRetriever \n String[] extractCredentialsFromAuthzHeader \n String getUserConsentURL \n String getScope \n OAuth2Service getOAuth2Service", "output": ""}, {"instruction": "Generate java code\ntries to determine resourcetype from string and return #file ifprovided string is invalid . ", "input": " Map<String,ResourceTypeHandler> types \n ResourceTypeHandler FLASH \n ResourceTypeHandler MEDIA \n ResourceTypeHandler FILE \n String name \n ResourceTypeHandler IMAGE \n Map<ResourceTypeHandler,String> paths \n\n String getName \n ResourceTypeHandler valueOf \n int hashCode \n boolean isValid \n ResourceTypeHandler getResourceType \n boolean equals \n String getPath \n String toString", "output": ""}, {"instruction": "Generate java code\nadd a single value to the pending animation queue . ", "input": " Queue<Double> mAnimationQueue \n boolean mRunning \n ChoreographerCompat mChoreographer \n Queue<Double> mPendingQueue \n ArrayList<Double> mTempValues \n List<Callback> mCallbacks \n ChoreographerCompat.FrameCallback mChoreographerCallback \n\n void clearValues \n void addAllValues \n void onFrame \n void onFrame \n void clearCallbacks \n void removeCallback \n void runIfIdle \n void addCallback", "output": ""}, {"instruction": "Generate java code\ngets the current panel of your stack . ", "input": " UIStack uiStack \n\n JPanel restart \n void show \n void addPanel \n JPanel back \n JPanel back", "output": ""}, {"instruction": "Generate java code\nlinear solver which uses qr pivot decomposition . these solvers can handle singular systems and should never fail . for singular systems , the solution might not be as accurate as a pseudo inverse that uses svd . for singular systems there are multiple correct solutions . the optimal 2-norm solution is the solution vector with the minimal 2-norm and is unique . if the optimal solution is not computed then the basic solution is returned . see org.ejml.alg.dense.linsol.qr.baselinearsolverqrp for details . there is only a runtime difference for small matrices , 2-norm solution is slower . two different solvers are available . compute q will compute the q matrix once then use it multiple times . if the solution for a single vector is being found then this should be set to false . if the pseudo inverse is being found or the solution matrix has more than one columns and solve is being called numerous multiples times then this should be set to true . ", "input": " PlaceHolder placeHolder \n\n LinearSolver<DenseMatrix64F> leastSquares \n LinearSolver<DenseMatrix64F> general \n LinearSolver<DenseMatrix64F> pseudoInverse \n LinearSolver<DenseMatrix64F> linear \n LinearSolver<DenseMatrix64F> symmPosDef \n AdjustableLinearSolver adjustable", "output": ""}, {"instruction": "Generate java code\nget the list of accepted c14n algorithms . a request can contain a wst : canonicalizationalgorithm uri to use for c14n in an issued token . the algorithm specified must be contained in this list . the default algorithms are c14n_excl_omit_comments . ", "input": " List<String> acceptedC14nAlgorithms \n String signatureAlgorithm \n long maximumKeySize \n long keySize \n List<String> acceptedSignatureAlgorithms \n String c14nAlgorithm \n String digestAlgorithm \n long minimumKeySize \n boolean useKeyValue \n\n String getC14nAlgorithm \n boolean isUseKeyValue \n void setUseKeyValue \n long getMinimumKeySize \n void setAcceptedC14nAlgorithms \n void setC14nAlgorithm \n void setDigestAlgorithm \n void setMinimumKeySize \n void setAcceptedSignatureAlgorithms \n String getDigestAlgorithm \n List<String> getAcceptedSignatureAlgorithms \n String getSignatureAlgorithm \n void setSignatureAlgorithm \n long getKeySize \n void setMaximumKeySize \n void setKeySize \n long getMaximumKeySize", "output": ""}, {"instruction": "Generate java code\ngets the successor id . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\ngets the feed id . ", "input": " String feedId \n String destFileName \n String testId \n\n void setDestFileName \n void setFeedId \n String toString \n void setTestId \n String getTestId \n String getDestFileName", "output": ""}, {"instruction": "Generate java code\nget all of the registered notations . ", "input": " Logger LOG \n String name \n Icon icon \n ArrayList<NotationName> notations \n String version \n\n String getVersion \n String getNotationNameString \n String getName \n void fireEvent \n boolean removeNotation \n Icon getIcon \n String getConfigurationValue \n String getTitle \n NotationName findNotation \n NotationName getNotation \n NotationName getNotation \n String toString \n NotationName makeNotation \n boolean sameNotationAs", "output": ""}, {"instruction": "Generate java code\nretrieves a byte array field from the stream . \\ param dest the byte array where the returned value will be stored . \\ param off offset into the destination buffer to start copying into . \\ param len the length should be large enough to store the entire data item , if it is not , a truncated value will be returned . ", "input": " int valueLen \n PackFormatInputStream format \n int valueOff \n byte[] value \n\n void getByteArrayInternal \n int getByteArrayLength \n byte getByte \n short getShort \n String getString \n long getLong \n byte[] getValue \n int getInt \n int unpackInt \n short unpackShort \n String getFormat \n long getRecord \n long unpackLong", "output": ""}, {"instruction": "Generate java code\nchecks for a card on the enemy hand . ", "input": " Enemy enemy \n DefaultRules rules \n Deck playerDeck \n Card selectedCard \n Array<Card> playerHandCards \n Deck enemyDeck \n Field playerField \n Array<Card> enemyHandCards \n Field enemyField \n Array<Card> playerDestroyedCards \n int id \n boolean tutorial \n BattleMap map \n Array<Modifier> rewards \n Array<Card> enemyDestroyedCards \n\n void addPlayerHandCard \n Deck getPlayerDeck \n Field getPlayerField \n void setPlayerHandCards \n void setEnemyHandCards \n int getId \n Field getEnemyField \n void setEnemyDestroyedCards \n Array<Card> getEnemyHandCards \n Card getSelectedCard \n Deck getEnemyDeck \n void setMap \n DefaultRules getRules \n void setRules \n void setPlayerField \n void write \n void setPlayerDestroyedCards \n Array<Card> getEnemyDestroyedCards \n void read \n Array<Card> getPlayerHandCards \n void addEnemyHandCard \n void setPlayerDeck \n void setEnemy \n Card getCardFromEnemy \n void setSelectedCard \n void setEnemyDeck \n BattleMap getMap \n Enemy getEnemy \n Array<Card> getPlayerDestroyedCards \n void setEnemyField", "output": ""}, {"instruction": "Generate java code\ngets the receipt date type . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nwaits the given int attempts for the event queue of javafx application thread to becompleted , as well as any new events triggered on it . ", "input": " ExecutorService executorService \n long CONDITION_SLEEP_IN_MILLIS \n int SEMAPHORE_LOOPS_COUNT \n long SEMAPHORE_SLEEP_IN_MILLIS \n\n boolean callConditionAndReturnResult \n void runOnFxThread \n void callCallableAndSetFuture \n void sleepWithException \n void waitForAsyncFx \n T waitForAsyncFx \n void sleep \n T waitForMillis \n Future<Void> async \n Future<T> async \n void runOnThread \n Future<Void> asyncFx \n Future<T> asyncFx \n void blockFxThreadWithSemaphore \n T waitFor \n T waitFor \n void waitFor \n void waitFor \n void waitForAsync \n T waitForAsync", "output": ""}, {"instruction": "Generate java code\nget the lifetime of the token to be returned in seconds ", "input": " TokenReference unAttachedReference \n Date expires \n String tokenId \n Date created \n long lifetime \n TokenReference attachedReference \n Element token \n\n void setAttachedReference \n String getTokenId \n TokenReference getUnAttachedReference \n void setExpires \n Date getCreated \n void setCreated \n void setUnattachedReference \n void setToken \n Element getToken \n void setLifetime \n void setTokenId \n Date getExpires \n TokenReference getAttachedReference", "output": ""}, {"instruction": "Generate java code\ncheck the internal jsonobject for a key ", "input": " JsonTray parent \n ClientCredential credential \n JSONObject json \n\n boolean checkExpireTime \n ClientIdentity getIdentity \n Object get \n void setExpireTime \n boolean getBoolean \n boolean getBoolean \n Authentication setIdentity \n String getString \n String getString \n void delete \n void put \n void remove", "output": ""}, {"instruction": "Generate java code\ndraw this ball at its current position onto the canvas . ", "input": " int xPosition \n Canvas canvas \n int ySpeed \n int ballDegradation \n Color color \n int diameter \n int yPosition \n int groundPosition \n int GRAVITY \n Ellipse2D.Double circle \n\n void erase \n void move \n int getXPosition \n int getYPosition", "output": ""}, {"instruction": "Generate java code\ninitialize the model subsystem with the mdr modelimplementation . ", "input": " String DEFAULT_MODEL_IMPLEMENTATION \n\n void initializeEUML \n ModelImplementation initializeModelImplementation \n void initializeDefault", "output": ""}, {"instruction": "Generate java code\na very simple bit permutation to mask a simple incrementer . ", "input": " int salt \n AtomicInteger gen \n\n int next \n int result \n short hi16 \n int unmix \n String format \n short lo16", "output": ""}, {"instruction": "Generate java code\nsee a parameter used for the transformation ", "input": " File PWD \n Map<String,Object> parameters \n Transformation transformation \n\n R withExceptionHandling \n void setOutputProperties \n R transform \n void transformTo \n String getDefaultSystemId \n void setParameter \n void setErrorListener \n void setOutputProperty \n void clearParameters \n Document getResultDocument \n String getResultString \n void setURIResolver \n void provideSystemIdIfRequired", "output": ""}, {"instruction": "Generate java code\ngets the created by . ", "input": " Timestamp lastModifiedTimeStamp \n Timestamp fetcherStartTimestamp \n Timestamp createTimeStamp \n long serialVersionUID \n BigDecimal batchId \n String errorMsg \n OutcomeType outcomeType \n String createdBy \n BigDecimal feedId \n long testId \n BigDecimal runId \n Timestamp fetcherEndTimeStamp \n List<RegPCLTestResultDetailsEntity> regPclTestResultDetails \n RunStatusType runStatus \n\n void setLastModifiedTimeStamp \n void setFeedId \n void setFetcherStartTimestamp \n OutcomeType getOutcomeType \n void updateLastModifiedTimeStamp \n void updateCreateTimeStamp \n BigDecimal getRunId \n void setBatchId \n List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails \n void setTestId \n long getTestId \n RegPCLTestResultDetailsEntity removeRegPclTestResultDetail \n void setRegPclTestResultDetails \n void setErrorMsg \n RunStatusType getRunStatus \n RegPCLTestResultDetailsEntity addRegPclTestResultDetail \n String getErrorMsg \n void setRunStatus \n Timestamp getFetcherEndTimeStamp \n Timestamp getLastModifiedTimeStamp \n BigDecimal getFeedId \n void setRunId \n Timestamp getFetcherStartTimestamp \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n Timestamp getCreateTimeStamp \n BigDecimal getBatchId \n void setOutcomeType", "output": ""}, {"instruction": "Generate java code\nreturns true of the mob is currently building a structure . this is mainly used to prevent a mob from starting to mine or farm when it has not finished building a structure . ", "input": " MineOres mine \n EntityMobWithInventory mob \n HarvestCrops harvest \n int taskMode \n ArrowAttack arrow \n BuildMine shortmine \n BuildFarm largefarm \n BuildMine longmine \n RunAway runaway \n BuildHouse smallhouse \n int buildspeed \n BuildFarm smallfarm \n SowSeeds sow \n StoreLoot loot \n MeleeAttack melee \n BuildHouse largehouse \n FireballAttack fireball \n\n Entity targeter \n void setTask \n void nextStep", "output": ""}, {"instruction": "Generate java code\nif this chunk is an op_n opcode returns the equivalent integer value . ", "input": " byte[] data \n int startLocationInProgram \n int opcode \n\n boolean equalsOpCode \n int getStartLocationInProgram \n boolean isPushData \n int hashCode \n boolean isShortestPossiblePushData \n boolean equals \n boolean isOpCode \n String toString \n void write", "output": ""}, {"instruction": "Generate java code\nsave a book . ", "input": " Logger log \n BookRepository bookRepository \n\n Book findOne \n Page<Book> findAll \n void delete", "output": ""}, {"instruction": "Generate java code\nstarts the video stream ", "input": " int framerate \n String cameraIPAddress \n String channel \n int cameraPort \n int compression \n String resolution \n URL url \n\n URL getURL \n void halt \n void movePanTilt \n String composeURL \n void runUrl \n void setIPAddress \n void moveZoom", "output": ""}, {"instruction": "Generate java code\nadds a rule to the perspective that will generate child nodes for any given parent node . ", "input": " List<TreeModel> rules \n String name \n List<TreeModel> goRules \n\n void setName \n void removeSubTreeModel \n String getName \n Vector<TreeModel> getSubTreeModels \n List<TreeModel> getGoRuleList \n String toString \n void registerRule \n Vector<TreeModel> getGoRules \n List<TreeModel> getSubTreeModelList", "output": ""}, {"instruction": "Generate java code\nsets the result message . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n void setFileCount \n BigDecimal getDownloadSize \n String getResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\ngets the sessionid of the worker making the request . make sure the message is ready before calling this method . ", "input": " ByteBuffer mData \n int REQUEST_HEADER_LENGTH \n int RESPONSE_HEADER_LENGTH \n int ERROR_RESPONSE_HEADER_LENGTH \n long mOffset \n RPCResponse.Status mStatus \n long mLockId \n boolean mToSendData \n long mLength \n long mBlockId \n int HEADER_PREFIX_LENGTH \n long mSessionId \n RPCMessage.Type mMessageType \n boolean mIsMessageReady \n ByteBuffer mHeader \n Logger LOG \n\n void checkReady \n long getOffset \n void setLockId \n RPCResponse.Status getStatus \n DataServerMessage createBlockResponseMessage \n DataServerMessage createBlockResponseMessage \n boolean finishSending \n long getLockId \n int recv \n long getBlockId \n void generateHeader \n ByteBuffer getReadOnlyData \n long getLength \n void isSend \n DataServerMessage createBlockRequestMessage \n DataServerMessage createBlockRequestMessage \n void close \n void send \n boolean isMessageReady", "output": ""}, {"instruction": "Generate java code\ntests the mode #tostring method . ", "input": " ExpectedException mThrown \n\n void umaskExceedLength \n void setOwnerBits \n void umask \n void fromShort \n void equals \n void setGroupBits \n void setOtherBits \n void after \n void copyConstructor \n void umaskNotInteger \n void toShort \n void createNoAccess", "output": ""}, {"instruction": "Generate java code\nperforms a rank one update on matrix a using vectors u and w . the results are stored in a . a = a + & gamma ; u wt this is called a rank1 update because the matrix u wt has a rank of 1 . ", "input": " PlaceHolder placeHolder \n\n void mult \n void householder \n double innerProdA \n double innerProdTranA \n void addOuterProd \n double innerProd \n void outerProd", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.provider.abstractprovider #sentenceread net.sf.marineapi.nmea.event.sentenceevent . ", "input": " SentenceFactory factory \n HeadingProvider instance \n HeadingEvent event \n\n void providerUpdate \n void testHDMSentenceRead \n void setUp \n void testHDTSentenceRead \n void tearDown", "output": ""}, {"instruction": "Generate java code\nset the c14n algorithm to use ", "input": " List<String> acceptedC14nAlgorithms \n String signatureAlgorithm \n long maximumKeySize \n long keySize \n List<String> acceptedSignatureAlgorithms \n String c14nAlgorithm \n String digestAlgorithm \n long minimumKeySize \n boolean useKeyValue \n\n String getC14nAlgorithm \n boolean isUseKeyValue \n List<String> getAcceptedC14nAlgorithms \n void setUseKeyValue \n long getMinimumKeySize \n void setAcceptedC14nAlgorithms \n void setDigestAlgorithm \n void setMinimumKeySize \n void setAcceptedSignatureAlgorithms \n String getDigestAlgorithm \n List<String> getAcceptedSignatureAlgorithms \n String getSignatureAlgorithm \n void setSignatureAlgorithm \n long getKeySize \n void setMaximumKeySize \n void setKeySize \n long getMaximumKeySize", "output": ""}, {"instruction": "Generate java code\ncreates an error response using the given message . ", "input": " Logger LOG \n\n Response call \n T call \n Response createResponse", "output": ""}, {"instruction": "Generate java code\nturns an iterable into its type-safe cousin . ", "input": " Predicate<? super T> filter \n boolean iterated \n Iterator<T> i \n Mapper<? super F,T> mapper \n T lookAhead \n E element \n\n Iterable<E> singleton \n Iterable<T> filter \n boolean all \n E next \n T next \n T next \n int count \n boolean hasNext \n boolean hasNext \n boolean hasNext \n Iterable<T> map \n boolean any \n List<E> asList \n void remove \n void remove \n void remove", "output": ""}, {"instruction": "Generate java code\nget the map of properties which affect the responses only . these additional properties may be optionally set after a proxy or webclient has been created . ", "input": " ConduitSelector conduitSelector \n Map<String,Object> requestContext \n Bus bus \n List<Interceptor<? extends Message>> inInterceptors \n long synchronousTimeout \n List<Interceptor<? extends Message>> outInterceptors \n Logger LOG \n List<Interceptor<? extends Message>> inFault \n Map<String,Object> responseContext \n List<Interceptor<? extends Message>> outFault \n\n Bus getBus \n List<Interceptor<? extends Message>> getOutFaultInterceptors \n Endpoint getEndpoint \n long getSynchronousTimeout \n void setConduitSelector \n void setOutInterceptors \n List<Interceptor<? extends Message>> getInInterceptors \n boolean isResponseExpectedForOneway \n void setOutFaultInterceptors \n HTTPConduit getHttpConduit \n Conduit getConduit \n void setSynchronousTimeout \n ConduitSelector getConduitSelector \n List<Interceptor<? extends Message>> getInFaultInterceptors \n List<Interceptor<? extends Message>> getOutInterceptors \n void setInInterceptors \n Map<String,Object> getRequestContext \n void setInFaultInterceptors \n void setBus \n void prepareConduitSelector", "output": ""}, {"instruction": "Generate java code\ncalculates the one-time hash of contents and returns it as a new wrapped hash . ", "input": " Sha256Hash ZERO_HASH \n byte[] bytes \n\n Sha256Hash createDouble \n Sha256Hash hashFileContents \n int hashCode \n boolean equals \n BigInteger toBigInteger \n String toString \n Sha256Hash duplicate \n int compareTo \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\nreturn a service by its public interface . ", "input": " String OOZIE_HOME_DIR \n String CONF_SYSTEM_ID \n String systemId \n Services SERVICES \n String CONF_SERVICE_CLASSES \n String CONF_SYSTEM_MODE \n Configuration conf \n Map<Class<? extends Service>,Service> services \n String oozieHome \n String CONF_DELETE_RUNTIME_DIR \n String CONF_SERVICE_EXT_CLASSES \n SYSTEM_MODE systemMode \n String runtimeDir \n int MAX_SYSTEM_ID_LEN \n\n String getRuntimeDir \n void init \n void setService \n String getSystemId \n void setServiceInternal \n Configuration getConf \n void setOozieHome \n SYSTEM_MODE getSystemMode \n void setSystemMode \n void destroy \n String createRuntimeDir \n String getOozieHome", "output": ""}, {"instruction": "Generate java code\nget the row that was last edited ", "input": " Object newValue \n int column \n Action action \n int row \n Object oldValue \n JTable table \n\n void processEditingStarted \n JTable getTable \n int getColumn \n void propertyChange \n void run \n Object getOldValue \n void processEditingStopped \n Object getNewValue", "output": ""}, {"instruction": "Generate java code\ngetzip returns a string < / code representing the postal zone in a ubl address . ", "input": " AddressType address \n\n String getState \n String getStreet \n String getCity", "output": ""}, {"instruction": "Generate java code\npopup an sql error ", "input": " String appName \n Logger logger \n\n void setLogger \n void popupError \n void warning \n void info", "output": ""}, {"instruction": "Generate java code\nthe css condition : lang xx ", "input": " int CHILD_AXIS \n int HOVER_PSEUDOCLASS \n int selectorID \n Selector siblingSelector \n String _name \n int _axis \n int FOCUS_PSEUDOCLASS \n int _pc \n int ACTIVE_PSEUDOCLASS \n int selectorCount \n int DESCENDANT_AXIS \n int VISITED_PSEUDOCLASS \n Ruleset _parent \n int IMMEDIATE_SIBLING_AXIS \n int _specificityD \n String _pe \n int _specificityC \n int _specificityB \n Selector chainedSelector \n int _pos \n String _namespaceURI \n java.util.List conditions \n\n void setName \n void addClassCondition \n void addAttributeSubstringCondition \n void addNthChildCondition \n void setPseudoElement \n void addAttributeMatchesListCondition \n void addAttributeEqualsCondition \n void addCondition \n void addEvenChildCondition \n void addIDCondition \n void addAttributePrefixCondition \n void setPos \n void addLinkCondition \n void addLastChildCondition \n boolean matchesDynamic \n void setChainedSelector \n void setNamespaceURI \n int getSpecificityD \n void addUnsupportedCondition \n int getSpecificityC \n Selector getChainedSelector \n int getSpecificityB \n void setParent \n void addAttributeExistsCondition \n void addFirstChildCondition \n String getElementStylingOrder \n void setSiblingSelector \n void addAttributeSuffixCondition \n int getSelectorID \n int getAxis \n void setAxis \n void addAttributeMatchesFirstPartCondition \n String getPseudoElement \n Ruleset getRuleset \n boolean matches \n void addOddChildCondition \n void setPseudoClass \n boolean isPseudoClass \n String getOrder \n Object getAppropriateSibling \n void setSpecificityB \n void setSpecificityC \n void setSpecificityD", "output": ""}, {"instruction": "Generate java code\nreturn a long value from a jsonobject . ", "input": " PlaceHolder placeHolder \n\n Date parseDateRfc822 \n List<String> getListString \n String formatDateRfc822", "output": ""}, {"instruction": "Generate java code\nsets the experiment types . ", "input": " String interactionType \n String experimentTypes \n long geneB \n String pmids \n long geneA \n String source \n\n void setSource \n String toSif \n void setGeneA \n void setGeneB \n String getInteractionType \n long getGeneA \n long getGeneB \n void setPmids \n String getSource \n String toString \n void setInteractionType \n String getExperimentTypes \n String getPmids", "output": ""}, {"instruction": "Generate java code\ngets the value of the passwordcredentials property . ", "input": " CertificateCredentials certificateCredentials \n UserValidation user \n PasswordCredentials passwordCredentials \n Token token \n\n void setToken \n Token getToken \n UserValidation getUser \n void setPasswordCredentials \n CertificateCredentials getCertificateCredentials \n void setCertificateCredentials \n void setUser", "output": ""}, {"instruction": "Generate java code\ngets the reason . ", "input": " String reason \n String feedId \n String testId \n String batchId \n String runStatus \n\n void setFeedId \n boolean isFeedRunnable \n String getRunStatus \n void setReason \n String getBatchId \n String toString \n String getFeedId \n void setBatchId \n void setTestId \n String getTestId \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\nchecks to see that it only accepts input matrices that have compatible shapes ", "input": " Random rand \n\n void checkAllAgainstKnown \n void checkResults \n void checkAgainstRandomDiffShapes \n void invoke \n void transpose \n void checkInputInstance", "output": ""}, {"instruction": "Generate java code\nrevert all settings to their default value . ", "input": " List PROPS \n\n void reload \n void addSettings \n void save \n void setShouldSave \n void removeSettings", "output": ""}, {"instruction": "Generate java code\nhandle firing a diagram appearance event . ", "input": " ArgoEventPump SINGLETON \n List<Pair> listeners \n Logger LOG \n ArgoEventListener listener \n int eventType \n\n void doAddListener \n void handleFireGeneratorEvent \n void fireEvent \n void removeListener \n void removeListener \n void handleFireStatusEvent \n int getEventType \n void doRemoveListener \n void handleFireEvent \n int hashCode \n void handleFireProfileEvent \n boolean equals \n void handleFireHelpEvent \n void handleFireNotationEvent \n String toString \n ArgoEventPump getInstance \n void doFireEvent \n ArgoEventListener getListener \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nchecks to see if the specified off diagonal element is zero using a relative metric . ", "input": " double c \n EigenvalueSmall eigenSmall \n int numSplits \n int numExceptional \n double bulge \n int steps \n int N \n double c2 \n double cs \n DenseMatrix64F Q \n int splits[] \n Random rand \n double s \n double diag[] \n int x1 \n int x2 \n double off[] \n int lastExceptional \n double s2 \n\n double computeWilkinsonShift \n void eigenvalue2by2 \n boolean nextSplit \n void createBulge \n double[] copyDiag \n void incrementSteps \n void computeRotation \n void printMatrix \n double[] swapOff \n void createBulge2by2 \n void setQ \n void removeBulge \n double[] copyEigenvalues \n void removeBulgeEnd \n void init \n double computeShift \n double[] swapDiag \n void exceptionalShift \n void setSubmatrix \n int getMatrixSize \n void updateQ \n double[] copyOff \n void resetSteps \n void reset \n void performImplicitSingleStep", "output": ""}, {"instruction": "Generate java code\ndisplays the contents of the specified input stream as text . ", "input": " PlaceHolder placeHolder \n\n File createSampleFile \n void main", "output": ""}, {"instruction": "Generate java code\ndetermine if the current message is a partial response . ", "input": " PlaceHolder placeHolder \n\n FaultMode getFaultMode \n boolean isDOMPresent \n boolean isRequestor \n boolean isTrue \n boolean isOutbound \n boolean isEmptyPartialResponse \n boolean getContextualBoolean \n boolean isFault \n Object getContextualProperty", "output": ""}, {"instruction": "Generate java code\nregisters the #getoutputfields output field names . ", "input": " Method method \n Number parallelism \n SpelExpressionParser expressionParser \n Map<String,Expression> outputBinding \n boolean scatterOutput \n Class<?> beanType \n String[] outputFields \n ApplicationContext spring \n FunctionSignature inputSignature \n Values[] EMPTY_ARRAY \n String outputStreamId \n String id \n Map<String,String> outputBindingDefinitions \n Logger logger \n long serialVersionUID \n\n Map<String,Object> getComponentConfiguration \n void init \n Values getMapping \n String[] getInputFields \n Object[] mapOutputFields \n Object[] invoke \n Object invoke \n void setOutputStreamId \n String getId \n String getOutputStreamId \n String[] getOutputFields \n void setParallelism \n void setOutputBinding \n void setApplicationContext \n void setScatterOutput \n Number getParallelism \n Expression getOutputBinding \n void setId \n boolean getScatterOutput \n void putOutputBinding", "output": ""}, {"instruction": "Generate java code\ntests the storagetierview #getdirview int method . ", "input": " StorageTier mTestTier \n int TEST_TIER_LEVEL \n ExpectedException mThrown \n TemporaryFolder mTestFolder \n StorageTierView mTestTierView \n\n void getDirViews \n void before \n void getDirViewBadIndex \n void getTierViewAlias \n void getTierViewOrdinal", "output": ""}, {"instruction": "Generate java code\nconvenience method that returns the result of the transformation as a document . ", "input": " TransformerFactory factory \n ErrorListener errorListener \n Properties output \n Source styleSheet \n Source source \n URIResolver uriResolver \n Map<String,Object> params \n\n void setSource \n void setFactory \n void setStylesheet \n void transformTo \n void setErrorListener \n void clearParameters \n String transformToString \n void setURIResolver \n void clearOutputProperties \n void addParameter \n void addOutputProperty", "output": ""}, {"instruction": "Generate java code\ngets uri for connecting to remote server . ", "input": " String TAB \n int GENE_SYMBOL \n ArrayList<String> warningList \n int ID_ENTREZ_GENE \n URI uri \n String content \n\n String getAlleleCount \n ArrayList<String> getWarnings \n String getContent \n String getColumnHeaders \n List<ExtendedMutation> getMutationData \n String getProfileData", "output": ""}, {"instruction": "Generate java code\nacquire a resource of type code t from the pool . ", "input": " ReentrantLock mLock \n ScheduledExecutorService mExecutor \n Clock mClock \n long mInitialDelayMs \n long mLastAccessTimeMs \n Condition mNotEmpty \n ScheduledExecutorService mGcExecutor \n long mGcIntervalMs \n int mIdentity \n T mResource \n int mMaxCapacity \n HashMap<T,ResourceInternal<T>> mResources \n int mMaxCapacity \n ScheduledFuture<?> mGcFuture \n TreeSet<ResourceInternal<T>> mResourceAvailable \n int mMinCapacity \n Logger LOG \n int mMinCapacity \n\n T createNewResource \n int compare \n void release \n ResourceInternal<T> poll \n void remove \n boolean isHealthy \n boolean shouldGc \n void setLastAccessTimeMs \n Options setMinCapacity \n Options setGcIntervalMs \n Options setGcExecutor \n Options setInitialDelayMs \n long getInitialDelayMs \n long getLastAccessTimeMs \n void close \n boolean add \n ScheduledExecutorService getGcExecutor \n int getMaxCapacity \n Options defaultOptions \n void closeResource \n Options setMaxCapacity \n void closeResourceSync \n int size \n long getGcIntervalMs \n T checkHealthyAndRetry \n int getMinCapacity \n boolean isFull", "output": ""}, {"instruction": "Generate java code\ncloses the underlying open streams . ", "input": " FileInStream mIn \n FileOutStream mOut \n\n FileInStream getIn \n FileOutStream getOut", "output": ""}, {"instruction": "Generate java code\nthe column where the problem occured or #unknown unknown . ", "input": " int UNKNOWN \n int line \n int column \n ProblemType type \n String message \n\n ProblemType getType \n ValidationProblem fromException \n int getLine \n String getMessage \n String toString", "output": ""}, {"instruction": "Generate java code\nadds and verifies a number sent by a player after its corresponding hash was sent ", "input": " int ptr \n boolean finalised \n byte[] mixednumber \n SecureRandom sr \n\n byte[] hashByteArr \n void finalise \n int getByte \n long nextInt \n byte[] hexToByte", "output": ""}, {"instruction": "Generate java code\ncomputes the value of a metric for an operation . ", "input": " Map<String,ClassStats> classes \n Map<String,PackageStats> subPackages \n\n ClassStats getClassStats \n PackageStats getSubPackage \n boolean hasMatchingSig \n boolean hasMatchingSig", "output": ""}, {"instruction": "Generate java code\ntests the method for handling an input stream from yahoo . ", "input": " Logger LOG \n\n void verifyResults \n void runJsonTest \n void testJsonInputStream \n void testFullDownload \n void runFullTest \n void runTest", "output": ""}, {"instruction": "Generate java code\ndelete the certificate with the given alias ", "input": " String FILE_PREFIX \n String ALIAS_PREFIX \n Pattern ALIAS_PATTERN \n\n Date getCreationDate \n boolean addCertificate \n ArrayList<String> aliases \n String getCertificateAlias \n X509Certificate getCertificate \n String getKeyId \n boolean containsAlias", "output": ""}, {"instruction": "Generate java code\nchecks whether alluxio is running in secure mode , such as authtype #simple , authtype #kerberos , authtype #custom . ", "input": " User sLoginUser \n\n User get \n User login", "output": ""}, {"instruction": "Generate java code\nadds/registers remotecontrolclient with the mediarouter ", "input": " boolean HAS_REMOTE_CONTROL_APIS \n Object mActualMetadataEditor \n int METADATA_KEY_ARTWORK \n Object mActualRemoteControlClient \n\n void setPlaybackState \n MetadataEditorCompat putBitmap \n void apply \n void removeFromMediaRouter \n MetadataEditorCompat putString \n void clear \n Object getActualRemoteControlClientObject \n MetadataEditorCompat putLong \n MetadataEditorCompat editMetadata \n void setTransportControlFlags", "output": ""}, {"instruction": "Generate java code\ninitialize the model subsystem with the mdr modelimplementation . ", "input": " String DEFAULT_MODEL_IMPLEMENTATION \n\n ModelImplementation initializeModelImplementation \n void initializeDefault", "output": ""}, {"instruction": "Generate java code\nchecks if the ai is on the building spot . ", "input": " EntityMob mob \n World world \n boolean hasBuiltOnce \n Queue<IBlockState> blocksQueue \n Vec3 buildingSpot \n double x \n double y \n boolean isBuildingDone \n double z \n Queue<BlockPos> blockPosQueue \n boolean hasBuildingInit \n\n void enqueue \n void init \n boolean hasBuiltOnce \n void buildBlock \n void moveToBuildingSpot \n void finishingTouches \n boolean attemptBuildBlock \n boolean isBuilding", "output": ""}, {"instruction": "Generate java code\nk is initialised as 2 and increased by 1 each time the number is fed back ", "input": " long sequenceNumber \n long lastFeedbacktime \n long k \n\n void feedback \n long getSequenceNumber \n int hashCode \n boolean equals \n String toString \n int compareTo \n long getLastFeedbackTime", "output": ""}, {"instruction": "Generate java code\nreturns the current number of entries in the map . ", "input": " Object DELETED \n int _size \n int[] _values \n int _mask \n int NULL \n Object[] _keys \n\n int get \n void clear \n void resize \n String toString \n int put \n int remove", "output": ""}, {"instruction": "Generate java code\nreturn an list of abis we supported on this device ordered according to preference . use a separate inner class to isolate the version-dependent call where it wo n't cause the whole class to fail preverification . ", "input": " byte[] cachedBuffer \n\n void reliablyCopyExecutable \n void deleteOrThrow \n FileLocker lockLibsDirectory \n void freeCopyBuffer \n File createLibsDirectory \n File getLibsDirectory \n int findAbiScore \n void dumbDeleteRecrusive \n void fallocateIfSupported \n void fallocate", "output": ""}, {"instruction": "Generate java code\npausa o servidor ", "input": " Server server \n GerenciadorFila gerenciadorFila \n GerenciadorChat gerenciadorChat \n DBConnector comunicador \n GerenciadorPartida gerenciadorPartida \n GerenciadorUsuario gerenciadorUsuario \n\n void setGerenciadorFila \n Server getServer \n void setGerenciadorChat \n GerenciadorFila getGerenciadorFila \n void iniciar \n DBConnector getComunicador \n void registrar \n void setServer \n GerenciadorChat getGerenciadorChat \n GerenciadorPartida getGerenciadorPartida \n void setComunicador \n void setGerenciadorPartida \n void setGerenciadorUsuario \n GerenciadorUsuario getGerenciadorUsuario", "output": ""}, {"instruction": "Generate java code\nreturns the connection headers as a map ", "input": " Map<String,String> headers \n String charset \n Verb verb \n ParameterList bodyParams \n String url \n byte[] bytePayload \n Long readTimeout \n ParameterList querystringParams \n boolean connectionKeepAlive \n Long connectTimeout \n String CONTENT_LENGTH \n String CONTENT_TYPE \n HttpURLConnection connection \n String payload \n String DEFAULT_CONTENT_TYPE \n\n void addHeaders \n void setCharset \n String getSanitizedUrl \n void addBody \n void addHeader \n void setConnectionKeepAlive \n void setConnectTimeout \n byte[] getByteBodyContents \n ParameterList getQueryStringParams \n void setConnection \n void createConnection \n String getCharset \n void addBodyParameter \n String getUrl \n void setReadTimeout \n String getCompleteUrl \n Verb getVerb \n void addPayload \n void addPayload \n void addQuerystringParameter \n String toString \n Response doSend \n Response send \n String getBodyContents \n ParameterList getBodyParams", "output": ""}, {"instruction": "Generate java code\nthis method removes a extension from the list of known extensions . ", "input": " HashMap<String,Icon> resourceCache \n List<String> resourceExtensions \n List<String> resourceLocations \n\n boolean isInCache \n void removeResourceLocation \n java.net.URL lookupIconUrl \n void addResourceExtension \n ImageIcon lookupIconResource \n ImageIcon lookupIconResource \n ImageIcon lookupIconResource \n ImageIcon lookupIconResource \n String toJavaIdentifier \n boolean containsExtension \n void addResourceLocation \n boolean containsLocation", "output": ""}, {"instruction": "Generate java code\nprovides access to the factory . implemented with lazy instantiation . ", "input": " int GBF_SEARCH \n int ASTAR_SEARCH \n SearchFactory instance \n int UC_SEARCH \n int GRAPH_SEARCH \n int HILL_SEARCH \n int BF_SEARCH \n int ID_SEARCH \n int TREE_SEARCH \n int RBF_SEARCH \n int DF_SEARCH \n\n String[] getSearchModeNames \n String[] getSearchStrategyNames \n Search createSearch", "output": ""}, {"instruction": "Generate java code\ntest of listcomports method , of class comportcontroller . ", "input": " PlaceHolder placeHolder \n\n void testClosePort \n void testSetEventListener \n void setUpClass \n void testWriteProgram \n void setUp \n void tearDownClass \n void testOpenPort_0args \n void testRemoveEventListener \n void testRead \n void tearDown \n void testWriteComPort", "output": ""}, {"instruction": "Generate java code\ntests the customauthenticationprovider #customauthenticationprovider string constructor to throw an exception when the class is not a provider . ", "input": " ExpectedException mThrown \n\n void authenticate \n void mockCustomProvider \n void classNotFound", "output": ""}, {"instruction": "Generate java code\nsets the error description ", "input": " String errorUri \n String errorDescription \n String state \n String error \n\n String getError \n String getErrorDescription \n String getState \n void setError \n void setState \n String getErrorUri \n void setErrorUri", "output": ""}, {"instruction": "Generate java code\nreturns true if the specified field is in either of the underlying scans . ", "input": " Transaction tx \n TableInfo ti \n int nextblknum \n Scan lhsscan \n int chunksize \n int filesize \n Scan prodscan \n Scan rhsscan \n\n boolean next \n int getInt \n Constant getVal \n boolean useNextChunk \n void beforeFirst \n String getString \n void close", "output": ""}, {"instruction": "Generate java code\nchecks whether this result object contains a sink with the given method signature ", "input": " List<Stmt> path \n Logger logger \n Map<SinkInfo,Set<SourceInfo>> results \n Value sink \n Stmt context \n Value source \n\n boolean isEmpty \n void printResults \n void printResults \n Value getSink \n boolean containsSink \n List<SinkInfo> findSinkByMethodSignature \n int size \n Value getSource \n int hashCode \n int hashCode \n boolean isPathBetweenMethods \n boolean equals \n boolean equals \n List<Stmt> getPath \n Map<SinkInfo,Set<SourceInfo>> getResults \n String toString \n String toString \n String toString \n void addResult \n void addResult \n void addResult \n void addResult \n boolean isPathBetween \n boolean isPathBetween \n Stmt getContext \n Stmt getContext", "output": ""}, {"instruction": "Generate java code\ntest for non-password protectedness . ", "input": " PlaceHolder placeHolder \n\n void testPasswordProtected", "output": ""}, {"instruction": "Generate java code\ndefines the position of a location within the map . using this method , one location should be selected as reference position dist = 0 and dir = 0 and all the other location should be placed relative to it . ", "input": " Hashtable<String,Point2D> locationPositions \n LabeledGraph<String,Double> links \n\n Double getDistance \n void clear \n String randomlyGenerateDestination \n void clearLinks \n void setPosition \n void addBidirectionalLink \n void removeUnidirectionalLink \n Point2D getPosition \n void removeBidirectionalLink \n boolean isLocation \n List<String> getLocations \n void addUnidirectionalLink \n List<String> getLocationsLinkedTo", "output": ""}, {"instruction": "Generate java code\nget the mnemonic code , or null if unknown . ", "input": " int MAX_SEED_ENTROPY_BITS \n byte[] seed \n long creationTimeSeconds \n EncryptedData encryptedMnemonicCode \n EncryptedData encryptedSeed \n List<String> mnemonicCode \n int DEFAULT_SEED_ENTROPY_BITS \n\n String toHexString \n void check \n EncryptedData getEncryptedData \n byte[] getSecretBytes \n byte[] getEntropyBytes \n byte[] getSeedBytes \n byte[] getEntropy \n DeterministicSeed encrypt \n int hashCode \n boolean isEncrypted \n boolean equals \n String toString \n EncryptedData getEncryptedSeedData \n long getCreationTimeSeconds \n byte[] getMnemonicAsBytes \n DeterministicSeed decrypt \n List<String> decodeMnemonicCode \n List<String> decodeMnemonicCode \n Protos.Wallet.EncryptionType getEncryptionType", "output": ""}, {"instruction": "Generate java code\nreturns the offset of a specified field within a record ", "input": " Schema schema \n Map<String,Integer> offsets \n String tblname \n int recordlen \n\n Schema schema \n int lengthInBytes \n String fileName \n int recordLength", "output": ""}, {"instruction": "Generate java code\nimplements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . ", "input": " IEnvironments environments \n HashMap<String,DevicesConnectionFactory> factories \n AutoSIMDevicesConfig config \n\n void start", "output": ""}, {"instruction": "Generate java code\nchecks if there 's an output file with given file id . ", "input": " Map<Long,Lineage> mIdIndex \n LineageIdGenerator mLineageIdGenerator \n DirectedAcyclicGraph<Lineage> mLineageDAG \n Map<Long,Lineage> mOutputFileIndex \n\n List<Lineage> getParents \n void addLineageFromJournal \n List<Lineage> getChildren \n List<Lineage> sortLineageTopologically \n List<Lineage> getAllInTopologicalOrder \n void createLineageInternal \n void deleteLineage \n Lineage getLineageOfOutputFile \n void streamToJournalCheckpoint \n List<Lineage> getRootLineages \n Lineage getLineage \n long createLineage", "output": ""}, {"instruction": "Generate java code\nstep execution implementation ", "input": " IFetcherExecutionContext fetcherExecutionContextImpl \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nreturns the adapter position of the last visible view . this position does not include adapter changes that were dispatched after the last layout pass . ", "input": " RecyclerView.LayoutManager layoutManager \n RecyclerView recyclerView \n\n int findLastCompletelyVisibleItemPosition \n RecyclerViewPositionHelper createHelper \n int getItemCount \n int findFirstVisibleItemPosition \n View findOneVisibleChild \n int findFirstCompletelyVisibleItemPosition", "output": ""}, {"instruction": "Generate java code\nreturns the string value of a configuration property . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n void setString \n boolean load \n boolean load \n boolean load \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nwrites a setstring record to the log , and returns its lsn . updates to temporary files are not logged ; instead , a `` dummy '' negative lsn is returned . ", "input": " int txnum \n\n void rollback \n void recover \n void doRollback \n void doRecover \n void commit \n boolean isTempBlock \n int setInt", "output": ""}, {"instruction": "Generate java code\nnot required ", "input": " double lat \n String id_str \n String screen_name \n String place_name \n String image \n String user_name \n double lng \n Date created_at \n int loc_radius \n String user_id \n String text \n ArrayList<String> extras \n\n GenericJSONBuilder setIDstr \n GenericJSONBuilder addText \n GenericJSONBuilder addField \n void insert \n GenericJSONBuilder setCoordinateRadius \n GenericJSONBuilder setAuthor \n GenericJSONBuilder builder \n GenericJSONBuilder setCoordinate \n GenericJSONBuilder setCreatedTime \n void persist \n String buildFieldJSON \n GenericJSONBuilder setUserid \n GenericJSONBuilder setImage", "output": ""}, {"instruction": "Generate java code\nwill remove all comment-tags '' < ! -- comment -- > '' from test - and control-xml before comparing . ", "input": " DifferenceEvaluator differenceEvaluator \n ComparisonResult[] comparisonResultsToCheck \n ComparisonResult[] CHECK_FOR_IDENTICAL \n Source controlSource \n ComparisonResult[] CHECK_FOR_SIMILAR \n Map<String,String> namespaceContext \n Predicate<Node> nodeFilter \n List<ComparisonListener> differenceListeners \n Predicate<Attr> attributeFilter \n boolean ignoreWhitespace \n List<ComparisonListener> comparisonListeners \n boolean ignoreComments \n boolean normalizeWhitespace \n NodeMatcher nodeMatcher \n ComparisonController comparisonController \n Source testSource \n List<Difference> results \n EnumSet<ComparisonResult> comparisonResultsToCheck \n\n DiffBuilder checkForIdentical \n DiffBuilder withNamespaceContext \n DiffBuilder compare \n DiffBuilder withNodeFilter \n void comparisonPerformed \n DiffBuilder withNodeMatcher \n List<Difference> getDifferences \n DiffBuilder withComparisonController \n DiffBuilder ignoreWhitespace \n DiffBuilder withDifferenceEvaluator \n DiffBuilder withDifferenceListeners \n DiffBuilder checkForSimilar \n DiffBuilder withTest \n DiffBuilder normalizeWhitespace \n Diff build \n Source getSource \n DiffBuilder withComparisonListeners \n Source wrap \n DiffBuilder withAttributeFilter", "output": ""}, {"instruction": "Generate java code\ndelete / dish-collections / : id : delete the `` id '' dishcollection . ", "input": " Logger log \n DishCollectionService dishCollectionService \n\n ResponseEntity<List<DishCollection>> getAllDishCollections \n ResponseEntity<DishCollection> updateDishCollection \n ResponseEntity<DishCollection> createDishCollection \n ResponseEntity<DishCollection> getDishCollection", "output": ""}, {"instruction": "Generate java code\nthe likelihood-weighting algorithm in figure 14.15 . for answering queries given evidence in a bayesian network . ", "input": " Randomizer randomizer \n\n Pair<Map<RandomVariable,Object>,Double> weightedSample \n CategoricalDistribution ask", "output": ""}, {"instruction": "Generate java code\nputs a new value in the property table with the appropriate flags ", "input": " int _size \n int[] _values \n int _prime \n int NULL \n Object[] _keys \n int[] PRIMES \n\n int size \n int hashCode \n void clear \n void resize \n String toString \n int put \n int getBiggestPrime", "output": ""}, {"instruction": "Generate java code\nretrieves a byte array field from the stream . creates a new byte array that is the size of the object being retrieved . ", "input": " int valueLen \n PackFormatInputStream format \n int valueOff \n byte[] value \n\n void getByteArrayInternal \n int getByteArrayLength \n byte getByte \n short getShort \n String getString \n long getLong \n byte[] getValue \n int getInt \n int unpackInt \n short unpackShort \n String getFormat \n long getRecord \n long unpackLong", "output": ""}, {"instruction": "Generate java code\ninvalidates the sso session for the given session id ", "input": " PlaceHolder placeHolder \n\n SAMLSSOReqValidationResponseDTO validateIdPInitSSORequest \n boolean isSAMLSSOLoginAccepted \n SAMLSSORespDTO authenticate \n boolean isOpenIDLoginAccepted \n SAMLSSOReqValidationResponseDTO validateSPInitSSORequest", "output": ""}, {"instruction": "Generate java code\ninitialise the appropriate model change listeners for the given modelelement to the given listener . overrule this when you need more than listening to all events from the base modelelement . ", "input": " Logger LOG \n Collection<Object[]> listeners \n\n String getParsingHelp \n boolean isValue \n void removeElementListener \n void cleanListener \n void updateListener \n void addElementListener \n void addElementListener \n void addElementListener \n void removeAllElementListeners \n String toString \n void parse", "output": ""}, {"instruction": "Generate java code\ngets the global chromosomal strt . ", "input": " long tStart \n long qStart \n long tStop \n int blockSize \n\n long getQStart \n int getBlockSize \n long getTStop", "output": ""}, {"instruction": "Generate java code\ncreate an instance of registrationrequest ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n RoleList createRoleList \n CheckServiceAccessRequest createCheckServiceAccessRequest \n JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n PasswordCredentials createPasswordCredentials \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n ValidateAccess createValidateAccess \n JAXBElement<ValidateAccess> createValidateAccess \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n CertificateInfo createCertificateInfo \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n Access createAccess \n JAXBElement<Access> createAccess \n ProjectValidation createProjectValidation \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\ntells if the filename matches one of the given suffixes . ", "input": " PlaceHolder placeHolder \n\n List<File> getList \n List<File> getList", "output": ""}, {"instruction": "Generate java code\nget the signature crypto object ", "input": " Object encryptionCryptoProperties \n Bus bus \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n Logger LOG \n String issuer \n EncryptionProperties encryptionProperties \n CallbackHandler callbackHandler \n List<Relationship> relationships \n boolean validateUseKey \n RelationshipResolver relationshipResolver \n String callbackHandlerClass \n String signatureUsername \n Crypto encryptionCrypto \n SAMLRealmCodec samlRealmCodec \n String encryptionUsername \n Object signatureCryptoProperties \n IdentityMapper identityMapper \n RealmParser realmParser \n\n RelationshipResolver getRelationshipResolver \n Bus getBus \n void setSamlRealmCodec \n ResourceManager getResourceManager \n void setSignaturePropertiesFile \n void setCallbackHandler \n void setEncryptionProperties \n EncryptionProperties getEncryptionProperties \n boolean isValidateUseKey \n void setSignatureUsername \n List<Relationship> getRelationships \n SAMLRealmCodec getSamlRealmCodec \n String getEncryptionUsername \n void setIdentityMapper \n void setEncryptionPropertiesFile \n void setEncryptionUsername \n void setCallbackHandlerClass \n Crypto getEncryptionCrypto \n void setRelationships \n SignatureProperties getSignatureProperties \n void setSignatureProperties \n void setRealmParser \n String getIssuer \n void setSignatureCryptoProperties \n void setSignatureCrypto \n IdentityMapper getIdentityMapper \n void setValidateUseKey \n void configureProperties \n void setEncryptionCrypto \n RealmParser getRealmParser \n String getSignatureUsername \n void setIssuer \n CallbackHandler getCallbackHandler \n void setEncryptionCryptoProperties \n void setBus", "output": ""}, {"instruction": "Generate java code\nreset the maximum amount of memory recorded . ", "input": " double maxMemory \n MemoryLogger instance \n\n void checkMemory \n double getMaxMemory \n MemoryLogger getInstance", "output": ""}, {"instruction": "Generate java code\nset the file associated with the current source file . while this may be set to null , the exclude/include facilities will not work properly without a file . ", "input": " boolean ignoreExceptions \n File sourceCodeFile \n String sourceCodeFilename \n LanguageVersion languageVersion \n ConcurrentMap<String,Object> attributes \n Report report \n\n void setLanguageVersion \n boolean setAttribute \n LanguageVersion getLanguageVersion \n Object getAttribute \n boolean isIgnoreExceptions \n void setSourceCodeFilename \n File getSourceCodeFile \n void setIgnoreExceptions \n Report getReport \n Object removeAttribute \n String getSourceCodeFilename \n void setReport", "output": ""}, {"instruction": "Generate java code\nremove a node from the closed list ", "input": " Node parent \n float cost \n Array closed \n SortedList open \n float heuristic \n int maxSearchDistance \n Node[][] nodes \n boolean allowDiagMovement \n int depth \n int x \n Array list \n int y \n TileBasedMap map \n\n void add \n Node getFirstInOpen \n boolean inOpenList \n void clear \n boolean inClosedList \n int compareTo \n void addToClosed \n void addToOpen \n void remove \n boolean contains \n boolean isValidLocation \n float getMovementCost \n int size \n float getHeuristicCost \n int setParent \n Path findPath \n void removeFromOpen \n Object first", "output": ""}, {"instruction": "Generate java code\ngets the message body , as a string . the string will be decoded as utf-16le , with no byte-order-mark . this is mostly useful after receiving a message . if the message body is not a legal utf-16le bytestream , then this method will return a rubbish string . ", "input": " String _utf8 \n boolean _highPriority \n byte[] _messageBody \n String _encoding \n byte[] _correlationId \n String _label \n\n byte[] getCorrelationId \n String getLabel \n String getCorrelationIdAsString \n void setBodyAsString \n byte[] getBody \n void setCorrelationId \n void setHighPriority \n void setLabel \n boolean getHighPriority \n void setBody \n void setCorrelationIdAsString", "output": ""}, {"instruction": "Generate java code\nmethod called only from the viewer . sends the move command in a designated path from input to the model and triggers an interactive event , if possible . ", "input": " RpgScreen viewer \n RpgPlatform model \n\n void updateModel \n RpgScreen getViewer \n RpgPlatform getModel \n void characterMoved \n void setModel \n void triggerEvent \n void setViewer \n TiledMap getMap \n void runAutomaticEvents", "output": ""}, {"instruction": "Generate java code\ngets the configuration whether to skip failing rules true or whether to throw a a runtimeexception and abort the processing for the first failing rule . ", "input": " boolean ignoreExceptions \n File sourceCodeFile \n String sourceCodeFilename \n LanguageVersion languageVersion \n ConcurrentMap<String,Object> attributes \n Report report \n\n void setSourceCodeFile \n void setLanguageVersion \n boolean setAttribute \n LanguageVersion getLanguageVersion \n Object getAttribute \n void setSourceCodeFilename \n File getSourceCodeFile \n void setIgnoreExceptions \n Report getReport \n Object removeAttribute \n String getSourceCodeFilename \n void setReport", "output": ""}, {"instruction": "Generate java code\nonly appends delimiter if the accumulated string is non-empty . note : this is n't a candidate implementation for joiner since it fails on leading empty components . ", "input": " Joiner JOINER_ON_CHARACTER \n char DELIMITER_CHARACTER \n Iterable<String> components \n Joiner JOINER_ON_STRING \n String DELIMITER_STRING \n int componentLength \n int count \n\n int joinerWithStringDelimiter \n int joinerWithCharacterDelimiter \n int alwaysAppendThenBackUp \n int booleanIfFirst \n void setUp \n int assignDelimiter \n int joinerInlined", "output": ""}, {"instruction": "Generate java code\nconvenience method to merge a map > . ", "input": " TreeMap<String,SortedSet<String>> wrappedMap \n\n String getAsQueryString \n Set<java.util.Map.Entry<String,SortedSet<String>>> entrySet \n boolean containsKey \n Collection<SortedSet<String>> values \n boolean isEmpty \n void clear \n SortedSet<String> put \n SortedSet<String> put \n String put \n String put \n boolean containsValue \n SortedSet<String> remove \n int size \n String getFirst \n String getFirst \n void putAll \n void putAll \n void putAll \n SortedSet<String> get \n String getAsHeaderElement \n Set<String> keySet \n String putNull", "output": ""}, {"instruction": "Generate java code\nthe hashcode of a groupvalue object is the sum of the hashcodes of its field values . ", "input": " Map<String,Constant> vals \n\n Constant getVal \n boolean equals", "output": ""}, {"instruction": "Generate java code\nreturns the next available tile in the specified lane that is furthest from the base . a tile is available if it 's not occupied by a card . ", "input": " Array<Array<Array<Card>>> tiles \n int HUMAN_PLAYER \n String name \n int id \n int COMPUTER_PLAYER \n\n int playerBaseAttacked \n int laneWithMoreEnemiesInvading \n int nextAvailableLane \n void read \n int nextAvailableTile \n int laneWithMoreEnemies \n String getName \n int enemyBaseAttacked \n Array<Card> getEnemyCards \n boolean cardOnMap \n void addCard \n Array<Card> getPlayerCards \n int tileClosestToBase \n void setTiles \n void write \n int laneWithLessAllies \n Array<Array<Array<Card>>> getTiles", "output": ""}, {"instruction": "Generate java code\nget the identifier corresponding to a transformed version of this token ", "input": " Date expires \n byte[] data \n String transformedTokenIdentifier \n Date created \n Element unattachedReference \n byte[] secret \n SecurityContext securityContext \n int tokenHash \n Element token \n Crypto crypto \n Principal principal \n long serialVersionUID \n String wsuId \n String issuerAddress \n String encrKeySha1Value \n String id \n X509Certificate x509cert \n String BOOTSTRAP_TOKEN_ID \n String tokenType \n Element attachedReference \n Map<String,Object> properties \n Key key \n\n void setAttachedReference \n String getTokenType \n void setProperties \n void setExpires \n String getIssuerAddress \n void setSHA1 \n String getId \n void setX509Certificate \n void setTokenHash \n void setPrincipal \n Principal getPrincipal \n String getIdFromSTR \n void setId \n void setIssuerAddress \n byte[] getData \n void setKey \n void setTokenType \n Key getKey \n void setData \n Map<String,Object> getProperties \n void setTransformedTokenIdentifier \n int getTokenHash \n Date getCreated \n Element getUnattachedReference \n void processLifeTime \n void setUnattachedReference \n void setSecurityContext \n Crypto getCrypto \n byte[] getSecret \n void setToken \n void setSecret \n X509Certificate getX509Certificate \n Element getToken \n boolean isAboutToExpire \n boolean isExpired \n void setWsuId \n Date getExpires \n String getWsuId \n Element cloneElement \n Element getAttachedReference \n String getSHA1 \n SecurityContext getSecurityContext", "output": ""}, {"instruction": "Generate java code\nsets the loaded in cats . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nprovide number of decisions made by this mutationfilter . ", "input": " int decisions \n int somaticWhitelistAccepts \n Set<Long> whiteListGenesForPromoterMutations \n int germlineWhitelistAccepts \n int utrRejects \n int silentOrIntronRejects \n int missenseGermlineRejects \n int mutationStatusNoneRejects \n int emptyAnnotationRejects \n int redactedRejects \n int unknownAccepts \n int accepts \n int lohOrWildTypeRejects \n int igrRejects \n\n int getUnknownAccepts \n String getStatistics \n boolean safeStringTest \n boolean acceptMutation \n int getMissenseGermlineRejects \n int getAccepts \n int getEmptyAnnotationRejects \n int getRejects \n int getIGRRejects \n int getLohOrWildTypeRejects \n int getSilentOrIntronRejects \n int getSomaticWhitelistAccepts \n int getUTRRejects \n int getGermlineWhitelistAccepts \n int getMutationStatusNoneRejects \n String toString \n int getRedactedRejects", "output": ""}, {"instruction": "Generate java code\nformat utc datetime to local datetime in sql format ", "input": " String pattern \n\n String getCurrentUtcSql \n String formatUTC \n String formatUTC \n String getCurrentLocal \n String getPattern \n Date parseSqlUtc \n Date parseUTC \n String formatUTCtoSqlUTC", "output": ""}, {"instruction": "Generate java code\nget stack size . ", "input": " List<E> mElements \n int mSize \n\n E pop \n E set \n E get \n boolean isEmpty \n void clear \n void push \n E remove \n E peek", "output": ""}, {"instruction": "Generate java code\nsets the last version recorded as having run to the currently running version . ", "input": " boolean s_newVersionSet \n boolean s_newVersion \n boolean s_installed \n Logger LOG \n\n double getVersion \n boolean running \n boolean hasId \n void setInstalled \n double getLastVersion \n boolean isInstalled \n long setId \n long getId \n String getBaseUri \n File getTorrentDir \n boolean newVersion", "output": ""}, {"instruction": "Generate java code\nreturn the hostname the servlet container is bound to . ", "input": " Server server \n String host \n String contextPath \n Context context \n int port \n\n int getPort \n String getContextURL \n String getServletURL \n void stop \n void start \n void addServletEndpoint", "output": ""}, {"instruction": "Generate java code\nadds a commit to the push entry object as long as the commit is not a duplicate . ", "input": " Date date \n int authorCount \n Map<String,String> refIdChanges \n Set<RepositoryCommit> commits \n long serialVersionUID \n String repository \n Map<String,ReceiveCommand.Type> refUpdates \n UserModel user \n\n String getOldId \n int getAuthorCount \n int getCommitCount \n boolean isDelete \n List<String> getChangedTags \n int compareTo \n ReceiveCommand.Type getChangeType \n List<String> getChangedRefs \n List<String> getChangedRefs \n List<String> getChangedBranches \n PersonIdent getAuthorIdent \n List<RepositoryCommit> getCommits \n List<RepositoryCommit> getCommits \n PersonIdent getCommitterIdent \n void addCommits \n boolean isNonFastForward \n boolean isNonFastForward \n String toString \n void updateRef \n void updateRef \n String getNewId", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #getmonth . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nestimates the number of block accesses required to find all index records having a particular search key . the method uses the table 's metadata to estimate the size of the index file and the number of index records per block . it then passes this information to the traversalcost method of the appropriate index type , which provides the estimate . ", "input": " String fldname \n Transaction tx \n TableInfo ti \n StatInfo si \n String idxname \n\n Schema schema \n int distinctValues \n int recordsOutput \n Index open", "output": ""}, {"instruction": "Generate java code\napply the rulechain to the given nodes using the given rulecontext , for those rules using the given language . ", "input": " Map<Language,RuleChainVisitor> languageToRuleChainVisitor \n\n void add \n void add \n RuleChainVisitor getRuleChainVisitor", "output": ""}, {"instruction": "Generate java code\ngets a builder configured as this object . ", "input": " String macAddress \n String ipAddress \n AddressPair addressPair \n\n Builder macAddress \n String getMacAddress \n Objects.ToStringHelper string \n String getIpAddress \n AddressPair build \n int hashCode \n boolean equals \n Builder fromAddressPair \n Builder builder \n Builder ipAddress \n String toString", "output": ""}, {"instruction": "Generate java code\nsets an error number with a custom message . ", "input": " int EN_OK \n int EN_SECURITY_ERROR \n Element errorElement \n int EN_UKNOWN \n Element filesElement \n Document document \n int EN_ALREADY_EXISTS \n int EN_INVALID_FOLDER_NAME \n Element foldersElement \n int EN_ERROR \n\n void setFoldersAndFiles \n void setFolders \n String toString \n void setFiles", "output": ""}, {"instruction": "Generate java code\nset the unique name of the editor ", "input": " HttpServletRequest request \n String toolbarSet \n String instanceName \n String height \n String basePath \n FCKeditorConfig config \n String value \n String width \n\n String createHtml \n void setValue \n String escapeXml \n String createInputForVariable \n String toString \n void setToolbarSet \n void setBasePath \n void setWidth \n void setHeight \n FCKeditorConfig getConfig \n void setConfig", "output": ""}, {"instruction": "Generate java code\nreturns whether or not to rebuild the hudson.model.run if thecombination is not in the database , the method returns true , meaning the run will build . ", "input": " boolean rebuildDownstream \n int baseBuildNumber \n Map<String,Boolean> configurations \n\n int getBaseBuildNumber \n boolean doRebuildDownstream \n String getUrlName \n void setBaseBuildNumber \n void setRebuildDownstream \n String getDisplayName \n String getIconFileName \n RebuildAction clone \n RebuildAction clone \n void addConfiguration \n String toString", "output": ""}, {"instruction": "Generate java code\nsets console flag . when set to true progress monitor messages are displayed to system.out . ", "input": " boolean consoleMode \n org.apache.log4j.Logger logger \n int maxValue \n boolean showProgress \n ProgressMonitor progressMonitor \n StringBuffer log \n String currentMessage \n List<String> debugMessages \n TreeSet<String> warnings \n int curValue \n HashMap<String,Integer> warningCounts \n\n void setCurValue \n void setConsoleModeAndParseShowProgress \n void setShowProgress \n void setCurrentMessage \n int getMaxValue \n String getLog \n void logWarning \n ArrayList<String> getWarnings \n void logDebug \n ArrayList<String> getMessages \n boolean isConsoleMode \n List<String> getDebugMessages \n void setMaxValue \n void incrementCurValue \n boolean isRunningOnServer \n String getCurrentMessage \n int getCurValue \n boolean isShowProgress \n double getPercentComplete", "output": ""}, {"instruction": "Generate java code\nfind the raw query string parameter indicated and append it to the string builder . the appended value will be in the form ` paramname = paramvalue ' minus the quotes . ", "input": " Log log \n\n boolean validateSignature \n void init \n String buildSignedContentString \n byte[] getSignedContent \n CriteriaSet buildCriteriaSet \n byte[] getSignature \n String getSigAlg", "output": ""}, {"instruction": "Generate java code\nget the named property . handles the `` dim '' property and returns not_found for all other names . ", "input": " Scriptable parent \n int dim \n List<Object> list \n Scriptable prototype \n\n Scriptable getPrototype \n void setPrototype \n boolean hasInstance \n void setParentScope \n Object[] getIds \n String getClassName \n boolean has \n boolean has \n Scriptable getParentScope \n void delete \n void delete \n void put \n void put \n Object getDefaultValue", "output": ""}, {"instruction": "Generate java code\nget all features not in the source . ", "input": " Object mClassifier \n Object namespace \n List newFeatures \n List newInnerClasses \n\n void newFeature \n Vector getAssociationEnds \n Object getNamespace \n List getAssociationEndsList \n List getNewInnerClassesList \n Vector getNewInnerClasses \n Object newClassifier \n List getNewFeaturesList \n Object getClassifier", "output": ""}, {"instruction": "Generate java code\nfinds a classstats in the direct children of this class . this can only be a directly nested class , for example in the following snippet , a can get b and b can get c but a can not get c without asking b. class myclass / / classstats a class mynested / / classstats b class mydeeplynested / / classstats c ", "input": " Map<FieldSignature,Set<String>> fields \n Map<String,ClassStats> nestedClasses \n Map<ClassMetricKey,Double> memo \n Map<OperationSignature,Map<String,OperationStats>> operations \n\n double compute \n double compute \n void addOperation \n void addField \n boolean hasMatchingSig \n boolean hasMatchingSig", "output": ""}, {"instruction": "Generate java code\nsets the gene symbol . ", "input": " double score \n String gene \n int entrezGeneId \n GeneWithSpec aGeneWithSpec \n\n String getGene \n void setaGeneWithSpec \n int getEntrezGeneId \n GeneWithSpec getaGeneWithSpec \n double getScore \n void setScore \n void setEntrezGeneId", "output": ""}, {"instruction": "Generate java code\nadds a location path to the list of known locations . locations are searched in the order they are added , so for best performance add the most likely locations first . ", "input": " HashMap<String,Icon> resourceCache \n List<String> resourceExtensions \n List<String> resourceLocations \n\n boolean isInCache \n void removeResourceLocation \n java.net.URL lookupIconUrl \n void addResourceExtension \n ImageIcon lookupIconResource \n ImageIcon lookupIconResource \n ImageIcon lookupIconResource \n ImageIcon lookupIconResource \n String toJavaIdentifier \n void removeResourceExtension \n boolean containsExtension \n boolean containsLocation", "output": ""}, {"instruction": "Generate java code\nwrites an entry to the checkpoint file . the entry should not have its sequence number set . this method will add the proper sequence number to the passed in entry . ", "input": " long mNextCompleteLogNumber \n DataOutputStream mOutputStream \n String mJournalDirectory \n long mMaxLogSize \n UnderFileSystem mUfs \n OutputStream mRawOutputStream \n String mTempCheckpointPath \n long mNextEntrySequenceNumber \n CheckpointOutputStream mCheckpointOutputStream \n String mCompletedDirectory \n Journal mJournal \n boolean mIsClosed \n DataOutputStream mDataOutputStream \n Logger LOG \n EntryOutputStream mEntryOutputStream \n\n OutputStream openCurrentLog \n void completeCurrentLog \n boolean isClosed \n void flush \n void flush \n void deleteCompletedLogs \n JournalOutputStream getEntryOutputStream \n void completeAllLogs \n void close \n void close \n void close \n JournalOutputStream getCheckpointOutputStream", "output": ""}, {"instruction": "Generate java code\ndetermines whether a specified us-ascii character is an http control character ", "input": " byte QS \n byte CR \n byte COLON \n byte HT \n byte FOWARD_SLASH \n byte PERCENT \n byte LF \n String US_ASCII_CHARSET_NAME \n byte BACK_SLASH \n byte AMP \n byte COMMA \n int[] HEX_DEC \n byte PLUS \n boolean[] HTTP_CONTROLS \n byte SEMI_COLON \n byte[] CRLF_BYTES \n byte SPACE \n String DEFAULT_CHARACTER_ENCODING \n byte EQUALS \n byte QUOTE \n boolean[] HTTP_SEPARATORS \n\n int hexAsciiToDecimal \n void appendCRLF \n void pushBack \n void appendString \n boolean isHttpSeparator \n boolean isHex \n byte[] getAsciiBytes \n boolean isWhiteSpace", "output": ""}, {"instruction": "Generate java code\nregisters a cookiespecfactory with the given identifier.if a specification with the given name already exists it will be overridden . this nameis the same one used to retrieve the cookiespecfactory from #getcookiespec string . ", "input": " ConcurrentHashMap<String,CookieSpecFactory> registeredSpecs \n\n CookieSpec getCookieSpec \n CookieSpec getCookieSpec \n void setItems \n void unregister \n List<String> getSpecNames", "output": ""}, {"instruction": "Generate java code\nadjusts the box so that the result is the intersection of both boxes . ", "input": " float lonMax \n float latMin \n float lonMin \n float latMax \n\n float getWestEastDistKM \n float getLatMax \n boolean intersectsWith \n float getNorthSouthDistKM \n void adjust \n float getLatMin \n String toString \n boolean isInside \n float getLonMin \n float getLonMax \n BoundingBox unifyWith", "output": ""}, {"instruction": "Generate java code\nthe component we are decorating . ", "input": " ExtensionMechanismsHelper impl \n\n Object getStereotype \n Object getStereotype \n boolean isValidStereotype \n void addTaggedValue \n void removeTaggedValue \n Collection getAllPossibleStereotypes \n boolean isStereotype \n void removeBaseClass \n void setType \n boolean hasStereotype \n void setIcon \n Collection getStereotypes \n Collection getStereotypes \n String getMetaModelName \n boolean isValidStereoType \n void addExtendedElement \n void addBaseClass \n void setValueOfTag \n boolean isStereotypeInh \n void setTaggedValue \n void setTagType \n void addCopyStereotype \n void setDataValues \n boolean hasStereoType", "output": ""}, {"instruction": "Generate java code\nreturns everything between the endpoints relative to the specified comparator , with the specified endpoint behavior . ", "input": " Comparator<? super T> comparator \n BoundType upperBoundType \n BoundType lowerBoundType \n boolean hasLowerBound \n T lowerEndpoint \n boolean hasUpperBound \n T upperEndpoint \n GeneralRange<T> reverse \n\n GeneralRange<T> all \n GeneralRange<T> upTo \n boolean tooLow \n BoundType getUpperBoundType \n GeneralRange<T> intersect \n GeneralRange<T> downTo \n boolean hasUpperBound \n boolean isEmpty \n GeneralRange<T> reverse \n boolean tooHigh \n T getLowerEndpoint \n Comparator<? super T> comparator \n boolean contains \n BoundType getLowerBoundType \n int hashCode \n boolean hasLowerBound \n boolean equals \n GeneralRange<T> from \n String toString \n T getUpperEndpoint", "output": ""}, {"instruction": "Generate java code\nprocesses the input stream against a rule set using the given input encoding . ", "input": " PMDConfiguration configuration \n\n void usesTypeResolution \n void determineLanguage \n void usesDFA \n Node parse \n void symbolFacade \n void usesMetrics \n void processSource", "output": ""}, {"instruction": "Generate java code\ntest clearing approved sites for a client that does n't have any stored approved sites . ensure that the repository 's remove method is never called in this case . ", "input": " StatsService statsService \n String clientId \n ApprovedSiteService service \n ClientDetailsEntity client \n ApprovedSite site3 \n ApprovedSite site1 \n ApprovedSiteRepository repository \n ApprovedSite site2 \n\n void clearApprovedSitesForClient_success \n void prepare", "output": ""}, {"instruction": "Generate java code\nmethod startprefixmapping . ", "input": " Map<String,String> mapping \n XMLStreamWriter writer \n boolean inCDATA \n\n String getPrefix \n void endPrefixMapping \n void startElement \n void startEntity \n void endCDATA \n void endDocument \n void startDocument \n void endEntity \n void startDTD \n void endDTD \n void characters \n void startCDATA \n void endElement \n void skippedEntity \n void comment \n void setDocumentLocator \n void ignorableWhitespace \n void processingInstruction", "output": ""}, {"instruction": "Generate java code\nreturn a classloader that can see all the given interfaces if the given loader can see all interfaces then it is used . if not then a combined classloader of all interface classloaders is returned . ", "input": " ProxyHelper HELPER \n\n Object getProxyInternal \n Object getProxy \n boolean canSeeAllInterfaces", "output": ""}, {"instruction": "Generate java code\nsets up the stream before a test runs . ", "input": " byte[] INCREASING_BYTES \n long BLOCK_LENGTH \n TestBufferedBlockOutStream mTestStream \n ExpectedException mThrown \n\n void byteArrayAtOffset \n void byteArrayWrite \n void doubleFlush \n void singleByteWrite \n void writePastBlock \n void remaining \n void writeToClosed", "output": ""}, {"instruction": "Generate java code\nreturns the value of the specified field , as a constant . the schema is examined to determine the field 's type . if integer , then the record file 's getint method is called ; otherwise , the getstring method is called . ", "input": " RecordFile rf \n Schema sch \n\n boolean next \n void beforeFirst \n void insert \n String getString \n void delete \n void setInt \n void moveToRid \n int getInt \n void setString \n void close \n void setVal \n boolean hasField \n RID getRid", "output": ""}, {"instruction": "Generate java code\nbegin normal traversal of a subtree rooted at n . this gives the visitor the option of changing internal state or returning a new visitor which will be used to visit the children of n . the default implementation of this method is to call #enter node enter n , as most subclasses do not need to know the parent of the node n . ", "input": " Lang lang \n\n N visitEdgeNoOverride \n Node leave \n Node leave \n void finish \n void finish \n String toString \n Node override \n Node override \n N visitEdge \n NodeVisitor copy \n Lang lang \n NodeVisitor begin", "output": ""}, {"instruction": "Generate java code\nsets the backing threadfactory for new threads created with this threadfactory . threadswill be created by invoking #newthread runnable on this backing threadfactory . ", "input": " Boolean daemon \n UncaughtExceptionHandler uncaughtExceptionHandler \n Integer priority \n String nameFormat \n ThreadFactory backingThreadFactory \n\n ThreadFactoryBuilder setDaemon \n ThreadFactoryBuilder setUncaughtExceptionHandler \n ThreadFactory build \n ThreadFactory build \n ThreadFactoryBuilder setNameFormat \n String format \n ThreadFactoryBuilder setPriority", "output": ""}, {"instruction": "Generate java code\nget the downlinks of this node . ", "input": " int edgeOffset \n FigNode figure \n float UPLINK_FACTOR \n List<ClassdiagramNode> uplinks \n int rank \n List<ClassdiagramNode> downlinks \n int NORANK \n int column \n int placementHint \n float weight \n int NOCOLUMN \n int NOWEIGHT \n\n Vector<ClassdiagramNode> getUplinks \n Point getLocation \n boolean isComment \n List<ClassdiagramNode> getUpNodes \n float getWeight \n FigNode getFigure \n int compareTo \n void setColumn \n void addDownlink \n void setLocation \n void setEdgeOffset \n boolean isStandalone \n int getColumn \n float getSubtreeWeight \n float calculateWeight \n void setRank \n void addRank \n int getTypeOrderNumer \n int getEdgeOffset \n int getRank \n void setWeight \n boolean isPackage \n void addUplink \n int getLevel \n Dimension getSize \n void setPlacementHint \n int getPlacementHint \n void setFigure \n List<ClassdiagramNode> getDownNodes", "output": ""}, {"instruction": "Generate java code\ngets the test id . ", "input": " Long expectedDataUnitId \n Long seqNo \n Long dataSetId \n Long dataUnitId \n String expectedValue \n String actualValue \n Long expectedDataSetId \n String errorCode \n Long testId \n String failedAttributeName \n String srcFileName \n String errorMsg \n\n void setExpectedValue \n String getExpectedValue \n Long getExpectedDataSetId \n void setExpectedDataSetId \n void setActualValue \n Long getDataSetId \n void setSrcFileName \n Long getExpectedDataUnitId \n void setExpectedDataUnitId \n String getSrcFileName \n Long getSeqNo \n String getFailedAttributeName \n void setTestId \n void setFailedAttributeName \n void setErrorCode \n String getActualValue \n Long getDataUnitId \n void setSeqNo \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setDataSetId \n String toString \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nreturn the uuid of the element . ", "input": " PlaceHolder placeHolder \n\n String getNewUUID", "output": ""}, {"instruction": "Generate java code\nreturns an long filesize from a string value such as 50m or 50mb ", "input": " Logger logger \n Properties overrides \n Set<String> removals \n\n Properties read \n Properties getSettings \n int getInteger \n boolean hasSettings \n String getString \n void removeSetting \n boolean saveSettings \n boolean saveSettings \n Map<String,String> getMap \n List<String> getStrings \n List<String> getStrings \n void overrideSetting \n void overrideSetting \n void overrideSetting \n long getLong \n char getChar \n String getRequiredString \n List<String> getAllKeys \n void merge \n boolean getBoolean \n List<Integer> getIntegers \n List<Integer> getIntegers", "output": ""}, {"instruction": "Generate java code\nencode a string to the `` x-www-form-urlencoded '' form , enhanced with the utf-8-in-url proposal . this is what happens : the ascii characters ` a ' through ` z ' , ` a ' through ` z ' , and ' 0 ' through ' 9 ' remain the same . the unreserved characters - _ . ! ~ ' remain the same . the space character ' ' is converted into a plus sign ' + ' . all other ascii characters are converted into the 3-character string '' % xy '' , where xy is the two-digit hexadecimal representation of the character code all non-ascii characters are encoded in two steps : first to a sequence of 2 or 3 bytes , using the utf-8 algorithm ; secondly each of these bytes is encoded as '' % xx '' . ", "input": " String[] hex \n\n void append", "output": ""}, {"instruction": "Generate java code\ngets the created date . ", "input": " String comments \n String inactivationReasonType \n Timestamp receiptDate \n String isActive \n BigDecimal predecessorId \n String srcFileName \n long serialVersionUID \n String srcUniqueFileName \n BigDecimal successorId \n Timestamp createdDate \n List<PCLDataUnitEntity> pclDataUnits \n long dataSetId \n BigDecimal feedId \n BigDecimal fileSize \n String destFileName \n String checksum \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isUpdate \n String receiptDateType \n String status \n\n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n long getDataSetId \n void setReceiptDateType \n void setIsPrepopulated \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getStatus \n String getDestFileName \n String getIsUpdate \n BigDecimal getFileSize \n List<PCLDataUnitEntity> getPclDataUnits \n void setPclDataUnits \n void setInactivationReasonType \n Timestamp getReceiptDate \n String getComments \n void setComments \n PCLDataUnitEntity removePclDataUnit \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setFileSize \n BigDecimal getPredecessorId \n void setChecksum \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setRunId \n void setReceiptDate \n void setStatus \n Timestamp getModifiedDate \n String getIsActive \n void setSuccessorId \n void setDestFileName \n PCLDataUnitEntity addPclDataUnit \n void setModifiedDate \n void setCreatedDate \n void setDataSetId \n void setPredecessorId \n void setIsActive \n void setChecksumType", "output": ""}, {"instruction": "Generate java code\ncreate a new evaluator to resolve the el functions and variables using action creation time phase 2 ", "input": " Integer HOUR \n Integer MINUTE \n\n ELEvaluator createLazyEvaluator \n String make2Digits \n ELEvaluator createSLAEvaluator \n void setConfigToEval \n ELEvaluator createELEvaluatorForGroup \n ELEvaluator createELEvaluatorForDataEcho \n ELEvaluator createURIELEvaluator \n SyncCoordDataset getDSObject \n ELEvaluator createDataEvaluator", "output": ""}, {"instruction": "Generate java code\ngets the value of the qname property . ", "input": " QName qname \n\n void setQName \n boolean isSetQName", "output": ""}, {"instruction": "Generate java code\nset the trax factory to use . ", "input": " TransformerFactory factory \n ErrorListener errorListener \n Properties output \n Source styleSheet \n Source source \n URIResolver uriResolver \n Map<String,Object> params \n\n void setSource \n void setStylesheet \n void transformTo \n void setErrorListener \n void clearParameters \n String transformToString \n void setURIResolver \n void clearOutputProperties \n void addParameter \n Document transformToDocument \n void addOutputProperty", "output": ""}, {"instruction": "Generate java code\nproduce the next identifier . ", "input": " int salt \n AtomicInteger gen \n\n int result \n short hi16 \n int unmix \n String format \n short lo16 \n int mix \n int mix", "output": ""}, {"instruction": "Generate java code\ncalled on completion of the mep for which the conduit was required . ", "input": " Endpoint endpoint \n\n void prepare \n Endpoint getEndpoint \n Conduit selectConduit \n void setEndpoint", "output": ""}, {"instruction": "Generate java code\nreturns the executor that will be used to run this service . subclasses may overridethis method to use a custom executor , which may configure its worker thread with a specific name , thread group or priority . the returned executor 's executor #execute runnable execute method is called when this service is started , and shouldreturn promptly . the default implementation returns a new executor that sets the name of its threadsto the string returned by #servicename ", "input": " Logger logger \n Service delegate \n\n void doStop \n void run \n Throwable failureCause \n String serviceName \n void triggerShutdown \n Service startAsync \n void shutDown \n boolean isRunning \n void startUp \n void doStart \n void awaitTerminated \n void awaitTerminated \n Service stopAsync \n String toString \n String toString \n State state \n void awaitRunning \n void awaitRunning \n void addListener", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmbparser #setoriginid string . ", "input": " String EXAMPLE \n RMBSentence rmb \n RMBSentence empty \n\n void testGetVelocity \n void testGetCrossTrackError \n void testArrivalStatus \n void testSetDestination \n void testSetBearing \n void testSetSteerToWithNull \n void testSetStatus \n void testConstructor \n void testGetBearing \n void testSetBearingWithNegativeValue \n void testSetSteerTo \n void testGetSteerTo \n void testSetVelocity \n void testGetOriginId \n void testSetVelocityWithNegativeValue \n void setUp \n void testGetStatus \n void testSetBearingWithValueGreaterThanAllowed \n void testGetRange \n void testSetRange \n void testGetDestination \n void testSetCrossTrackError", "output": ""}, {"instruction": "Generate java code\nget a feature from the current classifier not yet modeled . ", "input": " String classnamePrefix \n Logger LOG \n Collection obsoleteInnerClasses \n Object component \n int anonymousClassCounter \n Context context \n Object classifier \n Collection obsoleteFeatures \n\n void addClassifierContext \n void addPackageContext \n void removeObsoleteFeatures \n void innerClassifier \n void addComponent \n void outerClassifier \n Object getMethod \n Object getClassifier \n void removeObsoleteInnerClasses \n Object getAttribute \n void feature \n Collection getFeatures \n String getClassnamePrefix \n Object getOperation \n Object getComponent \n String anonymousClass \n Context getContext", "output": ""}, {"instruction": "Generate java code\ntest of getversion method , of class testdosattack . ", "input": " PlaceHolder placeHolder \n\n void testGetAuthor \n void testCreateTamperedRequest \n void setUpClass \n void testGetName \n void testGetCountermeasures \n void setUp \n void tearDownClass \n void testGetDescription \n void testInitializePlugin \n void tearDown", "output": ""}, {"instruction": "Generate java code\nget a attribute from the current classifier not yet modeled . ", "input": " String classnamePrefix \n Logger LOG \n Collection obsoleteInnerClasses \n Object component \n int anonymousClassCounter \n Context context \n Object classifier \n Collection obsoleteFeatures \n\n void addClassifierContext \n void addPackageContext \n void removeObsoleteFeatures \n void innerClassifier \n void addComponent \n void outerClassifier \n Object getMethod \n Object getClassifier \n Object getFeature \n void removeObsoleteInnerClasses \n void feature \n Collection getFeatures \n String getClassnamePrefix \n Object getOperation \n Object getComponent \n String anonymousClass \n Context getContext", "output": ""}, {"instruction": "Generate java code\ngets the end date . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n void setFileCount \n BigDecimal getDownloadSize \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\ncreate merge-with query . ", "input": " String graphName \n String user \n Endpoint ep \n\n String createSelectQuery \n String createAutoMergeQuery \n String createCommonMergeQuery \n void setUpBeforeClass \n void testCommonMerge \n void setUp \n void testManualMerge \n void testAutoMerge \n void testCreatedGraph \n String createManualMergeQuery", "output": ""}, {"instruction": "Generate java code\ngets the description of the third-party application . ", "input": " String clientIpAddress \n String clientId \n List<String> allowedGrantTypes \n boolean isConfidential \n List<String> applicationCertificates \n UserSubject subject \n List<String> redirectUris \n List<String> registeredScopes \n String applicationLogoUri \n long serialVersionUID \n String applicationDescription \n List<String> registeredAudiences \n String applicationWebUri \n String clientSecret \n Map<String,String> properties \n String applicationName \n\n UserSubject getSubject \n String getApplicationName \n void setSubject \n String getClientId \n List<String> getAllowedGrantTypes \n void setApplicationDescription \n void setRegisteredScopes \n void setProperties \n String getClientIpAddress \n void setApplicationCertificates \n String getApplicationWebUri \n void setApplicationLogoUri \n void setConfidential \n List<String> getRedirectUris \n void setApplicationWebUri \n void setClientIpAddress \n String getApplicationLogoUri \n void setClientSecret \n void setAllowedGrantTypes \n boolean isConfidential \n String getClientSecret \n void setApplicationName \n Map<String,String> getProperties \n void setRedirectUris \n List<String> getRegisteredAudiences \n void setRegisteredAudiences \n List<String> getApplicationCertificates \n void setClientId \n List<String> getRegisteredScopes", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gsaparser #getverticaldop . ", "input": " GSASentence instance \n String EXAMPLE \n GSASentence empty \n\n void testGetFixStatus \n void testSetFixStatus \n void testGetPositionDOP \n void testGetSatelliteIds \n void testConstructor \n void testGetHorizontalDOP \n void testSetPositionDOP \n void testSetFaaMode \n void testSetHorizontalDOP \n void setUp \n void testGetFaaMode \n void testSetVerticalDOP \n void testSetSatelliteIds", "output": ""}, {"instruction": "Generate java code\ngets the authorization code ", "input": " String redirectUri \n String code \n long serialVersionUID \n\n void setRedirectUri \n String getType \n void setCode \n MultivaluedMap<String,String> toMap \n String getRedirectUri", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time #setminutes int . ", "input": " Time time \n\n void testDateRoundTrip \n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\nget the signatureproperties to use . ", "input": " CallbackHandler callbackHandler \n Logger LOG \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n String callbackHandlerClass \n String signaturePropertiesFile \n String signatureAlias \n String issuer \n\n String getIssuer \n String getSignatureAlias \n void setSignatureCrypto \n void setCallbackHandlerClass \n void setIssuer \n Crypto getSignatureCrypto \n CallbackHandler getCallbackHandler \n void setSignatureAlias \n void setSignaturePropertiesFile \n void setSignatureProperties \n void setCallbackHandler", "output": ""}, {"instruction": "Generate java code\nupdates the value currently associated with key by combining it with x via the specified accumulator function , returning the old value . the previous value associated with key or zero , if there is none is passed as the first argumentto accumulatorfunction , and x is passed as the second argument . ", "input": " Map<K,Long> asMap \n ConcurrentHashMap<K,Long> map \n\n long getAndIncrement \n long incrementAndGet \n Map<K,Long> createAsMap \n Map<K,Long> asMap \n boolean removeIfZero \n boolean replace \n long decrementAndGet \n long updateAndGet \n long sum \n long put \n long remove \n boolean remove \n void removeAllZeros \n long get \n void putAll \n AtomicLongMap<K> create \n AtomicLongMap<K> create \n long getAndAdd \n long accumulateAndGet \n boolean containsKey \n boolean isEmpty \n void clear \n int size \n long addAndGet \n String toString \n long getAndUpdate \n long getAndDecrement \n long putIfAbsent", "output": ""}, {"instruction": "Generate java code\ninitialized some new modelelement o. ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nreturns a method corresponding to the given java methoddeclaration . ", "input": " String name \n Map DESCRIPTORS \n String desc \n\n String getDescriptor \n Type[] getArgumentTypes \n String getName \n Type getReturnType \n int hashCode \n boolean equals \n String toString \n String map", "output": ""}, {"instruction": "Generate java code\nsend an error log message . ", "input": " String TAG_CONTENT_PRINT \n boolean sIsLogEnabled \n String sApplicationTag \n\n StackTraceElement getCurrentStackTraceElement \n String getTagContentPrint \n void d \n void d \n void d \n String getContent \n void i \n void i \n String getsApplicationTag \n void setsIsLogEnabled \n boolean issIsLogEnabled \n void trace \n void v \n void w \n void w \n String getContents \n void traceStack \n void traceStack \n void setsApplicationTag", "output": ""}, {"instruction": "Generate java code\n< a > < b > < / a > ", "input": " OpenTagRegister tagList \n int elmId \n\n void openedIsolatedTag \n void doubleNesting \n void interleavedTags \n void newRegister \n void unopenedTags \n ASTElement element", "output": ""}, {"instruction": "Generate java code\nsets the src file name . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n void setActValue \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n void setFailedAttrib \n BigDecimal getExpDataSetId \n String getErrorMsg \n String getActValue \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n BigDecimal getExpDataUnitId \n Timestamp getCreateTimeStamp \n String getFailedAttrib \n void setExpDataSetId \n void setDataSetId \n void setExpDataUnitId", "output": ""}, {"instruction": "Generate java code\nreturns the instance of the singleton . ", "input": " IConfigurationFactory SINGLETON \n ConfigurationHandler handler \n\n ConfigurationHandler getConfigurationHandler", "output": ""}, {"instruction": "Generate java code\nmoves the scan to the next record . the method moves to the next rhs record , if possible . otherwise , it moves to the next lhs record and the first rhs record . if there are no more lhs records , the method returns false . ", "input": " Scan s1 \n Scan s2 \n\n int getInt \n Constant getVal \n void beforeFirst \n String getString \n void close \n boolean hasField", "output": ""}, {"instruction": "Generate java code\nreturns the value corresponding to this entry . ", "input": " long serialVersionUID \n V value \n K key \n\n K getKey \n int hashCode \n V setValue \n boolean equals \n String toString \n boolean eq", "output": ""}, {"instruction": "Generate java code\nreturn the horizontal position of this ball ", "input": " int xPosition \n boolean dirArriba \n Canvas canvas \n int ySpeed \n int ballDegradation \n Color color \n int diameter \n boolean dirIzquierda \n int yPosition \n int groundPosition \n int GRAVITY \n Ellipse2D.Double circle \n\n void erase \n void move \n void draw \n int getYPosition", "output": ""}, {"instruction": "Generate java code\ncalculate checksum ", "input": " File file \n TarHeader header \n\n void setName \n String getName \n void setGroupId \n boolean isDescendent \n File getFile \n int getGroupId \n TarHeader getHeader \n String getGroupName \n void setGroupName \n long getSize \n void setSize \n void setIds \n void setUserName \n void setModTime \n void setModTime \n boolean equals \n void writeEntryHeader \n String getUserName \n void parseTarHeader \n void extractTarHeader \n int getUserId \n Date getModTime \n boolean isDirectory \n void setUserId", "output": ""}, {"instruction": "Generate java code\nutility method that throws a nullpointerexception if any of the buffers in the collection is null . ", "input": " WriteListener m_listener \n SocketChannel m_socketChannel \n SelectorManager m_selectorManager \n int m_numQueued \n Collection m_buffers \n long m_totalBytes \n boolean m_closed \n WriteListener NO_OP_LISTENER \n long m_startTime \n Logger LOG \n List m_writeBuffers \n\n long getTotalBytes \n void disableWriteLater \n void onWrite \n void writeLater \n void writeLater \n void writeLater \n boolean writeBuffer \n void enableWriteLater \n void enableWrite \n Collection getBuffers \n long getStartTime \n void write \n void write \n void write \n boolean write \n void close \n WriteListener getListener \n int getNumQueued", "output": ""}, {"instruction": "Generate java code\ntests the rpcfilereadrequest #rpcfilereadrequest long , long , long constructor with anegative offset . ", "input": " long OFFSET \n long TEMP_UFS_FILE_ID \n ByteBuf mBuffer \n long LENGTH \n\n void encodedLength \n void invalidLength \n void assertInvalid \n void encodeDecode \n void before \n void validLength \n void assertValid \n void assertValid \n void validate", "output": ""}, {"instruction": "Generate java code\nreturns true if the current token is the specified delimiter character . ", "input": " StreamTokenizer tok \n Collection<String> keywords \n\n boolean matchIntConstant \n String eatStringConstant \n void eatDelim \n int eatIntConstant \n boolean matchKeyword \n void nextToken \n void initKeywords \n boolean matchStringConstant \n void eatKeyword \n boolean matchId \n String eatId", "output": ""}, {"instruction": "Generate java code\nassert a boolean expression , throwing illegalargumentexception if the test result is false . assert.istrue i > 0 , `` the value must be greater than zero '' ; ", "input": " PlaceHolder placeHolder \n\n void isAssignable \n void isAssignable \n void notNull \n void notNull \n void isNull \n void isNull \n void noNullElements \n void noNullElements \n void isInstanceOf \n void isInstanceOf \n void state \n void state \n void notEmpty \n void notEmpty \n void notEmpty \n void notEmpty \n void notEmpty \n void notEmpty", "output": ""}, {"instruction": "Generate java code\nresets the singleton loginuser to null . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nreturn an empty non-null list if the argument list is null . ", "input": " PlaceHolder placeHolder \n\n List<T> add \n T firstOrElse \n boolean equals \n List<T> list \n List<T> list \n List<T> list \n List<T> list \n List<T> list \n List<U> map \n Iterator<Pair<T,T>> pairs", "output": ""}, {"instruction": "Generate java code\na convenience method for uriutils #rewriteuri uri , httphost , boolean that always keeps thefragment . ", "input": " PlaceHolder placeHolder \n\n URI removeDotSegments \n URI resolve \n URI resolve \n HttpHost extractHost \n URI createURI \n URI resolveReferenceStartingWithQueryString \n String normalizePath", "output": ""}, {"instruction": "Generate java code\nremove all listeners . ", "input": " Set<Spring> mActiveSprings \n boolean mIdle \n SpringLooper mSpringLooper \n CopyOnWriteArraySet<SpringSystemListener> mListeners \n Map<String,Spring> mSpringRegistry \n\n List<Spring> getAllSprings \n Spring getSpringById \n void loop \n void deregisterSpring \n Spring createSpring \n void activateSpring \n void registerSpring \n void removeListener \n boolean getIsIdle \n void advance \n void addListener", "output": ""}, {"instruction": "Generate java code\ngets a singleton instance of this class , creating one if it does n't yet exist . ", "input": " IJavascriptRuntime runtime \n IWebEngine engine \n\n String getArrayFunction \n String getFunction \n String getFunction \n void setDefaultWebEngine \n String getArrayConstructor \n String getArgString \n JSObject execute \n String getConstructor", "output": ""}, {"instruction": "Generate java code\nreturns the boot date of the gitblit server . ", "input": " IStoredSettings settings \n ServerStatus serverStatus \n Logger logger \n File baseFolder \n TimeZone timezone \n ServerSettings settingsModel \n\n boolean isServingRepositories \n boolean isDebugMode \n IStoredSettings getSettings \n RuntimeManager start \n void logTimezone \n File getFileOrFolder \n File getFileOrFolder \n boolean updateSettings \n ServerStatus getStatus \n ServerSettings getSettingsModel \n void setBaseFolder \n RuntimeManager stop \n TimeZone getTimezone \n File getBaseFolder", "output": ""}, {"instruction": "Generate java code\nsets the name of the gene set . ", "input": " String geneList \n String name \n\n String getName \n String getGeneList \n String getId \n void setGeneList", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdgparser #getvariation . ", "input": " HDGSentence hdg \n String EXAMPLE \n\n void testSetDeviationTooHigh \n void testSetHeadingTooHigh \n void testIsTrue \n void testSetHeading \n void testHDGParserTalkerId \n void testSetVariationWest \n void testConstructor \n void testSetVariationTooLow \n void testSetVariationTooHigh \n void testSetVariationEast \n void testGetDeviation \n void testSetDeviationTooLow \n void setUp \n void testGetHeading \n void testSetDeviationEast \n void testHDGParserString \n void testSetDeviationWest \n void testSetHeadingTooLow", "output": ""}, {"instruction": "Generate java code\nreturns this extension from the given wallet , or null if no such extension was added . ", "input": " Logger log \n TransactionBroadcaster announcePeerGroup \n Transaction contract \n ECKey myKey \n Timer channelTimeoutHandler \n boolean active \n String EXTENSION_ID \n Wallet containingWallet \n ReentrantLock lock \n BigInteger valueToMe \n BigInteger refundFees \n Sha256Hash id \n Transaction close \n HashMultimap<Sha256Hash,StoredClientChannel> mapChannels \n Transaction refund \n\n long getSecondsUntilExpiry \n void putChannel \n void putChannel \n void removeChannel \n StoredClientChannel getChannel \n boolean isWalletExtensionMandatory \n BigInteger getBalanceForServer \n void deserializeWalletExtension \n String getWalletExtensionID \n StoredClientChannel getUsableChannelForServerID \n byte[] serializeWalletExtension \n String toString \n String toString \n long expiryTimeSeconds", "output": ""}, {"instruction": "Generate java code\nremove everything in the cache . ", "input": " String OPENID_CACHE_MANAGER \n String openidCacheName \n\n void addToCache \n Cache<K,V> getOpenIDCache \n V getValueFromCache \n void clearCacheEntry", "output": ""}, {"instruction": "Generate java code\nsets the optional login name ", "input": " String secretKey \n String applicationDescription \n AccessToken preAuthorizedToken \n String callbackURI \n String loginName \n String applicationURI \n String logoUri \n String consumerKey \n String applicationName \n\n String getSecretKey \n String getApplicationName \n void setApplicationDescription \n void setApplicationName \n void setCallbackURI \n String getApplicationDescription \n void setApplicationURI \n void setPreAuthorizedToken \n String getApplicationURI \n String getLoginName \n int hashCode \n void setLogoUri \n boolean equals \n String getCallbackURI \n String getConsumerKey \n AccessToken getPreAuthorizedToken \n String getLogoUri", "output": ""}, {"instruction": "Generate java code\ntest for getdatum ", "input": " Position instance \n\n void testGetLatitude \n void testSetIllegalLatitudeSouth \n void testDistanceToSelf \n void testSetIllegalLongitudeWest \n void testSetLatitudeSouth \n void testDistanceTo \n void testSetIllegalLongitudeEast \n void testToWaypoint \n void testSetLongitudeEast \n void setUp \n void testGetLongitude \n void testSetLongitudeWest \n void testGetLatitudeHemisphere \n void testSetLatitudeNorth \n void testGetLongitudeHemisphere \n void testSetIllegalLatitudeNorth", "output": ""}, {"instruction": "Generate java code\nensure that the source has a systemid ", "input": " File PWD \n Map<String,Object> parameters \n Transformation transformation \n\n R withExceptionHandling \n void setOutputProperties \n R transform \n void transformTo \n String getDefaultSystemId \n void setParameter \n void setErrorListener \n void setOutputProperty \n void clearParameters \n Document getResultDocument \n String getResultString \n void setURIResolver \n Object getParameter", "output": ""}, {"instruction": "Generate java code\nget all features not in the source . ", "input": " Object mClassifier \n Object namespace \n List newFeatures \n List newInnerClasses \n\n void newFeature \n Vector getAssociationEnds \n Object getNamespace \n List getAssociationEndsList \n List getNewInnerClassesList \n Vector getNewInnerClasses \n Object newClassifier \n Vector getNewFeatures \n Object getClassifier", "output": ""}, {"instruction": "Generate java code\nupdates the rememberme token ", "input": " OpenIDRememberMeTokenDAO dao \n Log log \n OpenIDRememberMeTokenCache cache \n\n String getToken \n boolean isExpired", "output": ""}, {"instruction": "Generate java code\nattempts to close the current serversocket . ", "input": " boolean run \n ArrayList<ServerSocket> serverSockets \n String savePath \n boolean disconnectedOnPurpose \n ServerSocket serverSocket \n int dataBufSize \n int eventBufSize \n FieldtripBufferMonitor monitor \n int nextClientID \n int eventBufSize \n int serverPort \n int portNumber \n int dataBufSize \n int serverPort \n ArrayList<ConnectionThread> threads \n DataModel dataStore \n int logging \n BufferServer buffer \n\n void flushEvents \n void Start \n void Start \n void Start \n void Start \n void Start \n void Start \n void usage \n void listAllServerSockets \n void BufferServerStart \n void run \n void run \n void flushSamples \n void removeConnection \n void cleanup \n void addMonitor \n void removeAllServerSockets \n boolean putHeader \n void flushHeader \n void stopBuffer", "output": ""}, {"instruction": "Generate java code\nsets the lane_id . ", "input": " int volume \n double occupancy \n Timestamp measurement_date \n int lane_id \n long id \n double speed \n int quality \n\n double getOccupancy \n void setOccupancy \n Timestamp getMeasurement_date \n int getLane_id \n long getId \n void setVolume \n void setSpeed \n int getVolume \n void setQuality \n int getQuality \n double getSpeed \n void setMeasurement_date \n void setId \n String toString", "output": ""}, {"instruction": "Generate java code\nadds a node to the central node hashtable . ", "input": " BoundingBox boundingBox \n Hashtable<Long,MapNode> nodes \n Hashtable<Long,MapWay> ways \n ArrayList<MapEventListener> listeners \n long nextTrackId \n EntityClassifier<EntityViewInfo> entityClassifier \n KDTree entityTree \n Logger LOG \n ArrayList<MapNode> markers \n ArrayList<MapNode> pois \n ArrayList<Track> tracks \n\n void visitEntities \n List<Track> getTracks \n List<MapNode> getWayNodes \n Object[][] getStatistics \n MapNode getNearestWayNode \n void setBoundingBox \n void removeMarker \n void clearTrack \n List<MapEntity> getVisibleMarkersAndTracks \n KDTree getEntityTree \n void fireMapDataEvent \n BoundingBox getBoundingBox \n void clearMarkersAndTracks \n List<MapNode> getMarkers \n int getNodeCount \n void compile \n List<MapNode> getPlaces \n void createTrack \n int getPoiCount \n Collection<MapWay> getWays \n List<MapNode> getPois \n void close \n void addToTrack \n Track getTrack \n Track getTrack \n void clear \n boolean isEmpty \n void setEntityClassifier \n void addMapDataEventListener \n void applyClassifierAndUpdateTree \n EntityFinder getEntityFinder \n void removeMapDataEventListener \n MapWay getWay \n MapBuilder getBuilder \n int getWayCount \n void addWay \n MapNode getNode \n void updateEntityViewInfo \n MapNode addMarker", "output": ""}, {"instruction": "Generate java code\nsave the commit information and later output it ", "input": " Logger logger \n MergingControl mergingControl \n String differenceGraphModel \n CommitModel commitModel \n PatchGroup patchGroup \n DifferenceModel differenceModel \n\n String getRebaseReportView \n void manualRebaseProcess \n ArrayList<String> getManualAddedTriplesAndRemovedTriples \n void createPatchGroupOfBranch \n ArrayList<String> getAutomaticAddedTriplesAndRemovedTriples \n void createCommitModel \n void updateRebaseDifferenceModel \n String showRebaseDialogView \n void createCommonManualRebaseProcess \n String forceRebaseProcess", "output": ""}, {"instruction": "Generate java code\ntest method for com.sqa.em.util.helper.requestinput #getchar java.lang.string . ", "input": " PlaceHolder placeHolder \n\n void testAddStringElement \n void testGetString \n void testGetCharStringCharArray \n void testGetDouble \n void testGetBoolean \n void testGetIntStringIntInt \n void testGetIntString", "output": ""}, {"instruction": "Generate java code\nload the configuration from a specified file . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n String getString \n String getString \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n void setString \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nsets the list of in interceptors which pre-process the responses from remote services . ", "input": " ConduitSelector conduitSelector \n Map<String,Object> requestContext \n Bus bus \n List<Interceptor<? extends Message>> inInterceptors \n long synchronousTimeout \n List<Interceptor<? extends Message>> outInterceptors \n Logger LOG \n List<Interceptor<? extends Message>> inFault \n Map<String,Object> responseContext \n List<Interceptor<? extends Message>> outFault \n\n Bus getBus \n List<Interceptor<? extends Message>> getOutFaultInterceptors \n Endpoint getEndpoint \n long getSynchronousTimeout \n void setConduitSelector \n void setOutInterceptors \n List<Interceptor<? extends Message>> getInInterceptors \n Map<String,Object> getResponseContext \n boolean isResponseExpectedForOneway \n void setOutFaultInterceptors \n HTTPConduit getHttpConduit \n Conduit getConduit \n void setSynchronousTimeout \n ConduitSelector getConduitSelector \n List<Interceptor<? extends Message>> getInFaultInterceptors \n List<Interceptor<? extends Message>> getOutInterceptors \n Map<String,Object> getRequestContext \n void setInFaultInterceptors \n void setBus \n void prepareConduitSelector", "output": ""}, {"instruction": "Generate java code\nsets the boolean value of a configuration property . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n String getString \n String getString \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n void setString \n boolean load \n boolean load \n boolean load \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nget the secondary subject of this certificate either cn or ou if primary subject is o , empty otherwise ", "input": " X509Certificate mCert \n String mAlias \n String mSubjectSecondary \n String mSubjectPrimary \n String mString \n\n String getSubjectPrimary \n X509Certificate getCertificate \n List<String> getSubjectAltNames \n String toString \n int compareTo \n String getAlias", "output": ""}, {"instruction": "Generate java code\nreturns the object that originated this event not the object that originated the wrapped event . this is generally an eventbus . ", "input": " Object source \n Object event \n\n Object getEvent \n String toString", "output": ""}, {"instruction": "Generate java code\nprocess the delete method . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nset the tenant domain which the authentication request is comming from ", "input": " boolean passiveAuth \n Map<String,String[]> requestQueryParams \n long serialVersionUID \n String commonAuthCallerPath \n boolean forceAuth \n String type \n Map<String,String> requestHeaders \n String tenantDomain \n boolean isPost \n String relyingParty \n\n void setRelyingParty \n void addHeader \n String getRelyingParty \n boolean getForceAuth \n String getCommonAuthCallerPath \n Map<String,String[]> getRequestQueryParams \n void addRequestQueryParam \n void setPost \n void setType \n boolean isPost \n void appendRequestQueryParams \n boolean getPassiveAuth \n Map<String,String> getRequestHeaders \n String getTenantDomain \n String[] getRequestQueryParam \n String getType \n void setPassiveAuth \n void setCommonAuthCallerPath \n void setForceAuth \n void setRequestQueryParams", "output": ""}, {"instruction": "Generate java code\ntests the storagedirview #getcapacitybytes method . ", "input": " StorageDir mTestDir \n StorageDirView mTestDirView \n int TEST_TIER_LEVEL \n int TEST_DIR \n long TEST_BLOCK_ID \n long TEST_SESSION_ID \n TemporaryFolder mTestFolder \n BlockMetadataManagerView mMetaManagerView \n long TEST_BLOCK_SIZE \n StorageTierView mTestTierView \n long TEST_TEMP_BLOCK_ID \n\n void getParentTierView \n void createTempBlockMeta \n void before \n void getDirViewIndex \n void getCommittedBytes \n void getEvictableBlocks \n void toBlockStoreLocation \n void getAvailableBytes", "output": ""}, {"instruction": "Generate java code\nreturns a unique member 's name for storage in a zipfile . the project 's base name is prepended followed by an underscore '_' . the extension is appended . used by `` argo.tee '' . ", "input": " String uniqueName \n Project project \n\n void makeUniqueName \n String getType \n String toString \n void remove \n String getUniqueDiagramName \n String getZipFileExtension", "output": ""}, {"instruction": "Generate java code\nsets the start of the peak of the roi ", "input": " boolean AMPLIFIED \n boolean DELETED \n int gisticID \n int peakStart \n ArrayList<CanonicalGene> genes_in_ROI \n String cytoband \n boolean amp \n int NO_SUCH_GISTIC \n int cancerStudyId \n int chromosome \n int peakEnd \n double qValue \n\n void setPeakEnd \n void setAmp \n String getCytoband \n int getPeakStart \n void setqValue \n boolean getAmp \n int getInternalId \n void setGenes_in_ROI \n int peakSize \n int getCancerStudyId \n int getChromosome \n int getPeakEnd \n void addGene \n void setInternalId \n void setCancerStudyId \n double getqValue \n String toString \n ArrayList<CanonicalGene> getGenes_in_ROI \n void setCytoband \n void setChromosome", "output": ""}, {"instruction": "Generate java code\ntests the blocklockmanager #lockblock long , long , blocklocktype method . ", "input": " BlockLockManager mLockManager \n long TEST_BLOCK_ID \n ExpectedException mThrown \n long TEST_SESSION_ID \n TemporaryFolder mFolder \n\n void lockAcrossSessions \n void stress \n void validateLockIdWithNoRecord \n void unlockNonExistingLock \n void dontReuseLock \n void before \n void reuseLock \n void readBlocksWrite \n void validateLockIdWithWrongBlockId \n void setMaxLocks \n void lockExpectingHang \n void grabManyLocks \n void validateLockIdWithWrongSessionId \n void cleanupSession \n void after", "output": ""}, {"instruction": "Generate java code\nencode given data as lower case hex chars . ", "input": " char[] CHARS \n\n String sha1", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.mwvparser #settrue boolean . ", "input": " String EXAMPLE \n MWVSentence mwv \n\n void testSetNegativeSpeed \n void testSetInvalidSpeedUnit \n void testIsTrue \n void testMWVParserTalkerId \n void testSetStatus \n void testSetAngle \n void testSetSpeedUnit \n void testSetNegativeAngle \n void testGetAngle \n void testSetAngleOutOfRange \n void setUp \n void testGetSpeed \n void testGetStatus \n void testGetSpeedUnit \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nreturns the number of times to retry a cache update on failure ", "input": " int DEFAULT_ASYNCHRONOUS_WORKERS_MAX \n float heuristicCoefficient \n long heuristicDefaultLifetime \n float DEFAULT_HEURISTIC_COEFFICIENT \n int asynchronousWorkersMax \n long DEFAULT_HEURISTIC_LIFETIME \n int maxCacheEntries \n int DEFAULT_REVALIDATION_QUEUE_SIZE \n int DEFAULT_MAX_OBJECT_SIZE_BYTES \n boolean heuristicCachingEnabled \n int DEFAULT_ASYNCHRONOUS_WORKER_IDLE_LIFETIME_SECS \n int revalidationQueueSize \n int DEFAULT_MAX_UPDATE_RETRIES \n int maxUpdateRetries \n boolean isSharedCache \n boolean DEFAULT_HEURISTIC_CACHING_ENABLED \n int DEFAULT_ASYNCHRONOUS_WORKERS_CORE \n int asynchronousWorkerIdleLifetimeSecs \n int DEFAULT_MAX_CACHE_ENTRIES \n int maxObjectSizeBytes \n int asynchronousWorkersCore \n\n boolean isSharedCache \n float getHeuristicCoefficient \n void setAsynchronousWorkersCore \n void setSharedCache \n int getMaxObjectSizeBytes \n int getAsynchronousWorkersMax \n int getAsynchronousWorkersCore \n void setAsynchronousWorkerIdleLifetimeSecs \n int getAsynchronousWorkerIdleLifetimeSecs \n void setHeuristicDefaultLifetime \n void setMaxUpdateRetries \n void setMaxObjectSizeBytes \n int getMaxCacheEntries \n void setHeuristicCachingEnabled \n void setMaxCacheEntries \n long getHeuristicDefaultLifetime \n void setAsynchronousWorkersMax \n int getRevalidationQueueSize \n boolean isHeuristicCachingEnabled \n void setRevalidationQueueSize \n void setHeuristicCoefficient", "output": ""}, {"instruction": "Generate java code\ntakes a playerid as a arg , and checks if they are currently being ticked . takes care of handling adding them to the tick , and incrementing ticks . ", "input": " Map<Integer,int[]> playerList \n\n void onEvent \n void runPlayer", "output": ""}, {"instruction": "Generate java code\nset delivery tag of the message assigned by the transport ", "input": " Map<String,Object> headers \n byte body[] \n long deliveryTag \n String replyTo \n String contentEncoding \n String messageId \n String correlationId \n String soapAction \n String contentType \n\n String getCorrelationId \n String getContentEncoding \n void setHeaders \n Map<String,Object> getHeaders \n byte[] getBody \n String getReplyTo \n void setCorrelationId \n void setContentEncoding \n long getDeliveryTag \n void setMessageId \n void setSoapAction \n void setBody \n String getMessageId \n void setReplyTo \n String getContentType \n void setContentType \n String getSoapAction", "output": ""}, {"instruction": "Generate java code\nfinds a channel with the given id and contract hash and returns it , or returns null . ", "input": " Logger log \n TransactionBroadcaster announcePeerGroup \n Transaction contract \n ECKey myKey \n Timer channelTimeoutHandler \n boolean active \n String EXTENSION_ID \n Wallet containingWallet \n ReentrantLock lock \n BigInteger valueToMe \n BigInteger refundFees \n Sha256Hash id \n Transaction close \n HashMultimap<Sha256Hash,StoredClientChannel> mapChannels \n Transaction refund \n\n long getSecondsUntilExpiry \n void putChannel \n void putChannel \n void removeChannel \n boolean isWalletExtensionMandatory \n BigInteger getBalanceForServer \n void deserializeWalletExtension \n String getWalletExtensionID \n StoredClientChannel getUsableChannelForServerID \n byte[] serializeWalletExtension \n String toString \n String toString \n long expiryTimeSeconds \n StoredPaymentChannelClientStates getFromWallet", "output": ""}, {"instruction": "Generate java code\nremove a page for the given position . the adapter is responsible for removing the view from its container , although it only must ensure this is done by the time it returns from #finishupdate viewgroup . ", "input": " int POSITION_NONE \n int POSITION_UNCHANGED \n DataSetObservable mObservable \n\n void restoreState \n void startUpdate \n void startUpdate \n Parcelable saveState \n Object instantiateItem \n Object instantiateItem \n int getItemPosition \n void registerDataSetObserver \n CharSequence getPageTitle \n void setPrimaryItem \n void setPrimaryItem \n void notifyDataSetChanged \n void finishUpdate \n void finishUpdate \n void unregisterDataSetObserver \n int getCount \n boolean isViewFromObject", "output": ""}, {"instruction": "Generate java code\nset exception call-back listener . ", "input": " String LOG_MSG \n String DISPATCH_ALL \n DataReader reader \n DataListener dataListener \n ConcurrentMap<String,List<SentenceListener>> listeners \n int pauseTimeout \n ExceptionListener exceptionListener \n Thread thread \n Logger LOGGER \n int DEFAULT_TIMEOUT \n\n void fireReadingPaused \n void fireDataEvent \n ExceptionListener getExceptionListener \n void setPauseTimeout \n void start \n void removeSentenceListener \n void fireReadingStopped \n void registerListener \n List<SentenceListener> getSentenceListeners \n void handleException \n void setDataListener \n void stop \n void setInputStream \n void fireReadingStarted \n void fireSentenceEvent \n void addSentenceListener \n void addSentenceListener \n void addSentenceListener \n int getPauseTimeout \n void setDatagramSocket", "output": ""}, {"instruction": "Generate java code\nmethod called by the viewer to send the trigger command to the model . ", "input": " RpgScreen viewer \n RpgPlatform model \n\n void updateModel \n RpgScreen getViewer \n RpgPlatform getModel \n void characterMoved \n void setModel \n void moveCharacter \n void moveCharacter \n void setViewer \n TiledMap getMap \n void runAutomaticEvents", "output": ""}, {"instruction": "Generate java code\ngets the case id . ", "input": " RPPA rppaValue \n mutations isMutated \n String gene \n String mutationType \n String caseId \n CNA cnaValue \n GeneticEventComparator geneticEventComparator \n MRNA mrnaValue \n\n RPPA getRPPAValue \n boolean isMutated \n boolean isRPPADownRegulated \n mutations getMutationValue \n MRNA getMrnaValue \n boolean isCnaAmplified \n void setGeneticEventComparator \n String getGene \n boolean isCnaHeterozygousDeleted \n boolean equals \n CNA getCnaValue \n boolean isMRNADownRegulated \n String toString \n boolean isRPPAUpRegulated \n String getMutationType \n boolean isCnaHomozygouslyDeleted \n boolean isMRNAUpRegulated", "output": ""}, {"instruction": "Generate java code\nget the file mode bits of a file . this method is only implemented for oses of the unix family . it returns the file mode information as available in the st_mode member of the resulting struct stat when calling ` lstat ' on a file . ", "input": " int S_IRUSR \n int gid \n int S_ISUID \n int S_IWGRP \n int S_IFBLK \n int mode \n int uid \n int S_IXGRP \n int S_IFCHR \n int S_IXOTH \n int S_IFSOCK \n int S_IRGRP \n Logger LOGGER \n int S_IRWXG \n int S_IWUSR \n int S_IRWXU \n int S_ISVTX \n int S_IFREG \n int S_IFLNK \n int S_IWOTH \n int S_IXUSR \n int S_IRWXO \n int S_IFIFO \n int S_IROTH \n UnixCLibrary unixlibc \n int S_ISGID \n int S_IFDIR \n int S_IFMT \n\n int getgid \n int getgid \n int setFilemode \n int setFilemode \n Filestat getFilestat \n Filestat getFilestat \n boolean isWindows \n int chmod \n String runProcessLs \n UnixCLibrary getUnixCLibrary \n int getegid \n int getegid", "output": ""}, {"instruction": "Generate java code\nget text of emoji icon ", "input": " int bigIcon \n String emojiText \n int icon \n String name \n Type type \n String iconPath \n String identityCode \n String bigIconPath \n\n void setName \n String getName \n String getIconPath \n int getBigIcon \n void setBigIcon \n void setType \n void setIdentityCode \n int getIcon \n String getBigIconPath \n void setIcon \n void setBigIconPath \n void setEmojiText \n void setIconPath \n Type getType \n String getIdentityCode \n String newEmojiText", "output": ""}, {"instruction": "Generate java code\nget the k-dimensional space that the points is in calls : none called by : centroid , codebook ", "input": " double coordinates[] \n int dimension \n\n double[] getAllCo \n boolean equals \n double getCo \n void setCo \n void changeCo", "output": ""}, {"instruction": "Generate java code\nsets the checksum type . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nreturn a subset of allnodes , containing the items in allnodes that are of the given type . ", "input": " PlaceHolder placeHolder \n\n Set<T> getNodes \n void assertNumberOfNodes \n void addNodeAndSubnodes", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rteparser #setsentencecount int . ", "input": " RTESentence rte \n String EXAMPLE \n RTESentence empty \n\n void testGetWaypointIds \n void testIsActiveRoute \n void testIsFirst \n void testGetSentenceIndex \n void testConstructor \n void testSetSentenceCountWithNegativeValue \n void testAddWaypointId \n void testGetSentenceCount \n void testSetWaypointIds \n void testSetRouteId \n void testIsWorkingRoute \n void testGetRouteId \n void testSetRouteTypeActive \n void setUp \n void testIsLast \n void testGetWaypointCount \n void testSetSentenceIndex \n void testSetRouteTypeWorking \n void testSetSentenceIndexWithNegativeValue", "output": ""}, {"instruction": "Generate java code\nset the encryption crypto object ", "input": " Object encryptionCryptoProperties \n Bus bus \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n Logger LOG \n String issuer \n EncryptionProperties encryptionProperties \n CallbackHandler callbackHandler \n List<Relationship> relationships \n boolean validateUseKey \n RelationshipResolver relationshipResolver \n String callbackHandlerClass \n String signatureUsername \n Crypto encryptionCrypto \n SAMLRealmCodec samlRealmCodec \n String encryptionUsername \n Object signatureCryptoProperties \n IdentityMapper identityMapper \n RealmParser realmParser \n\n RelationshipResolver getRelationshipResolver \n Bus getBus \n void setSamlRealmCodec \n ResourceManager getResourceManager \n void setSignaturePropertiesFile \n void setCallbackHandler \n void setEncryptionProperties \n EncryptionProperties getEncryptionProperties \n boolean isValidateUseKey \n void setSignatureUsername \n List<Relationship> getRelationships \n SAMLRealmCodec getSamlRealmCodec \n String getEncryptionUsername \n void setIdentityMapper \n void setEncryptionPropertiesFile \n void setEncryptionUsername \n void setCallbackHandlerClass \n Crypto getEncryptionCrypto \n void setRelationships \n SignatureProperties getSignatureProperties \n void setSignatureProperties \n void setRealmParser \n String getIssuer \n void setSignatureCryptoProperties \n void setSignatureCrypto \n IdentityMapper getIdentityMapper \n void setValidateUseKey \n void configureProperties \n RealmParser getRealmParser \n String getSignatureUsername \n Crypto getSignatureCrypto \n void setIssuer \n CallbackHandler getCallbackHandler \n void setEncryptionCryptoProperties \n void setBus", "output": ""}, {"instruction": "Generate java code\nget the utility of a cell in the projected q-matrix at a given cell position row , column ", "input": " QMatrix originalMatrix \n List<MatrixPosition> positions \n\n int getLocalSequenceUtility \n int[] getItemNames \n int getRemainingUtility", "output": ""}, {"instruction": "Generate java code\nadd an individual structure . if the individual structure identifier already exists the old individual structure will be overwritten . ", "input": " HashMap<String,IndividualStructure> individualStructures \n\n void removeIndividualStructure \n void setIndividualStructures \n void clear \n HashMap<String,IndividualStructure> getIndividualStructures", "output": ""}, {"instruction": "Generate java code\nreturn the context with the functions and variables of the el evaluator . ", "input": " Map<String,Method> functions \n ThreadLocal<ELEvaluator> current \n Context context \n ExpressionEvaluator evaluator \n Map<String,Object> vars \n\n void setVariables \n Method resolveFunction \n void addFunction \n Object resolveVariable \n void setVariable \n void setVariable \n ELEvaluator getCurrent \n Object getVariable \n Object getVariable \n T evaluate", "output": ""}, {"instruction": "Generate java code\nget the triple state in a. ", "input": " boolean conflicting \n SDDTripleStateEnum tripleStateB \n SDDTripleStateEnum tripleStateA \n SDDTripleStateEnum automaticResolutionState \n HashMap<String,Difference> differences \n\n boolean isConflicting \n SDDTripleStateEnum getTripleStateB \n void setConflicting \n SDDTripleStateEnum getAutomaticResolutionState \n void removeDifference \n void setTripleStateB \n HashMap<String,Difference> getDifferences \n void addDifference \n void setTripleStateA \n void setDifferences \n void setAutomaticResolutionState", "output": ""}, {"instruction": "Generate java code\nadd a new user store manager to in-memory map , at the given domain name ", "input": " Map<String,Map<String,String>> userStoreManagers \n\n Set<String> getAvailableDomainNames \n void clearUserStoreManager \n Map<String,String> convertArrayToMap \n Map<String,String> getUserStoreManager", "output": ""}, {"instruction": "Generate java code\nsets the mail sender . ", "input": " Logger LOGGER \n JavaMailSender mailSender \n VelocityEngine velocityEngine \n\n void sendEmail \n void sendEmail \n void setVelocityEngine", "output": ""}, {"instruction": "Generate java code\nassociate classcache object with the given top-level scope . the classcache object can only be associated with the given scope once . ", "input": " long serialVersionUID \n HashMap<Class<?>,Object> interfaceAdapterCache \n boolean cachingIsEnabled \n HashMap<Class<?>,JavaMembers> classTable \n Object AKEY \n int generatedClassSerial \n HashMap<JavaAdapter.JavaAdapterSignature,Class<?>> classAdapterCache \n\n void clearCaches \n boolean isInvokerOptimizationEnabled \n boolean isCachingEnabled \n ClassCache get \n void setCachingEnabled \n Map<Class<?>,JavaMembers> getClassCacheMap \n int newClassSerialNumber \n Object getInterfaceAdapter \n void setInvokerOptimizationEnabled \n Map<JavaAdapter.JavaAdapterSignature,Class<?>> getInterfaceAdapterCacheMap \n void cacheInterfaceAdapter", "output": ""}, {"instruction": "Generate java code\nsets the bus ", "input": " List<String> produceMediaTypes \n Bus bus \n List<String> consumeMediaTypes \n boolean enableStreaming \n ResourceBundle BUNDLE \n boolean enableBuffering \n Logger LOG \n\n void init \n Bus getBus \n void setConsumeMediaTypes \n void setEnableBuffering \n boolean getEnableStreaming \n List<String> getProduceMediaTypes \n void setEnableStreaming \n void setProduceMediaTypes \n List<String> getConsumeMediaTypes \n boolean getEnableBuffering \n boolean isPayloadEmpty \n boolean isPayloadEmpty \n void reportEmptyContentLength", "output": ""}, {"instruction": "Generate java code\ntests the following constructor : densematrix64f int numcols , int numrows ", "input": " Random rand \n\n void testReshape \n void testConstructorCopy \n void testInBounds \n void testConstruactorDoubleArray \n void testGeneric \n void set_ColumnMajor \n void testSet_Matrix \n void testConstructorSingleArray \n void testSetReshape_Matrix \n void wrap \n void set_RowMajor", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #getyear . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetCourse \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nsets the list of genes in the set . ", "input": " String geneList \n String name \n\n void setName \n String getName \n String getGeneList \n String getId", "output": ""}, {"instruction": "Generate java code\ngets the value of the roles property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the roles property . for example , to add a new item , do as follows : getroles . add newitem ; objects of the following type s are allowed in the list role ", "input": " List<Role> roles \n String name \n String id \n byte[] secret \n\n void setName \n String getName \n byte[] getSecret \n void setSecret \n void setId \n String getId", "output": ""}, {"instruction": "Generate java code\nset the referenced revision in a. ", "input": " String referencedRevisionA \n String referencedRevisionLabelA \n String referencedRevisionLabelB \n String referencedRevisionB \n Triple triple \n SDDTripleStateEnum tripleResolutionState \n ResolutionStateEnum resolutionState \n\n String getReferencedRevisionLabelB \n void setResolutionState \n String getReferencedRevisionLabelA \n void setReferencedRevisionLabelA \n SDDTripleStateEnum getTripleResolutionState \n void setReferencedRevisionLabelB \n Triple getTriple \n String getReferencedRevisionB \n void setTripleResolutionState \n void setTriple \n String getReferencedRevisionA \n ResolutionStateEnum getResolutionState \n void setReferencedRevisionB", "output": ""}, {"instruction": "Generate java code\nprocess a upr command : consume all of the rtf commands relating to this and emit events representing the unicode content . ", "input": " IParserEventHandler handler \n IParserEvent GROUP_END \n IParserEvent GROUP_START \n IParserEvent DOCUMENT_START \n Deque<IParserEventHandler> handlerStack \n Map<Integer,String> m_fontEncodings \n Deque<ParserState> stack \n IParserEvent DOCUMENT_END \n ParserState state \n int skipBytes \n\n void processCharacter \n void handleEvent \n void processDocumentEnd \n void processGroupEnd \n void processCommand \n void parse \n void processCharacterBytes \n void processString \n void processDocumentStart \n void processUnicodeAlternateSkipCount \n void handleCommand \n void processGroupStart \n void processFont \n void processEncoding \n void processUnicode \n String currentEncoding \n void processBinaryBytes \n void processFontCharset", "output": ""}, {"instruction": "Generate java code\ngets the download size . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n void setFileCount \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\nspecial case that requires exceptional shifts to work ", "input": " int numCantFindEigenvector \n double tol \n EigenvalueExtractor extractor \n Random rand \n\n void evaluateScalingUp \n void testMatrix0 \n boolean isAllComplex \n int checkEigenvalues \n void testMatrixZeroButUpperDiag \n void testMatrixAlmostAllOnes \n void evaluateRandom \n double computeError \n void evaluateScaling \n void evaluateScalingDown \n void testMatrixNegHessenberg \n boolean hasComplex \n void testMatrixVerySmallButUpperDiag", "output": ""}, {"instruction": "Generate java code\nadds a settings class to the list of factories that this handler will act upon . ", "input": " List PROPS \n\n void revertToDefault \n void reload \n void save \n void setShouldSave \n void removeSettings", "output": ""}, {"instruction": "Generate java code\nremoves the string event from the end of the buffer , merges it with the string event we 've just received , and adds the new event to the end of the buffer . ", "input": " int MAX_EVENTS \n Deque<IParserEvent> events \n IRtfListener listener \n\n void flushEvents \n void handleEvent \n IParserEvent getLastEvent \n boolean isComplete \n void removeLastEvent", "output": ""}, {"instruction": "Generate java code\nhas this approval expired ? ", "input": " String clientId \n String QUERY_BY_CLIENT_ID \n String QUERY_BY_CLIENT_ID_AND_USER_ID \n String QUERY_ALL \n Date creationDate \n String userId \n Set<String> allowedScopes \n String QUERY_BY_USER_ID \n Date accessDate \n String PARAM_USER_ID \n Date timeoutDate \n Set<OAuth2AccessTokenEntity> approvedAccessTokens \n String PARAM_CLIENT_ID \n Long id \n\n String getClientId \n void setApprovedAccessTokens \n Long getId \n Date getAccessDate \n Date getCreationDate \n void setCreationDate \n Set<OAuth2AccessTokenEntity> getApprovedAccessTokens \n Date getTimeoutDate \n Set<String> getAllowedScopes \n void setId \n void setAllowedScopes \n String getUserId \n void setTimeoutDate \n void setUserId \n void setClientId \n void setAccessDate", "output": ""}, {"instruction": "Generate java code\ncreates a name-value pair . called from #parsenamevaluepair . ", "input": " char[] ALL_DELIMITERS \n char PARAM_DELIMITER \n char ELEM_DELIMITER \n BasicHeaderValueParser DEFAULT \n\n HeaderElement parseHeaderElement \n HeaderElement parseHeaderElement \n HeaderElement[] parseElements \n HeaderElement[] parseElements \n HeaderElement createHeaderElement \n NameValuePair parseNameValuePair \n NameValuePair parseNameValuePair \n NameValuePair parseNameValuePair \n boolean isOneOf \n NameValuePair[] parseParameters \n NameValuePair[] parseParameters", "output": ""}, {"instruction": "Generate java code\nuse this function instead of new string byte , string to avoid surprises from non-standard default encodings . ", "input": " Charset UTF8_CHARSET \n int DEFAULT_BUFFER_SIZE \n\n byte[] readBytesFromStream \n ByteArrayInputStream loadIntoBAIS \n boolean isEmpty \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n void consume \n void consume \n int copy \n int copy \n void copy \n void copyAtLeast \n void transferTo \n boolean isEof \n int copyAndCloseInput \n int copyAndCloseInput \n void copyAndCloseInput \n void copyAndCloseInput \n String readStringFromStream", "output": ""}, {"instruction": "Generate java code\nadd a short field to the stream . \\ param value the short value to be added . ", "input": " boolean isRaw \n byte[] intBuf \n int MAX_INT_BYTES \n PackFormatInputStream format \n ByteArrayOutputStream packed \n\n byte[] getValue \n void packLong \n void reset \n String getFormat \n void addByte \n void addInt \n void addLong \n void addRecord \n void addByteArray \n void addByteArray \n void addString", "output": ""}, {"instruction": "Generate java code\nthis method is used to get the email template to be displayed with the given index . ", "input": " EmailTemplateDTO[] templates \n Map<String,String> emailTypes \n\n void setTemplate \n Map<String,String> getEmailTypes \n void setTemplates \n void setEmailTypes \n EmailTemplateDTO[] getTemplates", "output": ""}, {"instruction": "Generate java code\nconvert a nodes list into a jsonarray . ", "input": " Status status \n String conf \n String consoleUrl \n String externalStatus \n String trackerUri \n String data \n String name \n int retries \n String transition \n String externalId \n String errorMessage \n String type \n String errorCode \n Date startTime \n String id \n Date endTime \n\n void setName \n String getConsoleUrl \n String getName \n String getId \n Status getStatus \n String getExternalId \n void setTrackerUri \n Date getEndTime \n int getRetries \n String getErrorCode \n JSONObject toJSONObject \n void setId \n Date getStartTime \n void setStartTime \n void setExternalId \n String getData \n List<JsonWorkflowAction> fromJSONArray \n String getConf \n void setData \n void setExternalStatus \n void setConsoleUrl \n void setType \n String getExternalStatus \n void setConf \n void setStatus \n void setRetries \n void setErrorInfo \n String getType \n void setEndTime \n String getTransition \n void setTransition \n String toString \n String getTrackerUri \n String getErrorMessage", "output": ""}, {"instruction": "Generate java code\nreturns the collection type if we recognize it by its short name . ", "input": " TypeMap COLLECTION_INTERFACES_BY_NAMES \n TypeMap COLLECTION_CLASSES_BY_NAMES \n\n int addWithoutDuplicates \n T[] addWithoutDuplicates \n T[] addWithoutDuplicates \n boolean areEqual \n boolean areSemanticEquals \n boolean valuesAreTransitivelyEqual \n boolean isCollectionType \n boolean isCollectionType \n boolean isEmpty \n boolean isNotEmpty \n Set<T> asSet \n Map<V,K> invertedMapFrom \n boolean arraysAreEqual \n Map<K,V> mapFrom", "output": ""}, {"instruction": "Generate java code\nwalk the list of registered endpointresolvers , so as to mint a new abstract epr for a given service name . ", "input": " Bus bus \n List<EndpointResolver> resolvers \n\n EndpointReferenceType resolve \n void unregister \n List<EndpointResolver> getResolvers \n EndpointReferenceType renew \n void setBus \n void register", "output": ""}, {"instruction": "Generate java code\nwrites a specific integer value 4 bytes to the output byte array at the given offset . ", "input": " PlaceHolder placeHolder \n\n void writeByte \n void writeByte \n void writeByte \n void writeLong \n void writeLong \n long readLong \n short readShort \n void checkBoundary \n void writeShort \n void writeShort \n byte readByte \n byte readByte \n int readInt \n int readInt", "output": ""}, {"instruction": "Generate java code\nspin 90 left spin the drone 90 degrees to the left ", "input": " GeneralMotorCon ourInstance \n int spin90Time \n String TAG \n int batLvl \n long threadTimer \n int spinSpeed \n CommandManager cmd \n int hoverTime \n int speed \n int spin90Speed \n ARDrone drone \n int spinTime \n\n void spinRight \n void takeoff \n void forward \n void spinLeft \n void right \n void lowerAltitude \n void spin90Right \n void landing \n void setDrone \n void left \n void backward \n GeneralMotorCon getInstance \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n void raiseAltitude", "output": ""}, {"instruction": "Generate java code\nreturn the singleton measurements object . ", "input": " HashMap<String,OneMeasurement> data \n String MEASUREMENT_TYPE_DEFAULT \n Properties measurementproperties \n boolean histogram \n Measurements singleton \n Properties _props \n String MEASUREMENT_TYPE \n\n void exportMeasurements \n void measure \n String getSummary \n void setProperties \n OneMeasurement constructOneMeasurement \n void reportReturnCode", "output": ""}, {"instruction": "Generate java code\nsets a non-default marshaller to use when creating the source . ", "input": " Marshaller marshaller \n boolean userObjectFactory \n Object object \n\n Source build \n Object getPreparedJaxbObject \n void createDefaultMarshaller \n JAXBElement<T> createInferredJAXBElement \n JAXBElement<T> createJAXBElement \n JAXBElement<T> createJaxbElementFromObjectFactory \n Class<?> getObjectFactoryClass \n String inferName \n JaxbBuilder useObjectFactory", "output": ""}, {"instruction": "Generate java code\nset the list of accepted key-wrap algorithms . a request can contain a wst : keywrapalgorithm uri for use in encrypting an issued token . the algorithm specified must be contained in this list . the default algorithms are rsa 1.5 and rsa oep . ", "input": " String keyWrapAlgorithm \n int keyIdentifierType \n List<String> acceptedKeyWrapAlgorithms \n String encryptionName \n List<String> acceptedEncryptionAlgorithms \n String encryptionAlgorithm \n\n void setEncryptionName \n List<String> getAcceptedEncryptionAlgorithms \n String getEncryptionAlgorithm \n List<String> getAcceptedKeyWrapAlgorithms \n String getKeyWrapAlgorithm \n void setKeyWrapAlgorithm \n int getKeyIdentifierType \n void setAcceptedEncryptionAlgorithms \n void setKeyIdentifierType \n void setEncryptionAlgorithm \n String getEncryptionName", "output": ""}, {"instruction": "Generate java code\nverify user name/password authentication . ", "input": " Set<Character> UNRESERVED_CHARACTERS \n Map<String,String> axMapping \n Log log \n\n String normalizeUrlEncoding \n String getOpenID \n String getOpenIDUserPattern \n String getMappedAxSchema \n String getUserName \n String getOpenIDLoginPageURL \n String getOpenIDServerURL \n String generateOpenID", "output": ""}, {"instruction": "Generate java code\nchecks if the given file is being persisted . ", "input": " Set<Long> mPersistedFiles \n Object mLock \n UnderFileSystem mUfs \n BlockWorker mBlockWorker \n RateLimiter mPersistenceRateLimiter \n Map<Long,Map<Long,Long>> mPersistingInProgressFiles \n Logger LOG \n\n String prepareUfsFilePath \n void clearPersistedFiles \n boolean fileExistsInUfs \n boolean needPersistence \n void persistFile \n void addPersistedFile \n boolean isFilePersisted \n void lockBlocks \n List<Long> getPersistedFiles", "output": ""}, {"instruction": "Generate java code\ncreate a solver which can efficiently add and remove elements instead of recomputing everything from scratch . ", "input": " PlaceHolder placeHolder \n\n LinearSolver<DenseMatrix64F> leastSquares \n LinearSolver<DenseMatrix64F> general \n LinearSolver<DenseMatrix64F> pseudoInverse \n LinearSolver<DenseMatrix64F> linear \n LinearSolver<DenseMatrix64F> symmPosDef \n LinearSolver<DenseMatrix64F> leastSquaresQrPivot", "output": ""}, {"instruction": "Generate java code\navoid the need to construct these objects over and over in cases where the code knows that it needs the basic case . ", "input": " EndpointImplFactory singleton \n\n EndpointImpl newEndpointImpl", "output": ""}, {"instruction": "Generate java code\ntests that an exception is thrown when trying to get a storage directory view with a bad index . ", "input": " StorageTier mTestTier \n int TEST_TIER_LEVEL \n ExpectedException mThrown \n TemporaryFolder mTestFolder \n StorageTierView mTestTierView \n\n void getDirViews \n void getDirView \n void before \n void getTierViewAlias \n void getTierViewOrdinal", "output": ""}, {"instruction": "Generate java code\nis null or its size is 0 isempty null = true ; isempty = true ; isempty 1 , 2 = false ; ", "input": " String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR \n String DEFAULT_KEY_AND_VALUE_SEPARATOR \n\n K getKeyByValue \n boolean putMapNotNullKeyAndValue \n Map<String,String> parseKeyAndValueToMap \n Map<String,String> parseKeyAndValueToMap \n Map<String,String> parseKeyAndValueToMap \n String toJson \n Boolean mapObjectContainName \n boolean putMapNotEmptyKeyAndValue \n boolean putMapNotEmptyKeyAndValue \n boolean putMapNotNullKey \n Boolean mapContainName \n Boolean mapStringContainName \n boolean putMapNotEmptyKey \n boolean putMapNotEmptyKeyObject", "output": ""}, {"instruction": "Generate java code\ntraverses up the tree to find all of the parent instances of type parenttype ", "input": " int endLine \n GenericToken lastToken \n Node parent \n String image \n int endColumn \n Object userData \n GenericToken firstToken \n DataFlowNode dataFlowNode \n Node[] children \n int beginColumn \n int beginLine \n int childIndex \n int id \n\n int jjtGetNumChildren \n void jjtClose \n Node jjtGetChild \n Node getNthParent \n boolean hasDescendantOfType \n int getEndLine \n void jjtSetFirstToken \n List<T> findDescendantsOfType \n void findDescendantsOfType \n void findDescendantsOfType \n T getFirstChildOfType \n GenericToken jjtGetLastToken \n boolean isFindBoundary \n void testingOnlySetEndColumn \n void setDataFlowNode \n DataFlowNode getDataFlowNode \n List<Node> findChildNodesWithXPath \n void jjtSetChildIndex \n int jjtGetChildIndex \n int getEndColumn \n void appendElement \n void testingOnlySetEndLine \n void jjtOpen \n T getFirstParentOfType \n boolean hasDescendantMatchingXPath \n int jjtGetId \n void testingOnlySetBeginLine \n List<T> findChildrenOfType \n GenericToken jjtGetFirstToken \n void jjtSetParent \n boolean hasImageEqualTo \n void testingOnlySetBeginColumn \n Document getAsDocument \n void jjtSetLastToken \n Node jjtGetParent \n int getBeginLine \n void jjtAddChild \n T getFirstDescendantOfType \n T getFirstDescendantOfType \n int getBeginColumn \n boolean isSingleLine \n String toString \n Object getUserData \n String getImage \n boolean hasDecendantOfAnyType \n void setUserData \n void setImage", "output": ""}, {"instruction": "Generate java code\nreturns the int value that , when treated as unsigned , is equal to value , if possible . ", "input": " long INT_MASK \n\n int compare \n int compare \n int saturatedCast \n long toLong \n int max \n int decode \n int parseUnsignedInt \n int parseUnsignedInt \n int min \n Comparator<int[]> lexicographicalComparator \n String toString \n String toString \n String toString \n int divide \n String join \n int flip \n int remainder", "output": ""}, {"instruction": "Generate java code\nthis is a forward substitution solver for non-singular upper triangular matrices . b = u-1b where b is a vector , u is an n by n matrix . ", "input": " PlaceHolder placeHolder \n\n void solveL \n void solveL \n void invertLower \n void invertLower \n void solveTranL", "output": ""}, {"instruction": "Generate java code\nreturns true if the given line is not null or if it is not a comment . ", "input": " String fragmentFileName \n File[] documents \n Logger logger \n int i \n FragmentsFileFilter fileFilter \n File directory \n\n Document<O> next \n Document<O> getDocument \n boolean hasNext \n boolean directoryOfDirectoriesMode \n O readObjectFromStringLine \n Iterator<Document<O>> getDocumentsFromDirectory \n void moveTapeToNextValidDocument \n void remove \n boolean accept", "output": ""}, {"instruction": "Generate java code\nreturns the root key that the deterministichierarchy was created with . ", "input": " Map<ImmutableList<ChildNumber>,DeterministicKey> keys \n int MAX_CHILD_DERIVATION_ATTEMPTS \n Map<ImmutableList<ChildNumber>,ChildNumber> lastPrivDerivedNumbers \n ImmutableList<ChildNumber> rootPath \n Map<ImmutableList<ChildNumber>,ChildNumber> lastPubDerivedNumbers \n\n ChildNumber getNextChildNumberToDerive \n void putKey \n DeterministicKey get \n DeterministicKey deriveChild \n DeterministicKey deriveChild \n DeterministicKey deriveNextChild \n Map<ImmutableList<ChildNumber>,ChildNumber> getLastDerivedNumbers", "output": ""}, {"instruction": "Generate java code\nreturns a composed triconsumer that performs , in sequence , thisoperation followed by the after operation . if performing eitheroperation throws an exception , it is relayed to the caller of the composed operation . if performing this operation throws an exception , the after operation will not be performed . ", "input": " PlaceHolder placeHolder \n\n void accept", "output": ""}, {"instruction": "Generate java code\nreturns the identity function . ", "input": " long serialVersionUID \n Predicate<T> predicate \n V defaultValue \n Function<A,? extends B> f \n Function<B,C> g \n Supplier<T> supplier \n Map<K,? extends V> map \n E value \n\n Function<T,Boolean> forPredicate \n Function<Object,T> forSupplier \n Function<Object,E> constant \n String apply \n Object apply \n V apply \n V apply \n C apply \n Boolean apply \n E apply \n T apply \n Function<A,C> compose \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n Function<Object,String> toStringFunction \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n Function<K,V> forMap \n Function<K,V> forMap", "output": ""}, {"instruction": "Generate java code\nsets the value of the challenge property . ", "input": " Access access \n byte[] challenge \n Integer statusCode \n\n void setAccess \n Access getAccess \n Integer getStatusCode \n void setStatusCode \n byte[] getChallenge", "output": ""}, {"instruction": "Generate java code\nadd a named type object to the table . ", "input": " Collection<String> TOPICS \n Map<String,Named> table \n\n Named find \n String toString \n boolean packageExists", "output": ""}, {"instruction": "Generate java code\nconvenience method for executing a heartbeat and waiting for it to complete . ", "input": " Lock sLock \n Condition sCondition \n Map<String,ScheduledTimer> sTimers \n\n void removeTimer \n void schedule \n void addTimer \n void await \n void await \n void clearTimer \n Set<String> getThreadNames", "output": ""}, {"instruction": "Generate java code\ncreates a matcher of comparable object that matches when the examined object isless than the specified value , as reported by the compareto method of the examined object . for example : assertthat 1 , lessthan 2 ", "input": " PlaceHolder placeHolder \n\n Matcher<T> comparesEqualTo \n Matcher<T> greaterThanOrEqualTo \n Matcher<T> lessThanOrEqualTo \n Matcher<T> greaterThan", "output": ""}, {"instruction": "Generate java code\nqueue a command for execution after the current command execution completes . all commands queued during the execution of the current command will be queued for a single serial execution . if the command execution throws an exception , no command will be effectively queued . ", "input": " String DEFAULT_LOCK_TIMEOUT \n XLog LOG \n boolean dryrun \n XLog.Info logInfo \n int priority \n String type \n Map<Long,List<XCommand<?>>> commandQueue \n boolean used \n String name \n long createdTime \n MemoryLocks.LockToken lock \n String INSTRUMENTATION_GROUP \n Instrumentation instrumentation \n\n void loadState \n String getName \n long getLockTimeOut \n void releaseLock \n void eagerVerifyPrecondition \n T execute \n void resetUsed \n String getEntityKey \n Instrumentation getInstrumentation \n T call \n void verifyPrecondition \n boolean isLockRequired \n String getType \n void acquireLock \n int getPriority \n void eagerLoadState \n long getCreatedTime", "output": ""}, {"instruction": "Generate java code\nwaits for the given thread to be ready to be scheduled . ", "input": " Lock sLock \n Condition sCondition \n Map<String,ScheduledTimer> sTimers \n\n void removeTimer \n void schedule \n void addTimer \n void clearTimer \n void execute \n Set<String> getThreadNames", "output": ""}, {"instruction": "Generate java code\ndeclares the argument value to be invalid . gui will be redrawn but with a warning drawn in red above the entry widget . ", "input": " int TYPE_STRING \n boolean valueBoolean \n int TYPE_DOUBLE_UNSIGNED \n int TYPE_INTEGER_UNSIGNED \n boolean valid \n int TYPE_RADIO \n int TYPE_DOUBLE_SIGNED \n String description \n int type \n boolean[] valueCheck \n long serialVersionUID \n int TYPE_CHECK \n String invalidationMessage \n String valueString \n String[] options \n double valueDouble \n int valueInteger \n int TYPE_INTEGER_SIGNED \n int TYPE_BOOLEAN \n\n boolean isValid \n void setInvalidationMessage \n Double getDouble \n String getDefault \n Integer getInteger \n void setDescription \n String getString \n boolean isInvalid \n String getDescription \n Integer getSelected \n int getType \n void setValue \n void setValue \n void setValue \n void setValue \n void setValue \n String getInvalidationMessage \n void setOptions \n Boolean getBoolean \n String[] getOptions \n boolean[] getChecked \n void validate", "output": ""}, {"instruction": "Generate java code\nget hash value for string using djbx33a algorithm ", "input": " PlaceHolder placeHolder \n\n void genNCollisions \n String getCollisionString", "output": ""}, {"instruction": "Generate java code\ngets the destination . ", "input": " String destination \n String source \n RunStatusType runStatusType \n\n void setSource \n String getSource \n RunStatusType getRunStatusType \n String toString \n void setRunStatusType \n void setDestination", "output": ""}, {"instruction": "Generate java code\npause for ", "input": " int spinTime \n int[] recordedMovement \n int speed \n int cycleTime \n int MOVED_SPINRIGHT \n GeneralMotorConSchedule ourInstance \n int MOVED_RIGHT \n int MOVED_CYCLELEFT \n int MOVED_LOWERALT \n int cycleSpeed \n int cycleSpinSpeed \n int sideTime \n int runningThreads \n int altitudeSpeed \n int altitudeTime \n int batLvl \n int spinSpeed \n int hoverTime \n int MOVED_RAISEALT \n ARDrone drone \n int MOVED_CYCLERIGHT \n int runningID \n int MOVED_SPINLEFT \n int MOVED_BACKWARD \n int MOVED_FORWARD \n String TAG \n int MOVED_LEFT \n int spin90Time \n CommandManager cmd \n boolean printToConsole \n int spin90Speed \n\n GeneralMotorConSchedule spin90Left \n boolean isRunningThread \n GeneralMotorConSchedule lowerAltitude \n GeneralMotorConSchedule hover \n GeneralMotorConSchedule spin90Right \n GeneralMotorConSchedule cycleRight \n GeneralMotorConSchedule backward \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n GeneralMotorConSchedule raiseAltitude \n GeneralMotorConSchedule cycleLeft \n GeneralMotorConSchedule spinRight \n void addLastMovement \n int getLastMovement \n int newRunningThread \n GeneralMotorConSchedule takeoff \n GeneralMotorConSchedule forward \n GeneralMotorConSchedule spinLeft \n GeneralMotorConSchedule right \n GeneralMotorConSchedule right \n void landing \n void setDrone \n GeneralMotorConSchedule left \n GeneralMotorConSchedule left \n GeneralMotorConSchedule getInstance", "output": ""}, {"instruction": "Generate java code\nget issuer list ", "input": " Log log \n IdentitySAMLValidatorServiceStub stub \n\n GeneratedResponseDTO buildResponse \n ValidatedItemDTO[] validate", "output": ""}, {"instruction": "Generate java code\nremove an attribute value on the rulecontext . attributes can be shared between rulecontext instances . this operation is thread-safe . attribute values should be modified directly via the reference provided . it is not necessary to call setattribute string , object to update an attribute value . modifications made to the attribute value will automatically be seen by other threads . because of this , you must ensure the attribute values are themselves thread safe . ", "input": " boolean ignoreExceptions \n File sourceCodeFile \n String sourceCodeFilename \n LanguageVersion languageVersion \n ConcurrentMap<String,Object> attributes \n Report report \n\n void setSourceCodeFile \n void setLanguageVersion \n boolean setAttribute \n LanguageVersion getLanguageVersion \n Object getAttribute \n boolean isIgnoreExceptions \n void setSourceCodeFilename \n File getSourceCodeFile \n void setIgnoreExceptions \n Report getReport \n String getSourceCodeFilename \n void setReport", "output": ""}, {"instruction": "Generate java code\nthe next step of the wizard . ", "input": " int step \n List<JPanel> panels \n boolean started \n boolean finished \n WizardItem item \n\n void removePanel \n JPanel getCurrentPanel \n boolean canGoBack \n boolean canFinish \n int getStep \n JPanel makePanel \n void back \n int getNumSteps \n boolean isStarted \n void setToDoItem \n boolean isFinished \n void undoAction \n void undoAction \n int getProgress \n WizardItem getToDoItem \n boolean canGoNext \n void finish \n JPanel getPanel \n void doAction \n void doAction", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #equals java.lang.object . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nadd new node to list ", "input": " Node head \n\n void removeAllNodes \n void print \n Node getHead \n void printKthFromLast \n int printKthFromLast \n void reverseRecursvive \n void initialize \n void removeDuplicate \n void reverse \n Node reverse \n void arrangeEvenOddPosition \n void remove \n void removeNode \n void swapeParis", "output": ""}, {"instruction": "Generate java code\nspecifies the particular sounds which must be loaded for this screen . it returns null by default . ", "input": " int CAMERA_INITIAL_Y \n ShadowStruggles game \n Controller controller \n int screenWidth \n MyStage stage \n int screenHeight \n int width \n OrthographicCamera camera \n int BACKGROUND_Y \n int CAMERA_INITIAL_X \n BitmapFont font \n int height \n\n Array<Asset> mapsToLoad \n String getName \n void show \n void loadLanguage \n int getWidth \n OrthographicCamera getCamera \n int getHeight \n void addGameObject \n ShadowStruggles getGame \n BaseScreen copy \n void render \n void resume \n MyStage getStage \n Array<Asset> texturesToLoad \n Controller getController \n void initComponents \n Array<Asset> textureRegionsToLoad \n void pause \n void hide \n SpriteBatch getBatch \n Skin getSkin \n void resize \n BitmapFont getFont \n void dispose \n void setController", "output": ""}, {"instruction": "Generate java code\ncalled when the service transitions from @linkplain state #starting starting to @linkplain state #running running . this occurs when a service has successfully started . ", "input": " PlaceHolder placeHolder \n\n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n Throwable failureCause \n void failed \n Service startAsync \n boolean isRunning \n void stopping \n void awaitTerminated \n void awaitTerminated \n Service stopAsync \n State state \n void starting \n void awaitRunning \n void awaitRunning \n void terminated \n void addListener", "output": ""}, {"instruction": "Generate java code\nreturns the power . ", "input": " List<StateListener> listeners \n Rotation DEFAULT_ROTATION \n Rotation rotation \n double DEFAULT_POWER \n double DEFAULT_DIRECTION \n String DEFAULT_TEXT \n String text \n double power \n double direction \n\n double getDirection \n String getText \n Rotation getRotation \n void reset \n void setPower \n void removeListener \n void setRotation \n void setDirection \n void addListener \n void setText", "output": ""}, {"instruction": "Generate java code\nget the referenced revision label in b. ", "input": " String referencedRevisionA \n String referencedRevisionLabelA \n String referencedRevisionLabelB \n String referencedRevisionB \n Triple triple \n SDDTripleStateEnum tripleResolutionState \n ResolutionStateEnum resolutionState \n\n void setResolutionState \n String getReferencedRevisionLabelA \n void setReferencedRevisionLabelA \n SDDTripleStateEnum getTripleResolutionState \n void setReferencedRevisionLabelB \n Triple getTriple \n String getReferencedRevisionB \n void setTripleResolutionState \n void setTriple \n void setReferencedRevisionA \n String getReferencedRevisionA \n ResolutionStateEnum getResolutionState \n void setReferencedRevisionB", "output": ""}, {"instruction": "Generate java code\nreturns the graph 's source description in dot language . ", "input": " String TEMP_DIR \n StringBuilder graph \n String DOT \n\n void add \n void addln \n void addln \n byte[] getGraph \n int writeGraphToFile \n int writeGraphToFile \n String start_graph \n String end_graph \n String start_subgraph \n void readSource \n File writeDotSourceToFile \n byte[] get_img_stream \n String end_subgraph", "output": ""}, {"instruction": "Generate java code\nadds a net.sf.marineapi.nmea.event.sentencelistener that is interested in receiving onlysentences of certain type . ", "input": " String LOG_MSG \n String DISPATCH_ALL \n DataReader reader \n DataListener dataListener \n ConcurrentMap<String,List<SentenceListener>> listeners \n int pauseTimeout \n ExceptionListener exceptionListener \n Thread thread \n Logger LOGGER \n int DEFAULT_TIMEOUT \n\n void fireReadingPaused \n void fireDataEvent \n ExceptionListener getExceptionListener \n void setPauseTimeout \n void start \n void removeSentenceListener \n void fireReadingStopped \n void registerListener \n List<SentenceListener> getSentenceListeners \n void handleException \n void setDataListener \n void stop \n void setInputStream \n void fireReadingStarted \n void fireSentenceEvent \n int getPauseTimeout \n void setExceptionListener \n void setDatagramSocket", "output": ""}, {"instruction": "Generate java code\nincrements the total value which we pay the server . ", "input": " SettableFuture<PaymentChannelClientConnection> channelOpenFuture \n ProtobufParser<Protos.TwoWayChannelMessage> wireParser \n PaymentChannelClient channelClient \n\n ListenableFuture<PaymentChannelClientConnection> getChannelOpenFuture \n void disconnectWithoutSettlement \n void settle \n PaymentChannelClientState state", "output": ""}, {"instruction": "Generate java code\ngiven the name for a class , returns the portion which appears to constitute the package -- i.e. , all characters up to but not including the last dot , or no characters if the name has no dot . ", "input": " PlaceHolder placeHolder \n\n String nth \n String getFirstComponent \n String getShortNameComponent \n boolean isNameShort \n String escape \n String escape \n String escape \n String escape \n String unicodeEscape \n String unicodeEscape \n String removeFirstComponent", "output": ""}, {"instruction": "Generate java code\ntest loading an admin user , ensuring that the userdetails object returned has both the role_user and role_admin authorities . ", "input": " ClientDetailsEntity pairwiseClient1 \n ClientDetailsEntity pairwiseClient2 \n ClientDetailsEntity pairwiseClient3 \n String sectorIdentifier3 \n ClientDetailsEntity pairwiseClient4 \n String regularUsername \n String sectorIdentifier1 \n UserInfoRepository userInfoRepository \n String adminSub \n String sectorIdentifier2 \n String publicClientId1 \n String pairwiseSub12 \n UserInfo userInfoRegular \n String publicClientId2 \n String pairwiseClientId4 \n ClientDetailsEntity publicClient1 \n ClientDetailsEntity publicClient2 \n DefaultUserInfoService service \n String pairwiseSub4 \n String pairwiseClientId2 \n ClientDetailsEntityService clientDetailsEntityService \n String adminUsername \n String pairwiseSub3 \n UserInfo userInfoAdmin \n String regularSub \n PairwiseIdentiferService pairwiseIdentiferService \n String pairwiseClientId1 \n String pairwiseClientId3 \n\n void getByUsernameAndClientId_publicClients \n void prepare \n void getByUsernameAndClientId_pairwiseClients \n void loadByUsername_nullUser \n void loadByUsername_regular_success", "output": ""}, {"instruction": "Generate java code\nreturns true if the predicate evaluates to true with respect to the specified scan . ", "input": " List<Term> terms \n\n Constant equatesWithConstant \n int reductionFactor \n void conjoinWith \n Predicate selectPred \n String equatesWithField \n Predicate joinPred \n String toString", "output": ""}, {"instruction": "Generate java code\nrelease the given port . ", "input": " int basePort \n PortAllocator INSTANCE \n List<PortRange> ranges \n boolean[] allocated \n int BASE_PORT_INCREMENT \n ServerSocket serverSocket \n int BASE_PORT \n\n boolean hasPort \n int allocatePort \n int allocatePort \n void release \n void setUp \n void tearDown", "output": ""}, {"instruction": "Generate java code\nreturns the panel used internally for rendering . ", "input": " Dimension dim \n XHTMLPanel panel \n\n void layout \n BufferedImage renderToImageAutoSize \n BufferedImage renderToImageAutoSize \n void setDocument \n void setDocument \n void setSharedContext \n Rectangle getMinimumSize \n SharedContext getSharedContext \n void render \n BufferedImage renderToImage \n BufferedImage renderToImage", "output": ""}, {"instruction": "Generate java code\napplies no mutation data to mutation map . ", "input": " File allCasesFile \n String MAP_KEY_DELIMETER \n File sequencedCaseFile \n File knownMutationFile \n File sequencedGeneFile \n\n ArrayList<String> getList \n String generateMutationFile \n Map<String,String> getMutationMap \n String createKey \n void applyKnownMutationsData \n void main \n String execute", "output": ""}, {"instruction": "Generate java code\ncalled as a result of a previous service retrieval request . ", "input": " int RETVAL_MALFORMED \n int RETVAL_OK \n int RETVAL_ERROR \n int RETVAL_NOENTRY \n\n void onServiceRegistration \n void onServiceAdd \n void onServiceRemove \n void onServiceUnregistration \n void onServiceDelayed \n void onServiceModify \n void onFlowStatUpdate \n String getRetvalString", "output": ""}, {"instruction": "Generate java code\nwrite a group start tag . ", "input": " XMLStreamWriter writer \n\n void processDocumentEnd \n void processGroupEnd \n void processCommand \n void processCharacterBytes \n void processString \n void processDocumentStart \n void processBinaryBytes", "output": ""}, {"instruction": "Generate java code\ngiven matrix a and an eigen vector of a , compute the corresponding eigen value . this is the rayleigh quotient . xtax / xtx ", "input": " PlaceHolder placeHolder \n\n Eigenpair computeEigenVector \n DenseMatrix64F createMatrixV \n Eigenpair dominantEigenpair \n double[] boundLargestEigenValue \n DenseMatrix64F createMatrixD", "output": ""}, {"instruction": "Generate java code\nvalidate the incoming request for mandatory parameters . ", "input": " IFetcherRunRecorderService fetcherRunRecorderServiceImpl \n IFetcherWorkAreaService fetcherWorkAreaServiceImpl \n Logger logger \n\n void createDelayeredWorkareas \n void populatePclFetcherWorkAreaDefaults \n ActivityResponse perform \n void validateConfiguration \n void performDelayering", "output": ""}, {"instruction": "Generate java code\nbuilding per module configuration objects ", "input": " String threadPoolSize \n Properties notificationMgtConfigProperties \n Log log \n Map<String,ModuleConfiguration> moduleConfiguration \n\n ModuleConfiguration getModuleConfigurations \n String getThreadPoolSize \n Properties getModuleProperties \n void build \n void resolveSecrets \n List<Subscription> buildSubscriptionList \n void setThreadPoolSize \n Properties loadProperties", "output": ""}, {"instruction": "Generate java code\ntest method for com.alibaba.dubbo.registry.support.injvm.injvmregistry #register java.util.map . ", "input": " String service \n URL serviceUrl \n URL consumerUrl \n URL registryUrl \n\n void testSubscribe \n void setUpBeforeClass \n void setUp", "output": ""}, {"instruction": "Generate java code\nreturns distance to closest block . if none is found , returns 9999 . ", "input": " EntityMobWithInventory mob \n World world \n int itemQuantity \n Item itemDropped \n int range \n BlockPos nextBlock \n\n boolean reachedBlock \n void storeItemDroppedDetails \n boolean isCorrectBlock \n void obtainItems \n void moveToBlock \n void setCurrentItem \n void nextStep \n BlockPos getNextBlock", "output": ""}, {"instruction": "Generate java code\nreads playlists from database ", "input": " String appPath \n Keys keys \n Machine machine \n String logPath \n Options options \n HashMap<Integer,Playlist> playlists \n DefaultListModel genreListModel \n Logger logger \n DbConnJaMuz db \n ArrayList<String> tags \n\n void logConfig \n boolean getCurrentMachine \n boolean createLog \n Proxy getProxy \n void readTags \n List<Playlist> getPlaylistsVisible \n void readGenres \n boolean setProxy \n boolean connectDatabase \n Playlist getPlaylist \n Logger getLogger \n ArrayList<String> getTags \n boolean configure \n Options getKeys \n File getFile \n DbConnJaMuz getDb \n Machine getMachine \n DefaultListModel getGenreListModel \n DefaultHttpClient getHttpClient \n String getLogPath \n Options getOptions \n List<String> getGenres \n List<Playlist> getPlaylists", "output": ""}, {"instruction": "Generate java code\nflushes all modified buffers . then goes through the log , rolling back all uncommitted transactions . finally , writes a quiescent checkpoint record to the log . this method is called only during system startup , before user transactions begin . ", "input": " RecoveryMgr recoveryMgr \n BufferList myBuffers \n ConcurrencyMgr concurMgr \n int END_OF_FILE \n int txnum \n int nextTxNum \n\n void rollback \n int getInt \n void setString \n void pin \n int size \n void commit \n void unpin \n String getString \n int nextTxNumber \n Block append \n void setInt", "output": ""}, {"instruction": "Generate java code\nsetea el password del usuario . ", "input": " String password \n Date credentialsExpirationDate \n Integer loginsFallidos \n Collection<GrantedAuthority> grantedAuthorities \n boolean credentialsNonExpired \n boolean accountNonExpired \n Long id \n boolean enabled \n String email \n String username \n boolean accountNonLocked \n String nombres \n\n void setCredentialsNonExpired \n Date getCredentialsExpirationDate \n void setUsername \n void setAccountNonLocked \n String getNombres \n void setAccountNonExpired \n boolean isAccountNonLocked \n Long getId \n void setNombres \n Collection<GrantedAuthority> getAuthorities \n String getUsername \n void setEnabled \n String getPassword \n void setEmail \n void setAuthorities \n boolean isAccountNonExpired \n boolean isCredentialsNonExpired \n boolean isEnabled \n String getEmail \n void setId \n void setCredentialsExpirationDate", "output": ""}, {"instruction": "Generate java code\nget the username/alias to use to sign any issued tokens ", "input": " Object encryptionCryptoProperties \n Bus bus \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n Logger LOG \n String issuer \n EncryptionProperties encryptionProperties \n CallbackHandler callbackHandler \n List<Relationship> relationships \n boolean validateUseKey \n RelationshipResolver relationshipResolver \n String callbackHandlerClass \n String signatureUsername \n Crypto encryptionCrypto \n SAMLRealmCodec samlRealmCodec \n String encryptionUsername \n Object signatureCryptoProperties \n IdentityMapper identityMapper \n RealmParser realmParser \n\n RelationshipResolver getRelationshipResolver \n Bus getBus \n void setSamlRealmCodec \n ResourceManager getResourceManager \n void setSignaturePropertiesFile \n void setCallbackHandler \n void setEncryptionProperties \n EncryptionProperties getEncryptionProperties \n boolean isValidateUseKey \n void setSignatureUsername \n List<Relationship> getRelationships \n SAMLRealmCodec getSamlRealmCodec \n String getEncryptionUsername \n void setIdentityMapper \n void setEncryptionPropertiesFile \n void setEncryptionUsername \n void setCallbackHandlerClass \n Crypto getEncryptionCrypto \n void setRelationships \n SignatureProperties getSignatureProperties \n void setSignatureProperties \n void setRealmParser \n String getIssuer \n void setSignatureCryptoProperties \n void setSignatureCrypto \n IdentityMapper getIdentityMapper \n void setValidateUseKey \n void configureProperties \n void setEncryptionCrypto \n RealmParser getRealmParser \n Crypto getSignatureCrypto \n void setIssuer \n CallbackHandler getCallbackHandler \n void setEncryptionCryptoProperties \n void setBus", "output": ""}, {"instruction": "Generate java code\ndelete the ingredient by id . ", "input": " Logger log \n IngredientRepository ingredientRepository \n int max_suggest \n\n List<String> getAutoSuggest \n Ingredient save \n List<Ingredient> save \n Ingredient findOne \n Page<Ingredient> findAll", "output": ""}, {"instruction": "Generate java code\nstarts loading the assets . loader #setassetstoload must becalled first . ", "input": " ShadowStruggles game \n Array<Asset> textures \n Array<Asset> sounds \n Array<Asset> rpgMaps \n String assetName \n Array<Asset> textureRegions \n String LOG \n String assetType \n\n void loadMaps \n void disposeSounds \n TextureRegion getTextureRegion \n TiledMap getTiledMap \n void disposeTextures \n void disposeMaps \n Texture getTexture \n void unloadSounds \n void loadSounds \n boolean equals \n void setAssetsToLoad \n void dispose \n void loadTextureAtlas \n void createTextureAtlas \n void disposeAtlas \n void loadTextures", "output": ""}, {"instruction": "Generate java code\nreturns the depth of the tree longest path length from root to leaf . ", "input": " BoundingBox bb \n float splitValue \n float testLatMin \n boolean splitAtLat \n int maxDepth \n float testLatMax \n int depth \n int maxEntities \n KDTree[] children \n ArrayList<DefaultMapEntity> entities \n float testLonMax \n boolean isTrue \n boolean isSorted \n float testLonMin \n\n void setUnsorted \n void visitEntities \n int compare \n List<double[]> getSplitCoords \n void insertEntity \n void computeSplitValues \n boolean isVisible \n BoundingBox getBoundingBox", "output": ""}, {"instruction": "Generate java code\nguaranteed to throw an exception and leave the rangemap unmodified . ", "input": " long serialVersionUID \n List<Map.Entry<Range<K>,V>> entries \n ImmutableRangeMap<Comparable<?>,Object> EMPTY \n ImmutableList<Range<K>> ranges \n ImmutableList<V> values \n ImmutableMap<Range<K>,V> mapOfRanges \n\n Object readResolve \n ImmutableMap<Range<K>,V> asMapOfRanges \n void clear \n void putCoalescing \n ImmutableRangeMap<K,V> copyOf \n Object writeReplace \n void remove \n ImmutableMap<Range<K>,V> asDescendingMapOfRanges \n ImmutableRangeMap<K,V> subRangeMap \n Object createRangeMap \n ImmutableRangeMap<K,V> build \n int hashCode \n ImmutableRangeMap<K,V> of \n ImmutableRangeMap<K,V> of \n Builder<K,V> putAll \n void putAll \n V get \n boolean equals \n Builder<K,V> builder \n String toString \n Map.Entry<Range<K>,V> getEntry \n Range<K> span", "output": ""}, {"instruction": "Generate java code\nreturns gammas from the householder operations for the v matrix . ", "input": " double gammasV[] \n int min \n double gammasU[] \n double b[] \n double u[] \n DenseMatrix64F UBV \n int m \n int n \n\n void init \n DenseMatrix64F handleV \n DenseMatrix64F handleU \n boolean decompose \n void getDiagonal \n boolean _decompose \n boolean inputModified \n DenseMatrix64F getU \n DenseMatrix64F getV \n DenseMatrix64F handleB \n void computeV \n void computeU \n DenseMatrix64F getUBV \n double[] getGammasU \n DenseMatrix64F getB", "output": ""}, {"instruction": "Generate java code\nproperties for the test . ", "input": " Logger logger \n FuriaChanEngine engine \n\n void closeEngine \n void testAll \n void fragmentDataSet", "output": ""}, {"instruction": "Generate java code\ncalled when the service transitions from @linkplain state #new new to @linkplain state #starting starting . this occurs when service #startasync is calledthe first time . ", "input": " PlaceHolder placeHolder \n\n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n boolean isTerminal \n Throwable failureCause \n void failed \n Service startAsync \n void running \n boolean isRunning \n void stopping \n void awaitTerminated \n void awaitTerminated \n Service stopAsync \n State state \n void awaitRunning \n void awaitRunning \n void terminated \n void addListener", "output": ""}, {"instruction": "Generate java code\nadds an unnamed value to the formatted output . it is strongly encouraged to use #add string , double instead and give value areadable name . ", "input": " ValueHolder next \n ValueHolder holderTail \n String name \n String className \n boolean omitNullValues \n ValueHolder holderHead \n Object value \n\n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper omitNullValues \n ValueHolder addHolder \n ToStringHelper addHolder \n ToStringHelper addHolder \n T firstNonNull \n ToStringHelper toStringHelper \n ToStringHelper toStringHelper \n ToStringHelper toStringHelper \n String toString", "output": ""}, {"instruction": "Generate java code\ntest method for org.mitre.uma.service.impl.defaultpermissionservice #createticket org.mitre.uma.model.resourceset , java.util.set . ", "input": " Set<String> scopes2 \n PermissionRepository permissionRepository \n Set<String> scopes1 \n String rs2Owner \n Long rs1Id \n ResourceSet rs2 \n ResourceSet rs1 \n DefaultPermissionService permissionService \n String rs1Name \n SystemScopeService scopeService \n String rs1Owner \n Long rs2Id \n String rs2Name \n\n void prepare \n void testCreate_scopeMismatch \n void testCreate_uuid \n void testCreate_differentTicketsSameClient \n void testCreate_differentTicketsDifferentClient", "output": ""}, {"instruction": "Generate java code\ncheckgameover prueft ob die bedingung erfuellt wurde die fuer ein game over erforderlich sind . ", "input": " Border border \n Snake snake \n Vector<GameElement> gameElements \n GUI gui \n int STEP \n\n void setDiamonds \n void checkState \n void main \n void draw \n void checkGameElement", "output": ""}, {"instruction": "Generate java code\nextract min value key from the heap ", "input": " Map<T,Integer> nodePosition \n List<Node> allNodes \n int weight \n T key \n\n void add \n T min \n void printPositionMap \n void swap \n void updatePositionMap \n Integer getWeight \n Node extractMinNode \n void printHeap \n void main \n void decrease \n boolean containsData \n boolean empty", "output": ""}, {"instruction": "Generate java code\ntests the networkaddressutils #getfqdnhost inetsocketaddress and networkaddressutils #getfqdnhost workernetaddress methods . ", "input": " PlaceHolder placeHolder \n\n void replaceHostName \n void resolveHostName \n void after \n void testGetBindAddress \n void testGetConnectAddress \n void getBindAddress \n void getConnectAddress", "output": ""}, {"instruction": "Generate java code\nreturns the population covariance of the values . the count must be non-zero . this is guaranteed to return zero if the dataset contains a single pair of finite values . it is not guaranteed to return zero when the dataset consists of the same pair of values multiple times , due to numerical errors . non-finite values if the dataset contains any non-finite values double #positive_infinity , double #negative_infinity , or double #nan then the result is double #nan . ", "input": " int BYTES \n long serialVersionUID \n double sumOfProductsOfDeltas \n Stats yStats \n Stats xStats \n\n PairedStats fromByteArray \n double sumOfProductsOfDeltas \n Stats yStats \n double sampleCovariance \n long count \n Stats xStats \n int hashCode \n double ensurePositive \n double ensureInUnitRange \n boolean equals \n byte[] toByteArray \n double pearsonsCorrelationCoefficient \n LinearTransformation leastSquaresFit \n String toString", "output": ""}, {"instruction": "Generate java code\nstores words and their corresponding frequencies in parallel array lists parameters . the frequencies are sorted from low to high . ", "input": " Comparator<Map.Entry<String,Int>> SORT_ALPHABETICALLY \n int _totalWords \n Set<String> _ignoreWords \n Comparator<Map.Entry<String,Int>> SORT_BY_FREQUENCY \n Map<String,Int> _wordFrequency \n\n void countWords \n void countWords \n int getWordCount \n void ignore \n void ignore \n int[] getFrequencies \n int getEntryCount \n String[] getWords", "output": ""}, {"instruction": "Generate java code\nsets the priority for new threads created with this threadfactory . ", "input": " Boolean daemon \n UncaughtExceptionHandler uncaughtExceptionHandler \n Integer priority \n String nameFormat \n ThreadFactory backingThreadFactory \n\n ThreadFactoryBuilder setDaemon \n ThreadFactoryBuilder setUncaughtExceptionHandler \n ThreadFactory build \n ThreadFactory build \n ThreadFactoryBuilder setThreadFactory \n ThreadFactoryBuilder setNameFormat \n String format", "output": ""}, {"instruction": "Generate java code\nreturn the full url including protocol , host , port , context path , servlet path for a servlet path . ", "input": " Server server \n String host \n String contextPath \n Context context \n int port \n\n int getPort \n String getContextURL \n void stop \n void start \n void addServletEndpoint \n String getHost", "output": ""}, {"instruction": "Generate java code\nchange the attributes for this element . ", "input": " String name \n Attributes attributes \n StringBuffer text \n\n void setName \n String getName \n String getAttribute \n String getAttributeValue \n String getText \n void addText \n void addText \n int length \n int getNumAttributes \n void resetText \n String getAttributeName \n void setText", "output": ""}, {"instruction": "Generate java code\nnote that this method does not get forwarded to the delegee if the hint parameter is null , scriptruntime.scriptableclass or scriptruntime.functionclass . instead the object itself is returned . ", "input": " Scriptable obj \n\n Scriptable getDelegee \n void setDelegee \n boolean hasInstance \n void setParentScope \n Delegator newInstance \n Object[] getIds \n Scriptable construct \n void delete \n void delete \n void put \n void put \n Scriptable getPrototype \n void setPrototype \n Object call \n Object get \n Object get \n String getClassName \n boolean has \n boolean has \n Scriptable getParentScope", "output": ""}, {"instruction": "Generate java code\nreturns the raw value byte array . ", "input": " int valueLen \n PackFormatInputStream format \n int valueOff \n byte[] value \n\n void getByteArrayInternal \n int getByteArrayLength \n byte getByte \n short getShort \n String getString \n long getLong \n int getInt \n int unpackInt \n short unpackShort \n void getByteArray \n void getByteArray \n byte[] getByteArray \n String getFormat \n long getRecord \n long unpackLong", "output": ""}, {"instruction": "Generate java code\nresolves the uri ; if absolute , leaves as is , if relative , returns an absolute uri based on the baseurl for the agent . ", "input": " ImageResourceLoader _imageResourceLoader \n UriResolver _uriResolver \n\n boolean isVisited \n void onLayoutException \n void onRenderException \n void shrinkImageCache \n ImageResource getImageResource \n void setImageResourceLoader \n byte[] getBinaryResource \n void documentStarted \n String getBaseURL \n CSSResource getCSSResource \n void clearImageCache \n XMLResource getXMLResource \n void setBaseURL \n InputStream resolveAndOpenStream \n void setRepaintListener \n void documentLoaded", "output": ""}, {"instruction": "Generate java code\nget the source where this result comes from source is only a representative string no object reference ", "input": " Date date \n ResultLevel level \n String source \n String content \n\n ResultLevel getLevel \n String getContent \n Date getDate \n String toString \n int compareTo", "output": ""}, {"instruction": "Generate java code\nexecute the copy-of transform and return the resulting document . used for xmltestcase comparison ", "input": " NamespaceContext ctx \n\n StringBuffer getXSLTBase \n String getNamespaceDeclarations \n String getCopyTransformation \n String getValueTransformation \n void setNamespaceContext \n void performTransform \n Node getXPathResultNode \n NodeList getMatchingNodes \n String evaluate", "output": ""}, {"instruction": "Generate java code\nwrites the graph 's image in a file . ", "input": " String TEMP_DIR \n StringBuilder graph \n String DOT \n\n void add \n void addln \n void addln \n byte[] getGraph \n String start_graph \n String end_graph \n String start_subgraph \n void readSource \n String getDotSource \n File writeDotSourceToFile \n byte[] get_img_stream \n String end_subgraph", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.vtgparser #gettruecourse . ", "input": " String EXAMPLE \n VTGSentence vtg \n VTGSentence empty \n\n void testGetMagneticCourse \n void testGetSpeedKmh \n void testGetSpeedKnots \n void testSetMagneticCourseWithNegativeValue \n void testSetMagneticCourseWithValueGreaterThanAllowed \n void testSetSpeedKmhWithNegativeValue \n void testSetSpeedKnotsWithNegativeValue \n void testConstructor \n void testSetSpeedKmh \n void testSetMagneticCourse \n void testSetMode \n void testSetModeWhenOmitted \n void testSetTrueCourseWithNegativeValue \n void setUp \n void testSetSpeedKnots \n void testSetTrueCourse \n void testGetMode \n void testSetTrueCourseWithValueGreaterThanAllowed", "output": ""}, {"instruction": "Generate java code\nreturns the scaled value of dimension . this function performs the integer equivalent of ceil dimension scalingfactor . ", "input": " int denom \n int num \n\n boolean isOne \n boolean equals \n int getNum \n int getDenom", "output": ""}, {"instruction": "Generate java code\nreturns the scope for script evaluations . ", "input": " Scriptable scope \n Dim dim \n int type \n SwingGui debugGui \n int EXIT_ACTION \n int SCOPE_PROVIDER \n\n InputStream getIn \n void setExitAction \n void doBreak \n void main \n void run \n void setBreakOnReturn \n PrintStream getOut \n void setSize \n void setSize \n void setBreakOnExceptions \n void contextCreated \n void setVisible \n void mainEmbedded \n void mainEmbedded \n void mainEmbedded \n void contextExited \n void setBreakOnEnter \n PrintStream getErr \n void mainEmbeddedImpl \n void go \n boolean isVisible \n ScopeProvider newScopeProvider \n void setScopeProvider \n void pack \n void clearAllBreakpoints \n void contextReleased \n void setOptimizationLevel \n void detach \n void dispose \n void setScope \n void attachTo \n void contextEntered \n JFrame getDebugFrame", "output": ""}, {"instruction": "Generate java code\nlists all folders and files in the given dir as xml tags . ", "input": " int EN_OK \n int EN_SECURITY_ERROR \n Element errorElement \n int EN_UKNOWN \n Element filesElement \n Document document \n int EN_ALREADY_EXISTS \n int EN_INVALID_FOLDER_NAME \n Element foldersElement \n int EN_ERROR \n\n void setError \n void setError \n void setFolders \n String toString \n void setFiles", "output": ""}, {"instruction": "Generate java code\ngets a hashmap of the default mutation and copy number profiles . ", "input": " ArrayList<GeneticProfile> otherCnaProfileList \n String RAE \n ArrayList<GeneticProfile> mutationProfileList \n ArrayList<GeneticProfile> raeProfileList \n String GISTIC \n ArrayList<GeneticProfile> gisticProfileList \n\n HashMap<String,GeneticProfile> getDefaultCopyNumberMap \n void addCopyNumberProfile \n GeneticProfile getDefaultCnaProfile \n HashMap<String,GeneticProfile> getDefaultGeneticProfileMap \n void conditionallyAddProfileToSet \n void addMutationProfile \n GeneticProfile getFirstPriorityProfile \n void addRaeProfile \n GeneticProfile getDefaultMutationProfile \n void addGisticProfile \n void addOtherCnaProfile \n void addGeneticProfile \n HashMap<String,GeneticProfile> getDefaultMutationMap \n int getNumDefaultMutationAndCopyNumberProfiles", "output": ""}, {"instruction": "Generate java code\ncheck and modify path . ", "input": " IFetcherContext fetcherContext \n IFetcherTesterConfigDao porticoConfigRegDao \n IFetcherTesterRestAPIDao fetcherRegRestAPIDao \n IFetcherTesterExecuteShellCommand executeShellCommand \n Map<String,Object> feedExtConfigMap \n Logger LOGGER \n\n PubFilesOperationResp seedSourceFilesOperations \n PubFilesOperationResp isFileDownloadedToDestination \n String buildUserRemoteHostCommand \n String checkForOverrideConnectionUserId \n Map<String,Object> buildFeedExtConfigMap", "output": ""}, {"instruction": "Generate java code\nget all the dishcollections . ", "input": " DishCollectionRepository dishCollectionRepository \n Logger log \n\n DishCollection findOneByName \n DishCollection save \n DishCollection findOne \n void delete", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getprice ", "input": " PlaceHolder placeHolder \n\n GetPriceResponse createGetPriceResponse", "output": ""}, {"instruction": "Generate java code\nget the wss4j key identifier type used to reference a certificate for encryption ", "input": " String keyWrapAlgorithm \n int keyIdentifierType \n List<String> acceptedKeyWrapAlgorithms \n String encryptionName \n List<String> acceptedEncryptionAlgorithms \n String encryptionAlgorithm \n\n void setEncryptionName \n List<String> getAcceptedEncryptionAlgorithms \n String getEncryptionAlgorithm \n void setAcceptedKeyWrapAlgorithms \n List<String> getAcceptedKeyWrapAlgorithms \n String getKeyWrapAlgorithm \n void setKeyWrapAlgorithm \n void setAcceptedEncryptionAlgorithms \n void setKeyIdentifierType \n void setEncryptionAlgorithm \n String getEncryptionName", "output": ""}, {"instruction": "Generate java code\ngets the data unit id . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nmultiplies the provided matrix by q using householder reflectors . this is more efficient that computing q then applying it to the matrix . b = q b ", "input": " D1Submatrix64F A \n boolean saveW \n BlockMatrix64F dataW \n BlockMatrix64F dataWTA \n D1Submatrix64F Y \n int blockLength \n D1Submatrix64F W \n BlockMatrix64F dataA \n double temp[] \n D1Submatrix64F WTA \n double gammas[] \n\n void setW \n void setSaveW \n boolean decompose \n void setup \n BlockMatrix64F getQ \n BlockMatrix64F getQR \n BlockMatrix64F initializeQ \n BlockMatrix64F getR \n boolean inputModified \n void applyQTran \n void updateA", "output": ""}, {"instruction": "Generate java code\nremove a single item if it is in the set . ", "input": " Integer hashcode_cache \n HashMap<lalr_item,lalr_item> _all \n\n lalr_item add \n void add \n void not_null \n boolean is_superset_of \n Iterator<lalr_item> iterator \n boolean contains \n int size \n lalr_item find \n int hashCode \n lalr_item get_one \n boolean equals \n boolean equals \n boolean is_subset_of \n void compute_closure \n String toString", "output": ""}, {"instruction": "Generate java code\nfind a element in binary search tree ", "input": " PlaceHolder placeHolder \n\n void preOrderRecursive \n TreeNode deleteNode \n void inOrder \n void preOrder \n TreeNode minValueNode \n TreeNode addTreeNode \n boolean isBinarySearchTree \n boolean isBinarySearchTree \n void postOrderRecursive \n TreeNode createBST \n void postOrder \n void inOrderRecursive", "output": ""}, {"instruction": "Generate java code\ncomputes the product of the diagonal elements . for a diagonal or triangular matrix this is the determinant . ", "input": " PlaceHolder placeHolder \n\n void subvector \n double elementSumSq \n double diffNormP1 \n DenseMatrix64F pivotMatrix \n DenseMatrix64F copyChangeRow \n DenseMatrix64F createReflector \n DenseMatrix64F createReflector \n double diffNormF \n double qualityTriangular \n double diffNormF_fast \n void addIdentity \n DenseMatrix64F copyTriangle \n DenseMatrix64F[] splitIntoVectors", "output": ""}, {"instruction": "Generate java code\nreads content from a buffered reader . ", "input": " String TAB \n String NEW_LINE \n\n String[][] retrieveMatrix \n String retrieveDocument \n String[][] parseMatrix \n String[][] prepareMatrix", "output": ""}, {"instruction": "Generate java code\nreturns the given string if it is non-null ; the empty string otherwise . ", "input": " PlaceHolder placeHolder \n\n String padStart \n String commonPrefix \n boolean isNullOrEmpty \n boolean validSurrogatePairAt \n String repeat \n String commonSuffix \n String emptyToNull \n String padEnd", "output": ""}, {"instruction": "Generate java code\nreturns an expression . evaluating this expression for a record produces the value that will be stored in the record 's target field . ", "input": " String fldname \n Predicate pred \n String tblname \n Expression newval \n\n String targetField \n Predicate pred \n String tableName", "output": ""}, {"instruction": "Generate java code\nwrite the given long value 64-bit in big-endian order to the buffer ", "input": " ByteBuffer mWriter \n byte[] mBuffer \n\n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter putLen8 \n BufferedByteWriter put16 \n BufferedByteWriter put16 \n BufferedByteWriter putLen16 \n byte[] toByteArray \n void ensureCapacity \n BufferedByteWriter put \n BufferedByteWriter put \n BufferedByteWriter put32 \n BufferedByteWriter put32 \n BufferedByteWriter put32", "output": ""}, {"instruction": "Generate java code\nget content type of the message ", "input": " Map<String,Object> headers \n byte body[] \n long deliveryTag \n String replyTo \n String contentEncoding \n String messageId \n String correlationId \n String soapAction \n String contentType \n\n String getCorrelationId \n String getContentEncoding \n void setHeaders \n Map<String,Object> getHeaders \n byte[] getBody \n String getReplyTo \n void setCorrelationId \n void setContentEncoding \n long getDeliveryTag \n void setMessageId \n void setSoapAction \n void setBody \n String getMessageId \n void setReplyTo \n void setDeliveryTag \n void setContentType \n String getSoapAction", "output": ""}, {"instruction": "Generate java code\nwhether the serializer will produce lazy parse mode messages ", "input": " Map<Class<? extends Message>,String> names \n int size \n Logger log \n boolean parseLazy \n int HEADER_LENGTH \n byte[] checksum \n byte[] header \n NetworkParameters params \n int COMMAND_LEN \n String command \n boolean parseRetain \n\n void seekPastMagicBytes \n void serialize \n void serialize \n Message makeMessage \n Message deserializePayload \n boolean isParseRetainMode \n BitcoinPacketHeader deserializeHeader \n Message deserialize", "output": ""}, {"instruction": "Generate java code\nset whether to validate a client public key or certificate presented as part of a usekey element . if this is set to true the default , the public key must be trusted by the signature crypto of the sts . ", "input": " Object encryptionCryptoProperties \n Bus bus \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n Logger LOG \n String issuer \n EncryptionProperties encryptionProperties \n CallbackHandler callbackHandler \n List<Relationship> relationships \n boolean validateUseKey \n RelationshipResolver relationshipResolver \n String callbackHandlerClass \n String signatureUsername \n Crypto encryptionCrypto \n SAMLRealmCodec samlRealmCodec \n String encryptionUsername \n Object signatureCryptoProperties \n IdentityMapper identityMapper \n RealmParser realmParser \n\n RelationshipResolver getRelationshipResolver \n Bus getBus \n void setSamlRealmCodec \n ResourceManager getResourceManager \n void setSignaturePropertiesFile \n void setCallbackHandler \n void setEncryptionProperties \n EncryptionProperties getEncryptionProperties \n boolean isValidateUseKey \n void setSignatureUsername \n List<Relationship> getRelationships \n SAMLRealmCodec getSamlRealmCodec \n String getEncryptionUsername \n void setIdentityMapper \n void setEncryptionPropertiesFile \n void setEncryptionUsername \n void setCallbackHandlerClass \n Crypto getEncryptionCrypto \n void setRelationships \n SignatureProperties getSignatureProperties \n void setSignatureProperties \n void setRealmParser \n String getIssuer \n void setSignatureCryptoProperties \n void setSignatureCrypto \n IdentityMapper getIdentityMapper \n void configureProperties \n void setEncryptionCrypto \n RealmParser getRealmParser \n String getSignatureUsername \n Crypto getSignatureCrypto \n void setIssuer \n CallbackHandler getCallbackHandler \n void setEncryptionCryptoProperties \n void setBus", "output": ""}, {"instruction": "Generate java code\nsets the data set id . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nreturns the current #dotsperdeg value . ", "input": " float unitsPerInch \n float dotsPerInch \n float originLat \n float dotsPerDeg \n float originLon \n float lonCorr \n\n void adjustTransformation \n void setScreenResolution \n void adjust \n int x \n int y \n float getDotsPerUnit \n void zoom \n float lon \n float computeScale \n float lat", "output": ""}, {"instruction": "Generate java code\ncheck whether object o is in the set . because of the semantics of the subtype set , o is in the set iffit descends from or is equal to one of the elements in the set . ", "input": " Type topType \n List<Type> v \n TypeSystem ts \n\n boolean add \n boolean containsAll \n void clear \n boolean isEmpty \n boolean remove \n Iterator<Type> iterator \n boolean removeAll \n int size \n boolean addAll \n boolean containsSubtype \n Object[] toArray \n U[] toArray \n String toString \n boolean retainAll", "output": ""}, {"instruction": "Generate java code\nthis callback is called on an unregistration event . ", "input": " int RETVAL_MALFORMED \n int RETVAL_OK \n int RETVAL_ERROR \n int RETVAL_NOENTRY \n\n void onServiceRegistration \n void onServiceAdd \n void onServiceRemove \n void onServiceDelayed \n void onServiceModify \n void onFlowStatUpdate \n String getRetvalString \n void onServiceGet", "output": ""}, {"instruction": "Generate java code\nreturn the job owner user name . ", "input": " String WORKFLOW \n String ACTION_TRACKER_URI \n String LAST_ACTION_IN_ERROR \n String ACTION_PROTO_CONF \n String ACTION_DATA \n String ACTION_EXTERNAL_STATUS \n String ACTION_ERROR_CODE \n String ACTION_EXTERNAL_ID \n String ACTION \n String ACTION_ERROR_MESSAGE \n\n int wf_run \n WorkflowJobBean getWorkflow \n String getActionVar \n String wf_callback \n void setActionInfo \n String wf_conf \n String wf_actionExternalStatus \n WorkflowActionBean getAction \n String wf_actionExternalId \n Configuration getProtoActionConf \n String wf_group \n String wf_transition \n String wf_lastErrorNode \n String wf_appPath \n String wf_errorCode \n void configureEvaluator \n String wf_id \n String wf_actionTrackerUri \n Map<String,String> wf_actionData \n String wf_name \n String wf_errorMessage", "output": ""}, {"instruction": "Generate java code\nsingleton retrieval method for the projectbrowser . lazely instantiates the projectbrowser . ", "input": " ProjectActions theInstance \n ActionRemoveFromDiagram removeFromDiagram \n AbstractAction redoAction \n ActionUndo undoAction \n\n void determineRemoveEnabled \n void targetSet \n void jumpToDiagramShowing \n AbstractAction getUndoAction \n AbstractAction getRedoAction \n void targetRemoved \n AbstractAction getRemoveFromDiagramAction \n void setTarget \n void propertyChange \n void targetAdded", "output": ""}, {"instruction": "Generate java code\nsets the multiplicity for the given word . ", "input": " Map<O,DocumentElement<O>> data \n int wordCountMultiSet \n String name \n IntegerHolder count \n T object \n\n void addWord \n int multiSetSize \n Iterator<DocumentElement<O>> iterator \n T getObject \n String getName \n int size \n int getCount \n void inc", "output": ""}, {"instruction": "Generate java code\nget the swt image . reload it from the uac if it was disposed . ", "input": " String _uri \n UserAgentCallback _uac \n Image _image \n int _width \n int _height \n\n int getHeight \n void scale \n int getWidth \n void setHeight \n void setWidth", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #getcourse . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetCourse \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nreturns the currently set action view for this menu item . ", "input": " android.view.MenuItem mMenuItem \n\n boolean hasSubMenu \n CharSequence getTitleCondensed \n int getGroupId \n int getItemId \n CharSequence getTitle \n MenuItem setChecked \n char getAlphabeticShortcut \n MenuItem setOnMenuItemClickListener \n MenuItem setOnMenuItemClickListener \n Intent getIntent \n boolean isCheckable \n MenuItem setShortcut \n MenuItem setVisible \n void setShowAsAction \n void setShowAsAction \n SubMenu getSubMenu \n MenuItem setIntent \n MenuItem setCheckable \n MenuItem setAlphabeticShortcut \n MenuItem setTitle \n MenuItem setTitle \n MenuItem setNumericShortcut \n boolean isVisible \n boolean isChecked \n MenuItem setTitleCondensed \n Drawable getIcon \n MenuItem setIcon \n MenuItem setIcon \n MenuItem setEnabled \n int getOrder \n boolean isEnabled \n char getNumericShortcut \n void setActionView \n void setActionView \n MenuItem setActionView \n MenuItem setActionView \n ContextMenuInfo getMenuInfo", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gsaparser #sethorizontaldop double . ", "input": " GSASentence instance \n String EXAMPLE \n GSASentence empty \n\n void testGetFixStatus \n void testSetFixStatus \n void testGetPositionDOP \n void testGetSatelliteIds \n void testConstructor \n void testGetHorizontalDOP \n void testSetPositionDOP \n void testGetVerticalDOP \n void testSetFaaMode \n void setUp \n void testGetFaaMode \n void testSetVerticalDOP \n void testSetSatelliteIds", "output": ""}, {"instruction": "Generate java code\ncreates a character from this object 's parameters . ", "input": " int x \n float width \n String sprite \n int y \n int id \n TriggerType triggerType \n String map \n Array<EventAction> actions \n String layer \n float height \n boolean collidable \n\n void setY \n void read \n void setX \n void setLayer \n void setActions \n String getLayer \n int getId \n Array<EventAction> getActions \n String getMap \n void setSprite \n String getSprite \n int getX \n boolean isCollidable \n int getY \n void setTriggerType \n boolean equals \n void setMap \n void setId \n TriggerType getTriggerType \n void write \n EventInGame.TriggerType getConvertedTriggerType", "output": ""}, {"instruction": "Generate java code\ncalculates xor checksum of given string . resulting hex value is returned as a string in two digit format , padded with a leading zero if necessary . ", "input": " PlaceHolder placeHolder \n\n String add \n int index \n String calculate", "output": ""}, {"instruction": "Generate java code\nadd a node to the closed list ", "input": " Node parent \n float cost \n Array closed \n SortedList open \n float heuristic \n int maxSearchDistance \n Node[][] nodes \n boolean allowDiagMovement \n int depth \n int x \n Array list \n int y \n TileBasedMap map \n\n void add \n Node getFirstInOpen \n boolean inOpenList \n void clear \n boolean inClosedList \n void removeFromClosed \n int compareTo \n void addToOpen \n void remove \n boolean contains \n boolean isValidLocation \n float getMovementCost \n int size \n float getHeuristicCost \n int setParent \n Path findPath \n void removeFromOpen \n Object first", "output": ""}, {"instruction": "Generate java code\nsleeps for the given number of milliseconds . ", "input": " String ALPHANUM \n Random RANDOM \n Logger LOG \n\n T createNewClassInstance \n boolean isUfsObjectStorage \n String listToString \n String randomString \n String argsToString \n String stripPrefixIfPresent \n String[] toStringArray \n List<String> getUnixGroups \n long getCurrentMs \n String getPrimaryGroupName \n String stripSuffixIfPresent \n String getValueFromStaticMapping \n void warmUpLoop \n void waitFor \n List<String> getGroups \n byte[] randomBytes", "output": ""}, {"instruction": "Generate java code\nread a writable from a byte array . ", "input": " String NULL \n\n void writeStr \n byte[] toByteArray \n String readStr", "output": ""}, {"instruction": "Generate java code\ncreate a three-component configuration key . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n String getString \n String getString \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n void setString \n boolean load \n boolean load \n boolean load \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\ndispose all images in cache and clean the cache . ", "input": " int _imageCacheCapacity \n String _baseURL \n LinkedHashMap _imageCache \n Device _device \n\n String getBaseURL \n ImageResource loadEmbeddedBase64ImageResource \n boolean isVisited \n CSSResource getCSSResource \n ImageResource createImageResource \n XMLResource getXMLResource \n void setBaseURL \n ImageResource getImageResource \n String resolveURI \n byte[] getBinaryResource \n InputStream getInputStream", "output": ""}, {"instruction": "Generate java code\ntest case for ossunderfilesystem #delete string , boolean . ", "input": " String BUCKET_PREFIX \n OSSClient mClient \n String DST \n String SRC \n OSSUnderFileSystem mOSSUnderFileSystem \n String PATH \n String BUCKET_NAME \n\n void before \n void deleteNonRecursiveOnServiceException \n void renameOnServiceException", "output": ""}, {"instruction": "Generate java code\nparse a string into a sourcefile ast node , applying substitutions . ", "input": " ExtensionInfo ext \n int EXPR \n int DECL \n Position pos \n int MEMB \n int STMT \n int TYPE \n int FILE \n\n TypeNode parseType \n TypeNode parseType \n ClassMember parseMember \n ClassMember parseMember \n QQParser parser \n Stmt parseStmt \n Stmt parseStmt \n ClassDecl parseDecl \n ClassDecl parseDecl \n Position type_position \n Node parse \n Lexer lexer \n Expr parseExpr \n Expr parseExpr", "output": ""}, {"instruction": "Generate java code\nhashes a key in bytebuffer to a bucket index in non-negative integer value . ", "input": " int mKeyCount \n int BUCKET_SIZE_BYTES \n ByteBuffer mBuf \n int INDEX_HASHER_SEED \n int FINGERPRINT_HASHER_SEED \n HashFunction FINGERPRINT_HASHER \n HashFunction INDEX_HASHER \n ByteBuffer mHashTableBuf \n int MAX_PROBES \n int mNumBuckets \n\n int keyCount \n Iterator<ByteBuffer> keyIterator \n int bucketOffset \n LinearProbingIndex createEmptyIndex \n LinearProbingIndex loadFromByteArray \n int byteCount \n ByteBuffer get \n byte fingerprintHash \n byte fingerprintHash \n ByteBuffer nextKey \n boolean put \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\nget the relative full path ", "input": " String ext \n Date addedDate \n int rating \n int previousPlayCounter \n Date ratingModifDate \n Date lastPlayed \n String relativeFullPath \n boolean updateRatingModifDate \n int idPath \n String filename \n boolean deleted \n float BPM \n String relativePath \n int idFile \n String sourceName \n int playCounter \n\n String getFormattedRatingModifDate \n void setIdPath \n void setAddedDate \n String getSourceName \n boolean equalsStats \n int getIdFile \n int compareTo \n void setFilename \n void setRelativePath \n int getPreviousPlayCounter \n boolean isDeleted \n int hashCode \n void setPlayCounter \n String getLastPlayedLocalTime \n void setBPM \n String getAddedDateLocalTime \n float getBPM \n void setIdFile \n Date getAddedDate \n String getExt \n Date getRatingModifDate \n void setLastPlayed \n void setRelativeFullPath \n void setPath \n void setSourceName \n String getFilename \n String getFormattedLastPlayed \n Date getLastPlayed \n boolean equals \n Object clone \n String toString \n void setUpdateRatingModifDate \n int getIdPath \n String getRelativePath \n void setRating \n int getPlayCounter \n String getFormattedAddedDate \n int getRating", "output": ""}, {"instruction": "Generate java code\ndoes any rule for the given language use type resolution ? ", "input": " List<RuleSet> ruleSets \n RuleChain ruleChain \n\n void apply \n void start \n boolean usesDFA \n Rule getRuleByName \n RuleSet[] getAllRuleSets \n boolean usesMetrics \n long getChecksum \n void addRuleSet \n int ruleCount \n boolean applies \n Iterator<RuleSet> getRuleSetsIterator \n void end \n void removeDysfunctionalRules \n Set<Rule> getAllRules", "output": ""}, {"instruction": "Generate java code\nsets the value of the build property . ", "input": " String executionEndDateTime \n String build \n String browser \n String projectName \n String executionStartDateTime \n String value \n String url \n String TotalDuration \n\n String getProjectName \n String getBuild \n String getExecutionStartDateTime \n void setExecutionEndDateTime \n String getExecutionEndDateTime \n void setUrl \n String getValue \n void setProjectName \n String getUrl \n String getTotalDuration \n void setValue \n void setTotalDuration \n void setBrowser \n void setExecutionStartDateTime \n String getBrowser", "output": ""}, {"instruction": "Generate java code\nrescales the image to ideal with and height ", "input": " PlaceHolder placeHolder \n\n Bitmap StringToBitMap \n void erase \n Bitmap getMorph \n boolean isGood \n Intent shareImage \n Bitmap decodeSampledBitmapFromResource \n String BitMapToString \n Bitmap rescaleThumb \n Bitmap rescaleThumb \n void fakeMove \n boolean hasBackground \n TextView createMessage \n Intent getEmail \n Uri getImageUri \n void switchDims \n int calculateInSampleSize \n boolean hasForeground \n int[] getDims", "output": ""}, {"instruction": "Generate java code\ngets the value of the given member as a jws algorithm , null if it does n't exist ", "input": " Gson gson \n Logger logger \n\n JsonElement getAsArray \n JsonElement getAsArray \n Map readMap \n Date getAsDate \n List<EncryptionMethod> getAsEncryptionMethodList \n Set readSet \n String getAsString \n EncryptionMethod getAsJweEncryptionMethod \n Set<String> getAsStringSet \n List<JWEAlgorithm> getAsJweAlgorithmList \n void writeNullSafeArray \n Long getAsLong \n Boolean getAsBoolean \n JWEAlgorithm getAsJweAlgorithm \n List<JWSAlgorithm> getAsJwsAlgorithmList \n List<String> getAsStringList", "output": ""}, {"instruction": "Generate java code\nconvert mnemonic word list to seed . ", "input": " String BIP39_ENGLISH_SHA256 \n ArrayList<String> wordList \n int PBKDF2_ROUNDS \n\n List<String> toMnemonic \n boolean[] bytesToBits \n byte[] toEntropy \n void check", "output": ""}, {"instruction": "Generate java code\nsets the value of the testdata property . ", "input": " String testData \n String method \n String filepath \n String step \n String stepResult \n String time \n\n void setMethod \n void setStepResult \n void setFilepath \n String getTime \n String getStep \n String getFilepath \n String getTestData \n String getMethod \n String getStepResult \n void setStep \n void setTime", "output": ""}, {"instruction": "Generate java code\nconnects to the turn server ", "input": " TcpTurnClient m_turnClient \n boolean m_controlling \n Logger m_log \n ByteBuffer m_encodedCandidates \n OfferAnswerListener m_offerAnswerListener \n\n void processOffer \n Collection<? extends IceCandidate> gatherCandidates \n void connectToCandidate \n InetAddress getPublicAdress \n void processRemoteCandidates \n void useRelay \n void closeTcp \n void closeUdp \n byte[] generateOffer \n void processAnswer \n void close \n byte[] generateAnswer", "output": ""}, {"instruction": "Generate java code\nrequest any amount of bitcoins probably a donation from user , with feedback from the app . result intent can be received by overriding android.app.activity #onactivityresult . result indicates either activity #result_ok or activity #result_canceled . in the success case , use #transactionhashfromresult intent to read the transaction hash from the intent.warning : a success indication is no guarantee ! to be on the safe side , you must drive your own bitcoin infrastructure and validate the transaction . ", "input": " int NANOCOINS_PER_COIN \n String INTENT_EXTRA_TRANSACTION_HASH \n String INTENT_EXTRA_TRANSACTION_HASH_OLD \n\n void request \n void request \n void transactionHashToResult \n void startForResult \n String transactionHashFromResult \n Intent makeIntent \n void redirectToDownload \n void start", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmbparser #setvelocity . ", "input": " String EXAMPLE \n RMBSentence rmb \n RMBSentence empty \n\n void testGetVelocity \n void testGetCrossTrackError \n void testArrivalStatus \n void testSetDestination \n void testSetBearing \n void testSetSteerToWithNull \n void testSetOriginId \n void testSetStatus \n void testConstructor \n void testGetBearing \n void testSetBearingWithNegativeValue \n void testSetSteerTo \n void testGetSteerTo \n void testGetOriginId \n void testSetVelocityWithNegativeValue \n void setUp \n void testGetStatus \n void testSetBearingWithValueGreaterThanAllowed \n void testGetRange \n void testSetRange \n void testGetDestination \n void testSetCrossTrackError", "output": ""}, {"instruction": "Generate java code\nwill implement more functions later ", "input": " RecyclerView.LayoutManager mManager \n boolean auto_disable_loadmore \n int page_now \n UltimateRecyclerView listview \n EASY noad \n ADMOB withad \n Runnable refresh_default \n onLoadMore loading_more \n boolean with_the_ad \n int max_pages \n int layoutLoadMoreResId \n int container_data_items \n\n void init \n boolean request_start \n BiAdAdapterSwitcher onEnableLoadmore \n void run \n void setMaxPages \n BiAdAdapterSwitcher EnableAutoDisableLoadMoreByMaxPages \n void load_more_data_at_zero \n void emptyViewControl \n void load_more_data \n BiAdAdapterSwitcher setCustomOnFresh \n View getV \n void removeALL \n void scrollToTop \n void notifyDataSetChanged \n void maximum_size \n void reset \n void insert_default \n void insert_default", "output": ""}, {"instruction": "Generate java code\ntests the blockstoremeta #getcapacitybytesontiers method . ", "input": " long COMMITTED_BLOCKS_NUM \n long TEST_SESSION_ID \n BlockStoreMeta mBlockStoreMeta \n BlockStoreMeta mBlockStoreMetaFull \n long TEST_BLOCK_SIZE \n BlockMetadataManager mMetadataManager \n TemporaryFolder mTestFolder \n\n void getUsedBytesOnTiers \n void before \n void getCapacityBytesOnDirs \n void getUsedBytes \n void getNumberOfBlocks \n void getCapacityBytes \n void getUsedBytesOnDirs \n void getBlockList", "output": ""}, {"instruction": "Generate java code\nget the exit code/status from the remote command - if available . be careful - not all server implementations return this value . it is generally a good idea to call this method only when all data from the remote side has been consumed see also the method . ", "input": " String x11FakeCookie \n boolean flag_x11_requested \n boolean flag_closed \n boolean flag_pty_requested \n SecureRandom rnd \n ChannelManager cm \n Channel cn \n boolean flag_execution_started \n\n void execCommand \n void requestDumbPTY \n void requestX11Forwarding \n void startSubSystem \n void startShell \n InputStream getStdout \n String getExitSignal \n void requestPTY \n void requestPTY \n int waitForCondition \n int waitUntilDataAvailable \n OutputStream getStdin \n void close \n InputStream getStderr", "output": ""}, {"instruction": "Generate java code\nhonor the nonproxyhosts property value if set . ", "input": " HTTPClientPolicy systemProxyConfiguration \n String HTTP_NON_PROXY_HOSTS \n String HTTP_PROXY_PORT \n String HTTP_PROXY_HOST \n\n Proxy createProxy \n Proxy createProxy \n HTTPClientPolicy createSystemProxyConfiguration \n Proxy getSystemProxy", "output": ""}, {"instruction": "Generate java code\ndeserialize the thrift object from a byte array . ", "input": " TProtocol protocol_ \n TMemoryInputTransport trans_ \n\n Long partialDeserializeI64 \n Byte partialDeserializeByte \n Integer partialDeserializeI32 \n Short partialDeserializeSetFieldIdInUnion \n ByteBuffer partialDeserializeByteArray \n Object partialDeserializeField \n Boolean partialDeserializeBool \n void partialDeserialize \n Double partialDeserializeDouble \n Short partialDeserializeI16 \n String partialDeserializeString \n void fromString \n TField locateField", "output": ""}, {"instruction": "Generate java code\nsend an error log message . ", "input": " String TAG_CONTENT_PRINT \n boolean sIsLogEnabled \n String sApplicationTag \n\n StackTraceElement getCurrentStackTraceElement \n String getTagContentPrint \n void d \n void d \n void d \n String getContent \n void i \n void i \n String getsApplicationTag \n void setsIsLogEnabled \n boolean issIsLogEnabled \n void trace \n void v \n void w \n void w \n String getContents \n void traceStack \n void traceStack \n void setsApplicationTag", "output": ""}, {"instruction": "Generate java code\nget the signature alias to use for this saml realm ", "input": " CallbackHandler callbackHandler \n Logger LOG \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n String callbackHandlerClass \n String signaturePropertiesFile \n String signatureAlias \n String issuer \n\n String getIssuer \n void setSignatureCrypto \n void setCallbackHandlerClass \n void setIssuer \n Crypto getSignatureCrypto \n CallbackHandler getCallbackHandler \n SignatureProperties getSignatureProperties \n void setSignatureAlias \n void setSignaturePropertiesFile \n void setSignatureProperties \n void setCallbackHandler", "output": ""}, {"instruction": "Generate java code\ntest method for notificationcontroller #handleevent org.osgi.service.event.event verifies that illegalargumentexception is thrown when event 's notification #notification_key_application property is empty . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n NotificationController notificationController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testDeregisterUserSessionWithNullServerSessonThrowsException \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle \n void testGetServerSessionByUserId \n void tearDown \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId \n void testRegisterUserSessionWithNullServerSessionThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\nformats a given keystroke into a string ", "input": " String CTRL_MODIFIER \n String ALT_MODIFIER \n String SHIFT_MODIFIER \n String MODIFIER_JOINER \n String ALT_GRAPH_MODIFIER \n String META_MODIFIER \n\n String getKeyText \n boolean isActionEvent \n String getModifiersText", "output": ""}, {"instruction": "Generate java code\nset the charset of the body of the request ", "input": " Map<String,String> headers \n String charset \n Verb verb \n ParameterList bodyParams \n String url \n byte[] bytePayload \n Long readTimeout \n ParameterList querystringParams \n boolean connectionKeepAlive \n Long connectTimeout \n String CONTENT_LENGTH \n String CONTENT_TYPE \n HttpURLConnection connection \n String payload \n String DEFAULT_CONTENT_TYPE \n\n void addHeaders \n String getSanitizedUrl \n void addBody \n void addHeader \n void setConnectionKeepAlive \n void setConnectTimeout \n byte[] getByteBodyContents \n Map<String,String> getHeaders \n ParameterList getQueryStringParams \n void setConnection \n void createConnection \n String getCharset \n void addBodyParameter \n String getUrl \n void setReadTimeout \n String getCompleteUrl \n Verb getVerb \n void addPayload \n void addPayload \n void addQuerystringParameter \n String toString \n Response doSend \n Response send \n String getBodyContents \n ParameterList getBodyParams", "output": ""}, {"instruction": "Generate java code\ncreate an unbound clientdetailsentity from the given json string . ", "input": " Logger logger \n JsonParser parser \n\n RegisteredClient parseRegistered \n RegisteredClient parseRegistered \n JsonObject serialize", "output": ""}, {"instruction": "Generate java code\nprovide the portid to the routerinterface 's builder . ", "input": " String subnetId \n String portId \n\n Builder subnetId \n Builder fromRouterInterface \n Builder toBuilder \n Objects.ToStringHelper string \n String getPortId \n RouterInterface build \n int hashCode \n boolean equals \n Builder builder \n String toString \n Builder portId \n String getSubnetId", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rteparser #isactiveroute . ", "input": " RTESentence rte \n String EXAMPLE \n RTESentence empty \n\n void testGetWaypointIds \n void testIsActiveRoute \n void testIsFirst \n void testGetSentenceIndex \n void testConstructor \n void testSetSentenceCountWithNegativeValue \n void testAddWaypointId \n void testGetSentenceCount \n void testSetWaypointIds \n void testSetRouteId \n void testIsWorkingRoute \n void testSetSentenceCount \n void testGetRouteId \n void testSetRouteTypeActive \n void setUp \n void testIsLast \n void testGetWaypointCount \n void testSetSentenceIndex \n void testSetSentenceIndexWithNegativeValue", "output": ""}, {"instruction": "Generate java code\nupdates the actions according to the current battle state . ", "input": " Array<Condition> conditions \n Array<Action> actions \n\n boolean evaluateConditions \n void read \n void setConditions \n void setActions \n Array<Action> getActions \n void write", "output": ""}, {"instruction": "Generate java code\nhashcode implementation to go with equals . ", "input": " NodeDetail testNodeDetail \n String description \n boolean recoverable \n int id \n NodeDetail controlNodeDetail \n\n void appendDetailedRepresentation \n NodeDetail getTestNodeDetail \n NodeDetail getControlNodeDetail \n boolean equals \n boolean isRecoverable \n int getId \n String toString \n void appendBasicRepresentation \n String getDescription \n void setRecoverable", "output": ""}, {"instruction": "Generate java code\ncalculate the digest value of all data processed up until this point and convert the digest into a hexdigest object . ", "input": " String TOR_DIGEST256_ALGORITHM \n int TOR_DIGEST256_SIZE \n int TOR_DIGEST_SIZE \n MessageDigest digestInstance \n boolean isDigest256 \n String TOR_DIGEST_ALGORITHM \n\n MessageDigest createDigestInstance \n byte[] getDigestBytes \n void update \n void update \n void update \n byte[] peekDigest \n boolean isDigest256", "output": ""}, {"instruction": "Generate java code\ndetermine which test buckets apply to a particular client . ", "input": " Map<String,TestChooser<?>> testChoosers \n ProctorLoadResult loadResult \n long INT_RANGE \n Proctor EMPTY \n Map<String,ConsumableTestDefinition> testDefinitions \n TestMatrixArtifact matrix \n\n void appendTestMatrix \n void appendTestMatrixFiltered \n TestMatrixArtifact getArtifact \n ProctorLoadResult getLoadResult \n void appendTests \n void appendTests \n Proctor createEmptyProctor \n ConsumableTestDefinition getTestDefinition \n Proctor construct \n void appendAllTests \n void appendTestsNameFiltered", "output": ""}, {"instruction": "Generate java code\nparse a string into a date according to the iso 8601specification 2000-12-31t11:59:00z . ", "input": " Locale LOCALE \n TimeZone TIMEZONE \n String FORMAT_822 \n String FORMAT_ISO \n\n String formatIsoDate \n Date parseHttpDate \n Long parseNumber \n String formatHttpDate \n int findFirst \n String formatNumber \n String[] splitOnce \n String[] splitAll", "output": ""}, {"instruction": "Generate java code\nreturns if result is ko ", "input": " int errorLevelFolder \n String tooltip \n int errorLevel \n String value \n\n void restoreFolderErrorLevel \n void setKO \n void setKO \n boolean isWarning \n void setErrorLevel \n int getErrorLevel \n String analyseTrack \n String analyseTrackYear \n String formatNumber \n String colorField \n String colorField \n String getValue \n String analyseTrackComment \n String analyseTrackBpm \n int hashCode \n void setValue \n boolean equals \n String getDisplayToolTip \n void setOK \n String toString \n boolean isNotValid \n Color getDisplayColor \n String analyseTrackNumber \n String getDisplayText \n void setWarning \n void setWarning \n String analyseTrackString", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.ttmparser #settimetocpa . ", "input": " String EXAMPLE \n TTMParser ttm \n TTMParser empty \n\n void testGetAcquisitionType \n void testGetDistance \n void testSetStatus \n void testSetNumber \n void testSetDistanceOfCPA \n void testConstructor \n void testGetTime \n void testSetCourse \n void testGetName \n void testGetNumber \n void testGetDistanceOfCPA \n void setUp \n void testGetCourse \n void testSetReferenceTrue \n void testSetReferenceFalse \n void testSetAcquisitionType \n void testSetBearing \n void testGetBearing \n void testSetDistance \n void testSetTime \n void testGetSpeed \n void testGetStatus \n void testGetTimeToCPA \n void testSetName \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nan efficient copy between two channels with a fixed-size buffer . ", "input": " Method sCleanerCleanMethod \n Method sByteBufferCleanerMethod \n Logger LOG \n\n boolean equalConstantByteArray \n ByteBuffer getIncreasingByteBuffer \n ByteBuffer getIncreasingByteBuffer \n void cleanDirectBuffer \n ByteBuffer sliceByteBuffer \n ByteBuffer sliceByteBuffer \n int byteToInt \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteBuffer \n byte[] getIncreasingByteArray \n byte[] getIncreasingByteArray \n void writeBufferToFile \n List<ByteBuffer> cloneByteBufferList \n ByteBuffer cloneByteBuffer \n byte[] newByteArrayFromByteBuffer \n void putIntByteBuffer \n ByteBuffer generateNewByteBufferFromThriftRPCResults \n ByteBuffer getIncreasingIntBuffer \n ByteBuffer getIncreasingIntBuffer", "output": ""}, {"instruction": "Generate java code\ngets the attributevalue attribute of the standardattributeresolver object ", "input": " NamespaceHandler nsh \n UserInterface ui \n UserAgentCallback uac \n\n String getClass \n boolean isLink \n boolean isVisited \n boolean isHover \n boolean isFocus \n String getLang \n String getID \n String getNonCssStyling \n String getElementStyling \n boolean isActive", "output": ""}, {"instruction": "Generate java code\nset the value of album ", "input": " FolderInfo.CheckedFlag checkedFlag \n String artist \n String album \n double rating \n int errorLevel \n\n FolderInfo.CheckedFlag getCheckedFlag \n void setArtist \n int getErrorLevel \n void setErrorLevel \n String getArtist \n String toString \n void setCheckedFlag \n void setRating \n String getAlbum \n double getRating", "output": ""}, {"instruction": "Generate java code\nreturns the cipher suites filter ", "input": " String certAlias \n SecureRandom secureRandom \n String protocol \n String provider \n CertificateConstraintsType certConstraints \n List<String> ciphersuites \n KeyManager[] keyManagers \n FiltersType cipherSuiteFilters \n TrustManager[] trustManagers \n\n void setCertConstraints \n void setCipherSuites \n void setSecureSocketProtocol \n void setCertAlias \n CertificateConstraintsType getCertConstraints \n SecureRandom getSecureRandom \n void setJsseProvider \n String getCertAlias \n void setKeyManagers \n String getSecureSocketProtocol \n void setTrustManagers \n void setSecureRandom \n String getJsseProvider \n TrustManager[] getTrustManagers \n KeyManager[] getKeyManagers \n void setCipherSuitesFilter \n List<String> getCipherSuites", "output": ""}, {"instruction": "Generate java code\nmethod to obtain the only instance of this class ", "input": " double maxMemory \n MemoryLogger instance \n\n void checkMemory \n double getMaxMemory \n void reset", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.vtgparser #setmagneticcourse double . ", "input": " String EXAMPLE \n VTGSentence vtg \n VTGSentence empty \n\n void testGetMagneticCourse \n void testGetSpeedKmh \n void testGetSpeedKnots \n void testSetMagneticCourseWithValueGreaterThanAllowed \n void testSetSpeedKmhWithNegativeValue \n void testSetSpeedKnotsWithNegativeValue \n void testConstructor \n void testGetTrueCourse \n void testSetSpeedKmh \n void testSetMagneticCourse \n void testSetMode \n void testSetModeWhenOmitted \n void testSetTrueCourseWithNegativeValue \n void setUp \n void testSetSpeedKnots \n void testSetTrueCourse \n void testGetMode \n void testSetTrueCourseWithValueGreaterThanAllowed", "output": ""}, {"instruction": "Generate java code\nit might seem odd to return ` true ' if a property == false , but it is required sometimes . ", "input": " PlaceHolder placeHolder \n\n Long getLong \n boolean isTrue \n boolean isTrue \n Integer getInteger", "output": ""}, {"instruction": "Generate java code\ninitialize testclass ", "input": " String graphName \n String user \n Endpoint ep \n\n String createSelectQuery \n String createAutoMergeQuery \n String createCommonMergeQuery \n void testCommonMerge \n String createMergeWithQuery \n void setUp \n void testManualMerge \n void testAutoMerge \n void testCreatedGraph \n String createManualMergeQuery", "output": ""}, {"instruction": "Generate java code\nunwraps the string and returns it . ", "input": " String val \n\n int hashCode \n boolean equals \n String toString \n int compareTo", "output": ""}, {"instruction": "Generate java code\nset new property value ", "input": " boolean _alwaysSave \n String DEFAULT_VALUE \n Properties DEFAULT_PROPS \n Properties PROPS \n String KEY \n\n void loadValue \n void revertToDefault \n String getKey \n boolean isDefault \n void reload \n Setting setAlwaysSave \n String getValueAsString \n boolean shouldAlwaysSave", "output": ""}, {"instruction": "Generate java code\nreturn the identifier for this fig which is the encloser of the given fig ", "input": " PlaceHolder placeHolder \n\n List getContents \n String getId \n List getEdges \n void getEdges \n String getVisibility", "output": ""}, {"instruction": "Generate java code\nreturns a hash of the given files contents . reads the file fully into memory before hashing so only use with small files . ", "input": " Sha256Hash ZERO_HASH \n byte[] bytes \n\n Sha256Hash createDouble \n int hashCode \n boolean equals \n Sha256Hash create \n BigInteger toBigInteger \n String toString \n Sha256Hash duplicate \n int compareTo \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\nchecks if the given connection 's driver is mysql database driver ", "input": " PlaceHolder placeHolder \n\n Column column \n boolean isPrimaryKey \n String generateDropTableScript \n String generateCreateTableScript \n boolean isHsqlConnection \n String asLabel \n String generateCreateIndexScript \n Class<?> getType \n String name \n String getDbDataType \n int getLength \n Table table \n String columnName", "output": ""}, {"instruction": "Generate java code\nreturn the public interface for uuid service . ", "input": " String systemId \n String startTime \n String CONF_PREFIX \n AtomicLong counter \n char type \n String CONF_GENERATOR \n\n void init \n String generateChildId \n char getType \n String longPadding \n String generateId \n void destroy \n String getId \n String getChildName", "output": ""}, {"instruction": "Generate java code\nmethod calling to use the direct connection . ", "input": " BufferedReader reader \n URLConnection urlConn \n String URI \n\n URLConnection getURLConnection \n BufferedReader getBufferedReader \n void ProxyConnect", "output": ""}, {"instruction": "Generate java code\nparse sql formatted utc datetime ", "input": " String pattern \n\n String formatUTCtoSqlLocal \n String getCurrentUtcSql \n String formatUTC \n String formatUTC \n String getCurrentLocal \n String getPattern \n Date parseUTC \n String formatUTCtoSqlUTC", "output": ""}, {"instruction": "Generate java code\nsets the name of transducer . ", "input": " String name \n String units \n String type \n Double value \n\n double getValue \n String getName \n String getType \n void setValue \n String getUnits \n boolean isEmpty \n void setType \n void setUnits", "output": ""}, {"instruction": "Generate java code\ntests to ensure s3aoutputstream #write byte calls the underlying output stream . ", "input": " String BUCKET_NAME \n BufferedOutputStream mLocalOutputStream \n String KEY \n File mFile \n S3AOutputStream mStream \n\n void writeByte \n void writeByteArrayWithRange \n void flush \n void before \n void close", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.sentencefactory #createparser java.lang.string . ", "input": " SentenceFactory instance \n\n void testRegisterInvalidParser \n void testHasParser \n void testUnregisterParser \n void testListParsers \n void testCreateParserWithNull \n void testCreateEmptyParserWithSentenceIdStr \n void testCreateEmptyCustomParser \n void testCreateParserWithUnregistered \n void testCreateEmptyParserWithSentenceId \n void testCreateCustomParser \n void testRegisterParserWithAlternativeBeginChar \n void testSupportedTypesRegistered \n void testCreateParserWithRandom \n void setUp \n void testGetInstance \n void testCreateParserWithEmptyString", "output": ""}, {"instruction": "Generate java code\nadd listener . ", "input": " List<StateListener> listeners \n Rotation DEFAULT_ROTATION \n Rotation rotation \n double DEFAULT_POWER \n double DEFAULT_DIRECTION \n String DEFAULT_TEXT \n String text \n double power \n double direction \n\n double getPower \n double getDirection \n String getText \n Rotation getRotation \n void reset \n void setPower \n void removeListener \n void setRotation \n void setDirection \n void setText", "output": ""}, {"instruction": "Generate java code\nremove the project . ", "input": " ClienteConecta clienteEnvia \n Logger LOG \n ProjectManager instance \n Action saveAction \n String SAVE_STATE_PROPERTY_NAME \n String NO_PROJECT \n boolean creatingCurrentProject \n EventListenerList listenerList \n String CURRENT_PROJECT_PROPERTY_NAME \n Project currentProject \n PropertyChangeEvent event \n\n void setSaveAction \n ProjectManager getManager \n Project getCurrentProject \n void firePropertyChanged \n void createDefaultDiagrams \n boolean isSaveActionEnabled \n void setSaveEnabled \n void setCurrentProject \n Project makeEmptyProject \n Project makeEmptyProject \n void removePropertyChangeListener \n void addPropertyChangeListener \n Object execute", "output": ""}, {"instruction": "Generate java code\ncheck for read timed out ", "input": " long duration \n String content \n\n void setDuration \n boolean isConnectionReset \n void setContent \n long getDuration \n boolean isSOAPFault \n String getContent \n boolean isEmptyResponse", "output": ""}, {"instruction": "Generate java code\nadds a replacedelement containing an image to a cache of images for quick lookup . ", "input": " Element elem \n RepaintListener repaintListener \n ImageResourceLoader imageResourceLoader \n int width \n FormSubmissionListener formSubmissionListener \n Map imageComponents \n String uri \n LinkedHashMap forms \n int height \n\n Element getParentForm \n ReplacedElement replaceImage \n XhtmlForm getForm \n void addForm \n ReplacedElement newIrreplaceableImageElement \n int hashCode \n void setFormSubmissionListener \n ReplacedElement lookupImageReplacedElement \n ReplacedElement lookupImageReplacedElement \n boolean equals \n ReplacedElement createReplacedElement \n void reset \n void remove", "output": ""}, {"instruction": "Generate java code\nsets the error msg . ", "input": " Long expectedDataUnitId \n Long seqNo \n Long dataSetId \n Long dataUnitId \n String expectedValue \n String actualValue \n Long expectedDataSetId \n String errorCode \n Long testId \n String failedAttributeName \n String srcFileName \n String errorMsg \n\n void setExpectedValue \n String getExpectedValue \n Long getExpectedDataSetId \n void setExpectedDataSetId \n void setActualValue \n Long getDataSetId \n void setSrcFileName \n Long getExpectedDataUnitId \n void setExpectedDataUnitId \n String getSrcFileName \n Long getSeqNo \n String getFailedAttributeName \n void setTestId \n void setFailedAttributeName \n Long getTestId \n void setErrorCode \n String getActualValue \n Long getDataUnitId \n void setSeqNo \n String getErrorCode \n void setDataUnitId \n void setDataSetId \n String toString \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nreturns the list of possible federation tokens for this gitblit instance . ", "input": " Map<String,FederationModel> federationPullResults \n INotificationManager notificationManager \n IStoredSettings settings \n List<FederationModel> federationRegistrations \n IRuntimeManager runtimeManager \n Logger logger \n IRepositoryManager repositoryManager \n\n boolean deletePendingFederationProposal \n UserModel authenticate \n FederationModel getFederationRegistration \n UserModel getFederationUser \n boolean acknowledgeFederationStatus \n List<FederationProposal> getPendingFederationProposals \n List<FederationModel> getFederationResultRegistrations \n FederationManager start \n boolean canFederate \n FederationProposal getPendingFederationProposal \n Map<String,RepositoryModel> getRepositories \n FederationManager stop \n List<FederationSet> getFederationSets \n File getProposalsFolder \n boolean submitFederationProposal \n String getFederationToken \n String getFederationToken \n FederationProposal createFederationProposal \n List<FederationModel> getFederationRegistrations \n boolean validateFederationRequest", "output": ""}, {"instruction": "Generate java code\nsave a contact ", "input": " String USER_COLUMN_NAME \n String COLUMN_NAME_ID \n String USER_COLUMN_NICK \n String COLUMN_NAME_AVATAR \n String USER_COLUMN_AVATAR_ID \n String USER_COLUMN_AVATA_PATH \n String PREF_TABLE_NAME \n String USER_COLUMN_AVATAR_SUFFIX \n String COLUMN_NAME_DISABLED_IDS \n String ROBOT_COLUMN_NAME_NICK \n String ROBOT_COLUMN_NAME_AVATAR \n String USER_TABLE_NAME \n String USER_COLUMN_AVATAR_LASTAUPDATE_TIME \n String COLUMN_NAME_NICK \n String USER_COLUMN_AVATAR_TYPE \n String TABLE_NAME \n String ROBOT_TABLE_NAME \n String ROBOT_COLUMN_NAME_ID \n String COLUMN_NAME_DISABLED_GROUPS \n\n List<String> getDisabledIds \n User getUser \n boolean updateUser \n void saveContactList \n Map<String,EaseUser> getContactList \n void saveRobotUser \n void saveAppContact \n Map<String,User> getAppContactList \n List<String> getDisabledGroups \n void setDisabledIds \n void deleteContact \n void setDisabledGroups \n void deleteAppContact \n void saveAppContactList \n Map<String,RobotUser> getRobotUser \n boolean saveUser", "output": ""}, {"instruction": "Generate java code\nfirst byte of a base58 encoded p2sh address . p2sh addresses are defined as part of bip0013 . ", "input": " int INTERVAL \n String ID_UNITTESTNET \n long MAX_COINS \n int p2shHeader \n int PROTOCOL_VERSION \n BigInteger maxTarget \n int TARGET_SPACING \n String[] dnsSeeds \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n String PAYMENT_PROTOCOL_ID_MAINNET \n int addressHeader \n Coin MAX_MONEY \n int bip32HeaderPriv \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n int bip32HeaderPub \n String ID_MAINNET \n long packetMagic \n byte[] SATOSHI_KEY \n Block genesisBlock \n String PAYMENT_PROTOCOL_ID_TESTNET \n int subsidyDecreaseBlockCount \n int port \n String ID_TESTNET \n Map<Integer,Sha256Hash> checkpoints \n int interval \n String ID_REGTEST \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n int getBip32HeaderPub \n int getBip32HeaderPriv \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n String getPaymentProtocolId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n boolean isCheckpoint \n int getInterval \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n BigInteger getMaxTarget \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n NetworkParameters fromPmtProtocolID", "output": ""}, {"instruction": "Generate java code\nget the y coordinate for the step at the given index ", "input": " Array<Step> steps \n int x \n int y \n\n int getX \n int getX \n boolean contains \n void prependStep \n int hashCode \n Step getStep \n boolean equals \n Array<Step> getSteps \n int getLength \n String toString \n void appendStep", "output": ""}, {"instruction": "Generate java code\nreturns default list of auth scheme names in their order of preference . ", "input": " Log log \n List<String> DEFAULT_SCHEME_PRIORITY \n\n AuthScheme selectScheme \n Map<String,Header> parseChallenges", "output": ""}, {"instruction": "Generate java code\ndestroy the log service . ", "input": " String USER \n int oozieLogRotation \n String OOZIE_LOG_DIR \n XLog log \n String GROUP \n boolean logOverWS \n String LOG4J_FILE \n String STARTUP_MESSAGE \n String LOG4J_RELOAD \n String log4jFileName \n String DEFAULT_RELOAD_INTERVAL \n String oozieLogName \n long interval \n boolean fromClasspath \n String INSTRUMENTATION_GROUP \n String oozieLogPath \n String DEFAULT_LOG4J_PROPERTIES \n\n void init \n Class<? extends Service> getInterface \n boolean getFromClasspath \n void extractInfoForLogWebService \n void instrument \n void streamLog \n String getLog4jProperties", "output": ""}, {"instruction": "Generate java code\nreturns ", "input": " GoogleMapsClientManaged mapsClient \n\n void start", "output": ""}, {"instruction": "Generate java code\nreturns the css name of this property , e.g. `` font-family '' . ", "input": " org.w3c.dom.css.CSSPrimitiveValue cssPrimitiveValue \n boolean identIsSet \n int origin \n int USER_NORMAL \n String _fingerprint \n String propName \n int AUTHOR_NORMAL \n boolean important \n int AUTHOR_IMPORTANT \n CSSName cssName \n int USER_AGENT \n int IMPORTANCE_AND_ORIGIN_COUNT \n int USER_IMPORTANT \n IdentValue _identVal \n\n org.w3c.dom.css.CSSPrimitiveValue getValue \n int getImportanceAndOrigin \n int getOrigin \n CSSName getCSSName \n String getDeclarationStandardText \n boolean isImportant \n String toString \n IdentValue asIdentValue \n String getFingerprint", "output": ""}, {"instruction": "Generate java code\ngive a chance for a binding to customize their message ", "input": " Bus bus \n List<Interceptor<? extends Message>> routingInterceptors \n ClassLoader loader \n String ENDPOINTS \n Set<Endpoint> endpoints \n List<Interceptor<? extends Message>> bindingInterceptors \n\n PhaseInterceptorChain createChain \n Set<Endpoint> getEndpoints \n void setExchangeProperties \n List<Interceptor<? extends Message>> getRoutingInterceptors \n void onMessage \n List<Interceptor<? extends Message>> getBindingInterceptors", "output": ""}, {"instruction": "Generate java code\nget the filters ", "input": " ActionType actionType \n String data \n ArrayList<String> suggestions \n String to \n Filters filters \n Creator<GameRequestContent> CREATOR \n String message \n String title \n String objectId \n\n ActionType getActionType \n Builder readFrom \n Builder readFrom \n Builder setData \n String getMessage \n GameRequestContent[] newArray \n Builder setTitle \n String getTo \n GameRequestContent createFromParcel \n Builder setObjectId \n Builder setMessage \n int describeContents \n String getObjectId \n ArrayList<String> getSuggestions \n String getTitle \n Builder setActionType \n GameRequestContent build \n Builder setFilters \n Builder setTo \n Builder setSuggestions \n void writeToParcel \n String getData", "output": ""}, {"instruction": "Generate java code\nevaluate the result of executing the specified xpath syntax select expression on the specified document ", "input": " JAXPXPathEngine engine \n List<Node> l \n\n Node item \n void setNamespaceContext \n NodeList getMatchingNodes \n int getLength", "output": ""}, {"instruction": "Generate java code\nclears all connections but keeps location position informations . ", "input": " Hashtable<String,Point2D> locationPositions \n LabeledGraph<String,Double> links \n\n Double getDistance \n void clear \n String randomlyGenerateDestination \n void setPosition \n void addBidirectionalLink \n void removeUnidirectionalLink \n Point2D getPosition \n void removeBidirectionalLink \n boolean isLocation \n List<String> getLocations \n void addUnidirectionalLink \n List<String> getLocationsLinkedTo \n void setDistAndDirToRefLocation", "output": ""}, {"instruction": "Generate java code\nresolves serialized instance of enumeration value . ", "input": " java.util.List typeName \n ChangeableKindEnum CK_ADD_ONLY \n ChangeableKindEnum CK_CHANGEABLE \n java.lang.String literalName \n ChangeableKindEnum CK_FROZEN \n\n ChangeableKind forName \n java.util.List refTypeName \n int hashCode \n boolean equals \n java.lang.String toString", "output": ""}, {"instruction": "Generate java code\nadd a difference group . if the difference group identifier already exists the old difference group will be overwritten . ", "input": " HashMap<String,DifferenceGroup> differenceGroups \n\n HashMap<String,DifferenceGroup> getDifferenceGroups \n void removeDifferenceGroup \n void clear \n void setDifferenceGroups", "output": ""}, {"instruction": "Generate java code\narray begin . ", "input": " Writer mWriter \n String[] CONTROL_CHAR_MAP \n byte ARRAY \n byte OBJECT_VALUE \n int itemCount \n byte type \n byte UNKNOWN \n byte OBJECT \n State mState \n Stack<State> mStack \n\n JSONWriter valueBoolean \n JSONWriter valueNull \n JSONWriter objectItem \n void beforeValue \n JSONWriter objectBegin \n JSONWriter objectEnd \n JSONWriter valueInt \n JSONWriter arrayEnd \n JSONWriter valueFloat \n JSONWriter valueString \n JSONWriter valueLong \n JSONWriter valueDouble \n String escape \n void beforeObjectItem", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gsaparser #gethorizontaldop . ", "input": " GSASentence instance \n String EXAMPLE \n GSASentence empty \n\n void testGetFixStatus \n void testSetFixStatus \n void testGetPositionDOP \n void testGetSatelliteIds \n void testConstructor \n void testSetPositionDOP \n void testGetVerticalDOP \n void testSetFaaMode \n void testSetHorizontalDOP \n void setUp \n void testGetFaaMode \n void testSetVerticalDOP \n void testSetSatelliteIds", "output": ""}, {"instruction": "Generate java code\ncheck that no key is entered twice ", "input": " String[][] SUPPORTEDLANGUAGES \n\n void checkContainsAllFrom \n boolean bundleContains \n void checkAllKeysAreInFrom \n List<Locale> getModifiedSupportedLanguages \n void checkResourceBundle \n void checkResourceBundle \n void checkAllKeysFromAreIn", "output": ""}, {"instruction": "Generate java code\nget application log path . used to backup database files also ", "input": " String appPath \n Keys keys \n Machine machine \n String logPath \n Options options \n HashMap<Integer,Playlist> playlists \n DefaultListModel genreListModel \n Logger logger \n DbConnJaMuz db \n ArrayList<String> tags \n\n void logConfig \n boolean getCurrentMachine \n boolean createLog \n Proxy getProxy \n void readTags \n List<Playlist> getPlaylistsVisible \n void readGenres \n boolean setProxy \n boolean connectDatabase \n Playlist getPlaylist \n boolean readPlaylists \n Logger getLogger \n ArrayList<String> getTags \n boolean configure \n Options getKeys \n File getFile \n DbConnJaMuz getDb \n Machine getMachine \n DefaultListModel getGenreListModel \n DefaultHttpClient getHttpClient \n Options getOptions \n List<String> getGenres \n List<Playlist> getPlaylists", "output": ""}, {"instruction": "Generate java code\ndecode the hex encoded string data writing it to the given output stream , whitespace characters will be ignored . ", "input": " Encoder encoder \n\n byte[] encode \n byte[] encode \n int encode \n int encode", "output": ""}, {"instruction": "Generate java code\nit might seem odd to return ` true ' if a property == false , but it is required sometimes . returns false if a value is either the string `` false '' regardless of case or boolean.false . ", "input": " PlaceHolder placeHolder \n\n Long getLong \n boolean isTrue \n boolean isTrue \n Integer getInteger", "output": ""}, {"instruction": "Generate java code\nsize of the set ", "input": " HashMap<String,symbol> _all \n\n boolean add \n boolean add \n Iterator<symbol> iterator \n boolean contains \n void not_null \n int hashCode \n boolean is_superset_of \n boolean equals \n boolean equals \n boolean is_subset_of \n String toString \n void remove \n void remove", "output": ""}, {"instruction": "Generate java code\nflushes the events from the datastore . ", "input": " boolean run \n ArrayList<ServerSocket> serverSockets \n String savePath \n boolean disconnectedOnPurpose \n ServerSocket serverSocket \n int dataBufSize \n int eventBufSize \n FieldtripBufferMonitor monitor \n int nextClientID \n int eventBufSize \n int serverPort \n int portNumber \n int dataBufSize \n int serverPort \n ArrayList<ConnectionThread> threads \n DataModel dataStore \n int logging \n BufferServer buffer \n\n void Start \n void Start \n void Start \n void Start \n void Start \n void Start \n void usage \n void listAllServerSockets \n void BufferServerStart \n void run \n void run \n void flushSamples \n void closeConnection \n void removeConnection \n void cleanup \n void addMonitor \n void removeAllServerSockets \n boolean putHeader \n void flushHeader \n void stopBuffer", "output": ""}, {"instruction": "Generate java code\nobtains the thread , if there is one . ", "input": " boolean aborted \n RouteSpecificPool pool \n Thread waiter \n Condition cond \n\n Condition getCondition \n RouteSpecificPool getPool \n void wakeup \n boolean await \n void interrupt", "output": ""}, {"instruction": "Generate java code\ninput stream management not safe ", "input": " PlaceHolder placeHolder \n\n void returnHttpInputStream \n String getPageContent \n InputStream getResourceInputStream \n String getHttpInputString \n InputStream getContentInputStream \n InputStream getHttpGETInputStream \n InputStream getHttpPOSTInputStream", "output": ""}, {"instruction": "Generate java code\ntests the constructor with a negative offset . ", "input": " long OFFSET \n long TEMP_UFS_FILE_ID \n ByteBuf mBuffer \n long LENGTH \n\n void encodedLength \n void invalidLength \n void assertInvalid \n void encodeDecode \n void before \n void encodeDecodeData \n void validLength \n void getPayloadDataBuffer \n void assertValid \n void assertValid \n void validate", "output": ""}, {"instruction": "Generate java code\nreturns fully qualified name of the enumeration type . ", "input": " AggregationKindEnum AK_NONE \n java.util.List typeName \n AggregationKindEnum AK_COMPOSITE \n AggregationKindEnum AK_AGGREGATE \n java.lang.String literalName \n\n java.lang.Object readResolve \n AggregationKind forName \n int hashCode \n boolean equals \n java.lang.String toString", "output": ""}, {"instruction": "Generate java code\nreturns a bufferedimage using the specified width and height . by default this returns an image compatible with the screen if not in `` headless '' mode formatted for rgb . ", "input": " LayoutContext layoutContext \n String sourceDocument \n SharedContext sharedContext \n int DEFAULT_DOTS_PER_PIXEL \n Java2DOutputDevice outputDevice \n Map renderingHints \n int NO_HEIGHT \n boolean rendered \n Box root \n float dotsPerPoint \n int width \n Document doc \n int DEFAULT_HEIGHT \n String sourceDocumentBase \n int DEFAULT_DOTS_PER_POINT \n int height \n\n Document loadDocument \n void init \n boolean isHover \n LayoutContext getLayoutContext \n boolean isActive \n void layout \n void setDocument \n SharedContext newSharedContext \n boolean isFocus \n void setRenderingHints \n SharedContext getSharedContext \n Box render \n LayoutContext newLayoutContext", "output": ""}, {"instruction": "Generate java code\ncreate a temporary directory . ", "input": " Logger LOG \n\n void act \n void traverseDir \n Collection<SourceUnit> readAllFiles \n Collection<String> readFileNames \n void deleteDir", "output": ""}, {"instruction": "Generate java code\nsets the fetcher start time stamp . ", "input": " Date lastModifiedTimeStamp \n Long feedId \n String createdBy \n Date fetcherStartTimeStamp \n Date createTimeStamp \n Long testId \n Long runId \n Date fetcherEndTimeStamp \n List<TestResultDetailsDTO> regTestResultDetailsLst \n OutcomeType outcome \n RunStatusType runStatus \n String errorMsg \n\n void setLastModifiedTimeStamp \n Date getFetcherEndTimeStamp \n void setFeedId \n Date getLastModifiedTimeStamp \n OutcomeType getOutcome \n Long getRunId \n List<TestResultDetailsDTO> getRegTestResultDetailsLst \n Long getFeedId \n void setTestId \n Long getTestId \n Date getFetcherStartTimeStamp \n void setRunId \n void setRegTestResultDetailsLst \n void setErrorMsg \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n RunStatusType getRunStatus \n Date getCreateTimeStamp \n void setOutcome \n String toString \n String getCreatedBy \n String getErrorMsg \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\nreturns the naive similarity score . ", "input": " float score \n int mSetFragmentsCount \n int mSetFoundFragments \n NumberFormat f \n String documentName \n int setFragmentsCount \n int setFoundFragments \n\n int getSetFragmentsCount \n float getNaiveScoreMSet \n int getMSetFragmentsCount \n int getMSetFoundFragments \n String toString \n int compareTo \n String getDocumentName \n float getScore \n int getSetFoundFragments", "output": ""}, {"instruction": "Generate java code\nreturn the vertical position of this ball ", "input": " int xPosition \n boolean dirArriba \n Canvas canvas \n int ySpeed \n int ballDegradation \n Color color \n int diameter \n boolean dirIzquierda \n int yPosition \n int groundPosition \n int GRAVITY \n Ellipse2D.Double circle \n\n void erase \n void move \n int getXPosition \n void draw", "output": ""}, {"instruction": "Generate java code\nset the id of satellite vehicle , for example `` 05 '' . ", "input": " int elevation \n int noise \n int azimuth \n String id \n\n int getAzimuth \n void setElevation \n void setNoise \n String getId \n int getNoise \n int getElevation \n void setAzimuth", "output": ""}, {"instruction": "Generate java code\nchecks where the key exists in heap or not ", "input": " Map<T,Integer> nodePosition \n List<Node> allNodes \n int weight \n T key \n\n void add \n T min \n void printPositionMap \n void swap \n void updatePositionMap \n Integer getWeight \n Node extractMinNode \n void printHeap \n void main \n T extractMin \n void decrease \n boolean empty", "output": ""}, {"instruction": "Generate java code\nextracts the sent-by host from a via header . ", "input": " Logger LOG \n\n URI extractUri \n URI extractUri \n String extractValue \n String extractValue \n List<SipHeaderValue> createValues \n String extractCSeqMethod \n int extractContentLength \n Map<String,String> extractHeaderParams \n Map<String,SipHeader> convertHeaders \n int extractCSeqNumber \n String toParamString \n InetSocketAddress extractNextHopFromVia \n String extractName \n String extractName \n URI extractUriFromRequestLine", "output": ""}, {"instruction": "Generate java code\ngets the value of the elem2 property . ", "input": " String elem2 \n String elem1 \n int elem3 \n\n int getElem3 \n String getElem1 \n void setElem2 \n void setElem1 \n void setElem3", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gllparser #settime time . ", "input": " GLLParser instance \n String EXAMPLE \n GLLParser empty \n\n void testSetPositionWithZeroValues \n void testGetPosition \n void testSetDataStatus \n void testSetPositionWithNonZeroValues \n void setUp \n void testGetDataStatus \n void testConstructor \n void testGetTime", "output": ""}, {"instruction": "Generate java code\nreturns whether the checksum held in a byte buffer holding a rudp segment is correct . ", "input": " PlaceHolder placeHolder \n\n RudpConnectionId toId \n byte safeGet \n UInt getChecksum \n UInt getChecksum \n RudpListeningConnectionId toListeningId", "output": ""}, {"instruction": "Generate java code\nrecebe um grafo e retorna uma list com os seus vertices ordenados . ", "input": " String VERTICES_FORMAT_REGEX \n String ARESTAS_FORMAT_REGEX \n String ARESTAS_PESO_FORMAT_REGEX \n String EXTRACT_ARESTAS_PESO_REGEX \n String EXTRACT_ARESTAS_REGEX \n\n void carregarArestas \n List<Aresta> obterArestasAdjacentes \n Grafo criarGrafo \n Grafo criarGrafo \n void carregarVertices", "output": ""}, {"instruction": "Generate java code\nsets the equipped item of the ai ", "input": " EntityMobWithInventory mob \n World world \n int itemQuantity \n Item itemDropped \n int range \n BlockPos nextBlock \n\n boolean reachedBlock \n void storeItemDroppedDetails \n boolean isCorrectBlock \n void obtainItems \n double distToNearestBlock \n void moveToBlock \n void nextStep \n BlockPos getNextBlock", "output": ""}, {"instruction": "Generate java code\nsets the liststatusoptions #mloadmetadatatype . ", "input": " LoadMetadataType mLoadMetadataType \n\n ListStatusOptions defaults \n int hashCode \n boolean equals \n String toString \n LoadMetadataType getLoadMetadataType", "output": ""}, {"instruction": "Generate java code\nget plugin by its name ", "input": " SortedUniqueList<AbstractPlugin> plugins \n long serialVersionUID \n\n boolean add \n boolean removeByIndex \n boolean contains \n Iterator<AbstractPlugin> iterator \n boolean removeByName \n int size \n AbstractPlugin getByIndex \n void clear \n int indexOf \n boolean remove", "output": ""}, {"instruction": "Generate java code\nstart or stop the pass timer . ", "input": " long inclusive_time \n Goal goal \n long exclusive_time \n\n Goal goal \n void resetTimers \n long inclusiveTime \n String name \n long exclusiveTime \n boolean run \n String toString \n Lang lang", "output": ""}, {"instruction": "Generate java code\ntests that an exception is thrown in the blockmetadatamanagerview #getblockmeta long method when the block does not exist . ", "input": " int TEST_DIR \n long TEST_BLOCK_ID \n BlockMetadataManager mMetaManager \n ExpectedException mThrown \n TemporaryFolder mTestFolder \n int TEST_TIER_ORDINAL \n BlockMetadataManagerView mMetaManagerView \n long TEST_BLOCK_SIZE \n\n void getTierViews \n void getTierViewsBelow \n void getTierView \n void before \n void getTierNotExisting \n void getBlockMeta \n void sameTierViewsBelow \n void getAvailableBytes \n void assertSameTierView \n void sameTierView \n void isBlockPinnedOrLocked", "output": ""}, {"instruction": "Generate java code\napplies the default umask for newly created files to the mode bits . ", "input": " Mode mMode \n String mOwner \n Mode FILE_UMASK \n String mGroup \n\n Permission setOwnerFromThriftClient \n Permission defaults \n Permission applyUMask \n Permission setOwnerFromLoginModule \n int hashCode \n String getGroup \n boolean equals \n String toString \n Mode getMode \n String getOwner \n Permission applyDirectoryUMask", "output": ""}, {"instruction": "Generate java code\npercent-encode values according the rfc 3986 . the built-in java urlencoder does not encode according to the rfc , so we make the extra replacements . ", "input": " String awsSecretKey \n String awsAccessKeyId \n String associatetag \n SecretKeySpec secretKeySpec \n String HMAC_SHA256_ALGORITHM \n String REQUEST_METHOD \n String UTF8_CHARSET \n String endpoint \n String REQUEST_URI \n Mac mac \n\n Map<String,String> createParameterMap \n String hmac \n String sign \n String sign \n SignedRequestsHelper getInstance \n String canonicalize \n String timestamp", "output": ""}, {"instruction": "Generate java code\ncreates an empty file and its intermediate directories if necessary . ", "input": " Logger LOG \n\n void setLocalDirStickyBit \n void move \n short getLocalFileMode \n void changeLocalFileUser \n void delete \n String getLocalFileOwner \n void createStorageDirPath \n void changeLocalFileToFullPermission \n void changeLocalFileGroup \n String getLocalFileGroup \n void createDir \n boolean exists \n void createBlockPath \n void changeLocalFilePermission \n void deletePathRecursively", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #getmonth . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetCourse \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nsets the current working document . ", "input": " List<SignatureElement> sigList \n Document doc \n\n List<Payload> getPayloads \n void eval \n Logger log \n Document getDocument \n List<SignatureElement> getSignatureElements", "output": ""}, {"instruction": "Generate java code\ngets the value of the billto property . ", "input": " USAddress billTo \n String comment \n Items items \n XMLGregorianCalendar orderDate \n USAddress shipTo \n\n Items getItems \n USAddress getShipTo \n void setBillTo \n void setItems \n void setOrderDate \n void setComment \n XMLGregorianCalendar getOrderDate \n String getComment \n void setShipTo", "output": ""}, {"instruction": "Generate java code\ntests to ensure ioexception is thrown if httpurlconnection #getoutputstream throws anioexception . ", "input": " OutputStream mOutputStreamMock \n HttpURLConnection mHttpConMock \n ExpectedException mThrown \n\n void testCloseError \n void testCloseSuccess \n void before \n void testFlush \n void testWrite3 \n void testWrite1 \n void testWrite2", "output": ""}, {"instruction": "Generate java code\nget the secret ", "input": " int keySize \n byte[] entropyBytes \n Entropy clientEntropy \n byte[] secret \n boolean computedKey \n Logger LOG \n\n void createSymmetricKey \n boolean isComputedKey \n long getKeySize \n byte[] getEntropyBytes", "output": ""}, {"instruction": "Generate java code\nthe symbol we make the transition on . ", "input": " lalr_state _to_state \n lalr_transition _next \n symbol _on_symbol \n\n lalr_transition next \n String toString \n lalr_state to_state", "output": ""}, {"instruction": "Generate java code\nprocess the options method . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\ntwo decisions are considered to be equal if their names are equal . the priority is not considered . ", "input": " String name \n Decision UNSPEC \n int priority \n\n void setName \n String getName \n int hashCode \n int getPriority \n String toString \n void setPriority", "output": ""}, {"instruction": "Generate java code\nretrieves the addressing properties from the current message . ", "input": " PlaceHolder placeHolder \n\n RMProperties retrieveRMProperties \n void storeRMProperties \n boolean isServerSide \n ProtocolVariation getProtocolVariation \n void setProtocolVariation \n String getRMPropertiesKey \n boolean isRMProtocolMessage \n void storeMAPs \n String generateUUID", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getofferdetailsresponse.return.detailofferdata.products.product ", "input": " PlaceHolder placeHolder \n\n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos \n GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia \n GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData \n GetOfferDetailsResponse createGetOfferDetailsResponse \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem \n GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses \n GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "output": ""}, {"instruction": "Generate java code\ntest method for activitycontroller #deregisterusersession serversession , servermessage verifies that nullpointerexception is thrown when serversession is null . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n ActivityController acitivityController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testGetServerSessionByUserId \n void tearDown \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testRegisterUserSessionWithNullServerSessionThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\ndisconnects the network connection but does n't request the server to settle the channel first literally just unplugs the network socket and marks the stored channel state as inactive . ", "input": " SettableFuture<PaymentChannelClientConnection> channelOpenFuture \n ProtobufParser<Protos.TwoWayChannelMessage> wireParser \n PaymentChannelClient channelClient \n\n ListenableFuture<PaymentChannelClientConnection> getChannelOpenFuture \n void settle \n ListenableFuture<BigInteger> incrementPayment \n PaymentChannelClientState state", "output": ""}, {"instruction": "Generate java code\nimplementation of permissionevaluator . we do not support this method call . ", "input": " Log log \n\n Set<String> getGrantedAuthorities", "output": ""}, {"instruction": "Generate java code\nstart application with program arg - screenwidth = xx with xx the width in cm or - screensize = yy with yy measured diagonally in inch . ", "input": " JButton leftButton \n JButton zoomOutButton \n JButton upButton \n JButton downButton \n JToggleButton nightButton \n JButton zoomInButton \n JButton rightButton \n MapViewFrame frame \n\n void actionPerformed \n MapViewFrame getFrame \n void showFrame \n DefaultEntityRenderer createDayRenderer", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.ttmparser #getspeed . ", "input": " String EXAMPLE \n TTMParser ttm \n TTMParser empty \n\n void testGetAcquisitionType \n void testGetDistance \n void testSetStatus \n void testSetNumber \n void testSetDistanceOfCPA \n void testConstructor \n void testGetTime \n void testSetCourse \n void testGetName \n void testGetNumber \n void testGetDistanceOfCPA \n void setUp \n void testGetCourse \n void testSetReferenceTrue \n void testSetReferenceFalse \n void testSetAcquisitionType \n void testSetBearing \n void testGetBearing \n void testSetDistance \n void testSetTimeToCPA \n void testSetTime \n void testGetStatus \n void testGetTimeToCPA \n void testSetName \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\ntest of getcapabilities method , of class device . ", "input": " Device dev \n\n void testGetType \n void setUpClass \n void testGetDeviceName_0args \n void testAddToPane \n void testGetAddress \n void tearDownClass \n void tearDown \n void testGetDeviceNames \n void testGetDeviceBlock \n void testAddCapabilities \n void testToString \n void testGetImgName \n void testAddCapability \n void testGetDeviceName_Locale \n void setUp \n void testGetImage \n void testGetDeviceID \n void testGetCapabilityBlock \n void testRemoveCapability", "output": ""}, {"instruction": "Generate java code\nreturns the last of the given 2 positions i.e. if pos1 ends after pos2 , then last pos1 , pos2 = pos1 . returns null if the given 2 positions are not comparable . ", "input": " int endLine \n int UNKNOWN \n int endColumn \n int endOffset \n Position COMPILER_GENERATED \n int CALLER \n int offset \n boolean compilerGenerated \n int line \n int column \n int THIS_METHOD \n int END_UNUSED \n long serialVersionUID \n String path \n String file \n String info \n\n int endLine \n int endColumn \n int endOffset \n int offset \n int line \n int column \n Position truncateEnd \n Position endOf \n String path \n Position startOf \n String file \n boolean isComparable \n boolean isCompilerGenerated \n String toString \n void setInfo \n Position first \n Position compilerGenerated \n Position compilerGenerated \n Position compilerGenerated \n String nameAndLineString", "output": ""}, {"instruction": "Generate java code\nset the identifier corresponding to a transformed version of this token ", "input": " Date expires \n byte[] data \n String transformedTokenIdentifier \n Date created \n Element unattachedReference \n byte[] secret \n SecurityContext securityContext \n int tokenHash \n Element token \n Crypto crypto \n Principal principal \n long serialVersionUID \n String wsuId \n String issuerAddress \n String encrKeySha1Value \n String id \n X509Certificate x509cert \n String BOOTSTRAP_TOKEN_ID \n String tokenType \n Element attachedReference \n Map<String,Object> properties \n Key key \n\n void setAttachedReference \n String getTokenType \n void setProperties \n void setExpires \n String getIssuerAddress \n void setSHA1 \n String getId \n void setX509Certificate \n String getTransformedTokenIdentifier \n void setTokenHash \n void setPrincipal \n Principal getPrincipal \n String getIdFromSTR \n void setId \n void setIssuerAddress \n byte[] getData \n void setKey \n void setTokenType \n Key getKey \n void setData \n Map<String,Object> getProperties \n int getTokenHash \n Date getCreated \n Element getUnattachedReference \n void processLifeTime \n void setUnattachedReference \n void setSecurityContext \n Crypto getCrypto \n byte[] getSecret \n void setToken \n void setSecret \n X509Certificate getX509Certificate \n Element getToken \n boolean isAboutToExpire \n boolean isExpired \n void setWsuId \n Date getExpires \n String getWsuId \n Element cloneElement \n Element getAttachedReference \n String getSHA1 \n SecurityContext getSecurityContext", "output": ""}, {"instruction": "Generate java code\nreturns the labels of all vertices within the graph . ", "input": " List<VertexLabelType> vertexLabels \n Hashtable<VertexLabelType,Hashtable<VertexLabelType,EdgeLabelType>> globalEdgeLookup \n\n void set \n List<VertexLabelType> getSuccessors \n EdgeLabelType get \n boolean isVertexLabel \n void clear \n Hashtable<VertexLabelType,EdgeLabelType> checkForNewVertex \n void addVertex \n void remove", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rteparser #isactiveroute . ", "input": " RTESentence rte \n String EXAMPLE \n RTESentence empty \n\n void testGetWaypointIds \n void testIsFirst \n void testGetSentenceIndex \n void testConstructor \n void testSetSentenceCountWithNegativeValue \n void testAddWaypointId \n void testGetSentenceCount \n void testSetWaypointIds \n void testSetRouteId \n void testIsWorkingRoute \n void testSetSentenceCount \n void testGetRouteId \n void testSetRouteTypeActive \n void setUp \n void testIsLast \n void testGetWaypointCount \n void testSetSentenceIndex \n void testSetRouteTypeWorking \n void testSetSentenceIndexWithNegativeValue", "output": ""}, {"instruction": "Generate java code\nreturns the distance between latmax and latmin in kilometers . ", "input": " float lonMax \n float latMin \n float lonMin \n float latMax \n\n float getWestEastDistKM \n float getLatMax \n boolean intersectsWith \n void adjust \n float getLatMin \n String toString \n BoundingBox intersectWith \n boolean isInside \n float getLonMin \n float getLonMax \n BoundingBox unifyWith", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdgparser #setdeviation double . ", "input": " HDGSentence hdg \n String EXAMPLE \n\n void testSetHeadingTooHigh \n void testIsTrue \n void testSetHeading \n void testHDGParserTalkerId \n void testSetVariationWest \n void testConstructor \n void testSetVariationTooLow \n void testGetVariation \n void testSetVariationTooHigh \n void testSetVariationEast \n void testGetDeviation \n void testSetDeviationTooLow \n void setUp \n void testGetHeading \n void testSetDeviationEast \n void testHDGParserString \n void testSetDeviationWest \n void testSetHeadingTooLow", "output": ""}, {"instruction": "Generate java code\nreturns the connected status of the client . ", "input": " Pattern FRAME_SIZE_EXCEPTION_PATTERN \n boolean mConnected \n TProtocol mProtocol \n String mMode \n long mServiceVersion \n InetSocketAddress mAddress \n TransportProvider mTransportProvider \n Logger LOG \n int RPC_MAX_NUM_RETRY \n boolean mClosed \n\n void beforeDisconnect \n void disconnect \n void afterDisconnect \n void afterConnect \n void checkVersion \n String getServiceName \n AlluxioService.Client getClient \n V call \n V call \n V retryRPC \n V retryRPC \n long getServiceVersion \n void resetConnection \n InetSocketAddress getAddress \n void close \n void connect", "output": ""}, {"instruction": "Generate java code\ncreate a calendar instance for utc time zone using the specified date . ", "input": " String[] W3CDATETIME_MASKS \n TimeZone UTC \n\n boolean isDSTChangeDay \n String formatDateUTC \n String formatDateUTC \n DateFormat getISO8601DateFormat \n TimeZone getTimeZone \n java.util.Date toDate \n Timestamp convertDateToTimestamp \n Date parseDateUTC \n String convertDateToString \n void moveToEnd \n Date parseUsingMask \n int hoursInDay", "output": ""}, {"instruction": "Generate java code\ntests the datanettybuffer #getlength method . ", "input": " ByteBuf mBuffer \n ExpectedException mThrown \n int LENGTH \n\n void bufferAlreadyReleased \n void before \n void getNettyOutputNotSupported \n void singleNioBufferCheckFailed \n void releaseBuffer \n void releaseBufferTest \n void refCountCheckFailed \n void readOnlyByteBuffer \n void after \n void releaseBufferFail", "output": ""}, {"instruction": "Generate java code\nsets the test id . ", "input": " String comments \n String feedId \n String testId \n String elapsedTime \n\n void setFeedId \n void setElapsedTime \n String getComments \n String toString \n String getFeedId \n void setComments \n String getTestId \n String getElapsedTime \n boolean isFileDownLoadedToDestination", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdgparser #getdeviation . ", "input": " HDGSentence hdg \n String EXAMPLE \n\n void testSetDeviationTooHigh \n void testSetHeadingTooHigh \n void testIsTrue \n void testSetHeading \n void testHDGParserTalkerId \n void testSetVariationWest \n void testConstructor \n void testSetVariationTooLow \n void testGetVariation \n void testSetVariationTooHigh \n void testSetVariationEast \n void testSetDeviationTooLow \n void setUp \n void testGetHeading \n void testSetDeviationEast \n void testHDGParserString \n void testSetDeviationWest \n void testSetHeadingTooLow", "output": ""}, {"instruction": "Generate java code\ntest of getnumberrequests method , of class logentryinterval . ", "input": " PlaceHolder placeHolder \n\n void testSetIntervalNumber \n void testGetIntervalNumber \n void testSetMeanResponseTime \n void testSetNumberRequests \n void testGetMeanResponseTime \n void testIncNumberRequests", "output": ""}, {"instruction": "Generate java code\nreverse char array ", "input": " PlaceHolder placeHolder \n\n boolean isUniqueChars \n boolean isPermutation \n int searchString \n char findFirstUniqueChar \n String compress \n boolean isPermutationOfPalindrome \n String reverseByWord \n int longestSubstring \n String sort \n String urlify \n String lookAndSay", "output": ""}, {"instruction": "Generate java code\ntests the mode.bits #or mode.bits method . ", "input": " PlaceHolder placeHolder \n\n void andOperation \n void notOperation \n void implies \n void getSymbol", "output": ""}, {"instruction": "Generate java code\nstart an activity . this method is defined to allow different methods of activity starting for newer versions of android and for compatibility library . ", "input": " String DEFAULT_TITLE \n String DEFAULT_YES \n Activity activity \n Collection<String> DATA_MATRIX_TYPES \n String buttonYes \n String buttonNo \n String TAG \n Collection<String> QR_CODE_TYPES \n Collection<String> ONE_D_CODE_TYPES \n String title \n String message \n Collection<String> TARGET_ALL_KNOWN \n Collection<String> targetApplications \n Collection<String> PRODUCT_CODE_TYPES \n Collection<String> ALL_CODE_TYPES \n String BS_PACKAGE \n String DEFAULT_MESSAGE \n int REQUEST_CODE \n String DEFAULT_NO \n Collection<String> TARGET_BARCODE_SCANNER_ONLY \n\n String getButtonYes \n void setButtonYes \n void setTitleByID \n String getButtonNo \n void setTitle \n String getMessage \n void setMessage \n Collection<String> list \n AlertDialog showDownloadDialog \n IntentResult parseActivityResult \n void setButtonNo \n String getTitle \n void setButtonNoByID \n void setTargetApplications \n AlertDialog initiateScan \n AlertDialog initiateScan \n void setButtonYesByID \n void shareText \n void setSingleTargetApplication \n Collection<String> getTargetApplications \n void setMessageByID \n String findTargetAppPackage", "output": ""}, {"instruction": "Generate java code\ncomputes the `` cost '' for the parameters given . cost = 1/n sum f x ;p - y ^ 2 ", "input": " DenseMatrix64F A \n DenseMatrix64F d \n DenseMatrix64F jacobian \n double finalCost \n DenseMatrix64F H \n DenseMatrix64F tempDH \n double initialLambda \n double initialCost \n DenseMatrix64F tempParam \n DenseMatrix64F temp0 \n DenseMatrix64F negDelta \n DenseMatrix64F temp1 \n double DELTA \n Function func \n DenseMatrix64F param \n\n void compute \n void computeA \n boolean optimize \n boolean adjustParam \n DenseMatrix64F getParameters \n void computeNumericalJacobian \n double getInitialCost \n void computeDandH \n void configure \n double getFinalCost", "output": ""}, {"instruction": "Generate java code\nreturn the davresource associated with a uri . if the specified uri is relative it will be resolved againstthe root of this davrepository . ", "input": " DAVResourceFactory factory \n Set listeners \n File root \n String ACCEPTABLE \n URI base \n\n URI getRepositoryURI \n void removeListener \n void notify \n void addListener", "output": ""}, {"instruction": "Generate java code\nlogs a message . ", "input": " boolean consoleMode \n org.apache.log4j.Logger logger \n int maxValue \n boolean showProgress \n ProgressMonitor progressMonitor \n StringBuffer log \n String currentMessage \n List<String> debugMessages \n TreeSet<String> warnings \n int curValue \n HashMap<String,Integer> warningCounts \n\n void setCurValue \n void setConsoleModeAndParseShowProgress \n void setShowProgress \n int getMaxValue \n String getLog \n void logWarning \n ArrayList<String> getWarnings \n void logDebug \n ArrayList<String> getMessages \n boolean isConsoleMode \n List<String> getDebugMessages \n void setMaxValue \n void incrementCurValue \n boolean isRunningOnServer \n String getCurrentMessage \n void setConsoleMode \n int getCurValue \n boolean isShowProgress \n double getPercentComplete", "output": ""}, {"instruction": "Generate java code\nsimple commodity method also designed to increase readability of source code , and to decrease import in the calling class . provide a pattern and a subject , it 'll do the proper matching . ", "input": " PlaceHolder placeHolder \n\n List<Pattern> compilePatternsFromList", "output": ""}, {"instruction": "Generate java code\nupdates/writes a complete user object . ", "input": " IStoredSettings settings \n Map<String,String> legacyBackingServices \n IRuntimeManager runtimeManager \n Logger logger \n IUserService userService \n\n boolean deleteRepositoryRole \n List<String> getAllUsernames \n List<UserModel> getAllUsers \n UserModel getUserModel \n UserModel getUserModel \n TeamModel getTeamModel \n boolean updateTeamModel \n boolean updateTeamModel \n boolean isInternalAccount \n List<String> getTeamNamesForRepositoryRole \n boolean deleteTeam \n boolean updateUserModels \n List<String> getUsernamesForRepositoryRole \n boolean deleteTeamModel \n UserManager start \n void setUserService \n IUserService createUserService \n List<TeamModel> getAllTeams \n String getCookie \n boolean deleteUserModel \n UserManager stop \n boolean deleteUser \n void setup \n boolean renameRepositoryRole \n List<String> getAllTeamNames \n boolean updateTeamModels", "output": ""}, {"instruction": "Generate java code\ndeletes the alternate under file system directory . ", "input": " String FILE_PATH \n String mAlternateUfsRoot \n String MOUNT_PATH \n String SUB_FILE_PATH \n LocalAlluxioClusterResource mLocalAlluxioClusterResource \n FileSystem mFileSystem \n String SUB_DIR_PATH \n\n void deleteFile \n void openFile \n void before \n void loadMetadata \n void renameFileDst \n void renameFileSrc \n void createFile \n void renameDirectory \n void getFileStatus \n void renameFile \n void createDirectory \n void after \n String createAlternateUfs", "output": ""}, {"instruction": "Generate java code\nretrieves the content from the specified file . ", "input": " String TAB \n String NEW_LINE \n\n String[][] retrieveMatrix \n String readFile \n String[][] parseMatrix \n String[][] prepareMatrix", "output": ""}, {"instruction": "Generate java code\ntest method for activitycontroller #handleevent org.osgi.service.event.event verifies that illegalargumentexception is thrown when event 's activityevent #id_key property is empty . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n ActivityController acitivityController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testDeregisterUserSessionWithNullServerSessonThrowsException \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testGetServerSessionByUserId \n void tearDown \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testRegisterUserSessionWithNullServerSessionThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\nreturn the name of the type in its short form if its known to us otherwise return its name fully packaged . ", "input": " TypeMap PRIMITIVE_TYPE_NAMES \n TypeMap TYPES_BY_NAME \n Map<Class<?>,String> SHORT_NAMES_BY_TYPE \n Class<?>[] EMPTY_CLASS_ARRAY \n\n Class<?> getPrimitiveTypeFor \n Map<String,List<Method>> asMethodGroupsByTypeName \n Map<Class<?>,String> getClassShortNames \n Map<Class<?>,String> computeClassShortNames \n Method methodFor \n Class<?> getTypeFor \n String withoutPackageName", "output": ""}, {"instruction": "Generate java code\ngets the record at a given index . ", "input": " AccessibilityEventVersionImpl IMPL \n int TYPE_VIEW_HOVER_EXIT \n int TYPE_VIEW_TEXT_SELECTION_CHANGED \n int TYPE_WINDOW_CONTENT_CHANGED \n int TYPE_VIEW_SCROLLED \n int TYPE_VIEW_HOVER_ENTER \n int TYPE_TOUCH_EXPLORATION_GESTURE_END \n int TYPE_TOUCH_EXPLORATION_GESTURE_START \n\n void appendRecord \n void appendRecord \n void appendRecord \n int getRecordCount \n int getRecordCount \n int getRecordCount", "output": ""}, {"instruction": "Generate java code\nreturns a org.ejml.interfaces.decomposition.qrdecomposition that has been optimized for the specified matrix size . ", "input": " PlaceHolder placeHolder \n\n SingularValueDecomposition<DenseMatrix64F> svd \n TridiagonalSimilarDecomposition<DenseMatrix64F> tridiagonal \n EigenDecomposition<DenseMatrix64F> eig \n EigenDecomposition<DenseMatrix64F> eig \n boolean decomposeSafe \n LUDecomposition<DenseMatrix64F> lu \n CholeskyDecomposition<DenseMatrix64F> chol \n CholeskyDecompositionLDL_D64 cholLDL \n QRPDecomposition<DenseMatrix64F> qrp \n double quality \n double quality \n double quality", "output": ""}, {"instruction": "Generate java code\nsets the message body . ", "input": " String _utf8 \n boolean _highPriority \n byte[] _messageBody \n String _encoding \n byte[] _correlationId \n String _label \n\n byte[] getCorrelationId \n String getBodyAsString \n String getLabel \n String getCorrelationIdAsString \n void setBodyAsString \n byte[] getBody \n void setCorrelationId \n void setHighPriority \n void setLabel \n boolean getHighPriority \n void setCorrelationIdAsString", "output": ""}, {"instruction": "Generate java code\nset a custom listener for invocation of this menu item . ", "input": " android.view.MenuItem mMenuItem \n\n boolean hasSubMenu \n CharSequence getTitleCondensed \n int getGroupId \n int getItemId \n View getActionView \n View getActionView \n CharSequence getTitle \n MenuItem setChecked \n char getAlphabeticShortcut \n Intent getIntent \n boolean isCheckable \n MenuItem setShortcut \n MenuItem setVisible \n void setShowAsAction \n void setShowAsAction \n SubMenu getSubMenu \n MenuItem setIntent \n MenuItem setCheckable \n MenuItem setAlphabeticShortcut \n MenuItem setTitle \n MenuItem setTitle \n MenuItem setNumericShortcut \n boolean isVisible \n boolean isChecked \n MenuItem setTitleCondensed \n Drawable getIcon \n MenuItem setIcon \n MenuItem setIcon \n MenuItem setEnabled \n int getOrder \n boolean isEnabled \n char getNumericShortcut \n void setActionView \n void setActionView \n MenuItem setActionView \n MenuItem setActionView \n ContextMenuInfo getMenuInfo", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.vhwparser #vhwparser java.lang.string . ", "input": " VHWParser vhw \n String EXAMPLE \n\n void testGetSpeedKnots \n void testSetMagneticHeading \n void testGetMagneticHeading \n void testConstructorTalkerId \n void testIsTrue \n void testSetHeading \n void testSetSpeedKilometres \n void setUp \n void testSetSpeedKnots \n void testGetHeading \n void testGetSpeedKilometres", "output": ""}, {"instruction": "Generate java code\nprocesses the internal buffer , converting it into packets if enough data is available . ", "input": " SocketChannel m_socketChannel \n Logger LOG \n ProtocolHandler m_protocolHandler \n InetSocketAddress m_inetSocketAddress \n ByteBuffer m_readBuffer \n\n void read \n void setProtocolHandler \n String toString", "output": ""}, {"instruction": "Generate java code\nreturns the unbiased sample variance of the values . if this dataset is a sample drawn from a population , this is an unbiased estimator of the population variance of the population . the count must be greater than one . this is not guaranteed to return zero when the dataset consists of the same value multiple times , due to numerical errors . however , it is guaranteed never to return a negative result . non-finite values if the dataset contains any non-finite values double #positive_infinity , double #negative_infinity , or double #nan then the result is double #nan . ", "input": " long count \n double max \n double mean \n double sumOfSquaresOfDeltas \n double min \n\n void add \n double sumOfSquaresOfDeltas \n double max \n long count \n double sum \n double populationVariance \n double sampleStandardDeviation \n double min \n double calculateNewMeanNonFinite \n void addAll \n void addAll \n void addAll \n void addAll \n void addAll \n void addAll \n double mean \n double populationStandardDeviation \n Stats snapshot", "output": ""}, {"instruction": "Generate java code\nget a method from the current classifier not yet modeled . ", "input": " String classnamePrefix \n Logger LOG \n Collection obsoleteInnerClasses \n Object component \n int anonymousClassCounter \n Context context \n Object classifier \n Collection obsoleteFeatures \n\n void addClassifierContext \n void addPackageContext \n void removeObsoleteFeatures \n void innerClassifier \n void addComponent \n void outerClassifier \n Object getClassifier \n Object getFeature \n void removeObsoleteInnerClasses \n Object getAttribute \n void feature \n Collection getFeatures \n String getClassnamePrefix \n Object getOperation \n Object getComponent \n String anonymousClass \n Context getContext", "output": ""}, {"instruction": "Generate java code\nsets value of the coreconnectionpnames #tcp_nodelay parameter . ", "input": " PlaceHolder placeHolder \n\n void setSoReuseaddr \n int getLinger \n void setConnectionTimeout \n void setSoTimeout \n boolean getSoReuseaddr \n boolean getTcpNoDelay \n void setLinger \n int getSocketBufferSize \n void setSocketBufferSize \n int getSoTimeout \n boolean isStaleCheckingEnabled \n void setStaleCheckingEnabled \n int getConnectionTimeout", "output": ""}, {"instruction": "Generate java code\njust a wrapper to #check string . ", "input": " PlaceHolder placeHolder \n\n float getBrowserVersion \n boolean check", "output": ""}, {"instruction": "Generate java code\nadds the child in front of any other childs . ", "input": " List<AbstractReportNode> childNodes \n AbstractReportNode parentNode \n int numberOfViolations \n\n void add \n void addNumberOfViolation \n int getChildIndex \n AbstractReportNode getParent \n AbstractReportNode getNextSibling \n int getNumberOfViolations \n boolean isLeaf \n void accept \n int getChildCount \n AbstractReportNode getChildAt \n void childrenAccept \n boolean equalsNode \n AbstractReportNode getFirstChild", "output": ""}, {"instruction": "Generate java code\ndetermines if the buffer is empty . ", "input": " byte[] buffer \n int INITIAL_BUFFER_CAPACITY \n int bufferSize \n\n void add \n void clear \n byte[] toArray \n String toString", "output": ""}, {"instruction": "Generate java code\nreturns a function that ignores its input and returns the result of supplier.get . java 8 users : use the lambda expression o - > supplier.get instead . ", "input": " long serialVersionUID \n Predicate<T> predicate \n V defaultValue \n Function<A,? extends B> f \n Function<B,C> g \n Supplier<T> supplier \n Map<K,? extends V> map \n E value \n\n Function<T,Boolean> forPredicate \n Function<Object,E> constant \n String apply \n Object apply \n V apply \n V apply \n C apply \n Boolean apply \n E apply \n T apply \n Function<A,C> compose \n Function<E,E> identity \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n Function<Object,String> toStringFunction \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n Function<K,V> forMap \n Function<K,V> forMap", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdgparser #setheading double . ", "input": " HDGSentence hdg \n String EXAMPLE \n\n void testSetDeviationTooHigh \n void testSetHeadingTooHigh \n void testIsTrue \n void testHDGParserTalkerId \n void testSetVariationWest \n void testConstructor \n void testSetVariationTooLow \n void testGetVariation \n void testSetVariationTooHigh \n void testSetVariationEast \n void testGetDeviation \n void testSetDeviationTooLow \n void setUp \n void testGetHeading \n void testSetDeviationEast \n void testHDGParserString \n void testSetDeviationWest \n void testSetHeadingTooLow", "output": ""}, {"instruction": "Generate java code\ngets the next storage tier view . ", "input": " List<StorageTierView> mTierViews \n BlockMetadataManager mMetadataManager \n Map<String,StorageTierView> mAliasToTierViews \n Set<Long> mPinnedInodes \n Set<Long> mInUseBlocks \n\n List<StorageTierView> getTierViews \n List<StorageTierView> getTierViewsBelow \n StorageTierView getTierView \n boolean isBlockMarked \n BlockMeta getBlockMeta \n void clearBlockMarks \n boolean isBlockPinned \n long getAvailableBytes \n boolean isBlockLocked \n boolean isBlockEvictable", "output": ""}, {"instruction": "Generate java code\njust for debugging xml feeds . ", "input": " RestSearcher<YouTubeGDataVideo> m_searcher \n Logger m_log \n DocumentBuilder m_documentBuilder \n\n RestResults<YouTubeGDataVideo> processResults", "output": ""}, {"instruction": "Generate java code\nadd whitelist to this host file . this supports simple regex in entries . ", "input": " boolean mParseWhitelist \n THashMap<String,String> mRedirectionList \n Matcher mHostsParserMatcher \n THashSet<String> mWhitelist \n THashSet<String> mBlacklist \n Pattern mHostsParserPattern \n boolean mParseRedirections \n\n void addRedirectionList \n THashSet<String> getBlacklist \n void addBlacklist \n THashSet<String> getWhitelist \n THashMap<String,String> getRedirectionList \n void parse \n void compileList", "output": ""}, {"instruction": "Generate java code\nestimates the distinct number of field values in the join . since the join does not increase or decrease field values , the estimate is the same as in the appropriate underlying query . ", "input": " String fldname2 \n Plan p1 \n String fldname1 \n Plan p2 \n Schema sch \n\n Schema schema \n int blocksAccessed \n int recordsOutput \n Scan open", "output": ""}, {"instruction": "Generate java code\nreturns the exact path for a file . this path will be the canonical path unless an exception is thrown in which case it will be the absolute path . ", "input": " int KB \n int MB \n int GB \n\n File resolveParameter \n int convertSizeToInt \n long convertSizeToLong \n byte[] readContent \n String readContent \n void writeContent \n long folderSize \n void copy \n boolean delete \n String getRelativePath", "output": ""}, {"instruction": "Generate java code\nget the preferred group length . ", "input": " int MIN_ALLOWED \n int MAX_ALLOWED \n int min_group_len \n int max_group_len \n int pref_group_len \n\n int getMax_group_len \n int getMin_group_len", "output": ""}, {"instruction": "Generate java code\nthis implementation of the frobenius norm is a straight forward implementation and can be susceptible for overflow/underflow issues . a more resilient implementation is #normf . ", "input": " PlaceHolder placeHolder \n\n double inducedP2 \n double inducedP1 \n void normalizeF \n double normF \n double fastNormP \n double fastNormP2 \n double normPInf \n double conditionP \n double elementP \n double inducedPInf \n double normP \n double normP2 \n double fastElementP \n double normP1 \n double conditionP2", "output": ""}, {"instruction": "Generate java code\nsums up the square of each element in the matrix . this is equivalent to the frobenius norm squared . ", "input": " PlaceHolder placeHolder \n\n void subvector \n double diffNormP1 \n DenseMatrix64F pivotMatrix \n DenseMatrix64F copyChangeRow \n DenseMatrix64F createReflector \n DenseMatrix64F createReflector \n double diffNormF \n double qualityTriangular \n double diffNormF_fast \n void addIdentity \n double diagProd \n DenseMatrix64F copyTriangle \n DenseMatrix64F[] splitIntoVectors", "output": ""}, {"instruction": "Generate java code\ndetermine if current messaging role is that of requestor . ", "input": " PlaceHolder placeHolder \n\n FaultMode getFaultMode \n boolean isDOMPresent \n boolean isTrue \n boolean isOutbound \n boolean isEmptyPartialResponse \n boolean getContextualBoolean \n boolean isFault \n boolean isPartialResponse \n Object getContextualProperty", "output": ""}, {"instruction": "Generate java code\nreturns the field whose values will be modified ", "input": " String fldname \n Predicate pred \n String tblname \n Expression newval \n\n Expression newValue \n Predicate pred \n String tableName", "output": ""}, {"instruction": "Generate java code\ntakes in a list of file locations instead of actual files and renames/saves them ", "input": " String myLocation \n String suffix \n\n void saveFile \n void saveFiles", "output": ""}, {"instruction": "Generate java code\nvalidate the incoming request for mandatory parameters . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nconvenience method , equivalent to calling #decompress byte , int , int decompress src , 0 , destlen . ", "input": " PlaceHolder placeHolder \n\n String toString", "output": ""}, {"instruction": "Generate java code\nsplits ` text ` into words and counts them . ", "input": " String label \n Map<String,Integer> map \n\n void processElements \n void incrementTermCount \n String getLabel \n int size \n Integer get \n void main \n Set<String> keySet \n void put \n void printCounts \n void processTree", "output": ""}, {"instruction": "Generate java code\nmodifies goal and map information and returns the modified heuristic function . ", "input": " Object goal \n Map map \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nprovide number of reject decisions for emtpy annotation mutations . ", "input": " int decisions \n int somaticWhitelistAccepts \n Set<Long> whiteListGenesForPromoterMutations \n int germlineWhitelistAccepts \n int utrRejects \n int silentOrIntronRejects \n int missenseGermlineRejects \n int mutationStatusNoneRejects \n int emptyAnnotationRejects \n int redactedRejects \n int unknownAccepts \n int accepts \n int lohOrWildTypeRejects \n int igrRejects \n\n int getUnknownAccepts \n String getStatistics \n boolean safeStringTest \n boolean acceptMutation \n int getMissenseGermlineRejects \n int getAccepts \n int getRejects \n int getIGRRejects \n int getLohOrWildTypeRejects \n int getSilentOrIntronRejects \n int getSomaticWhitelistAccepts \n int getUTRRejects \n int getGermlineWhitelistAccepts \n int getDecisions \n int getMutationStatusNoneRejects \n String toString \n int getRedactedRejects", "output": ""}, {"instruction": "Generate java code\ntests for the bufferedblockoutstream #remaining method . ", "input": " byte[] INCREASING_BYTES \n long BLOCK_LENGTH \n TestBufferedBlockOutStream mTestStream \n ExpectedException mThrown \n\n void byteArrayAtOffset \n void byteArrayWrite \n void before \n void doubleFlush \n void singleByteWrite \n void writePastBlock \n void writeToClosed", "output": ""}, {"instruction": "Generate java code\ngets all tierviews before certain tierview . throws an illegalargumentexception if thetieralias is not found . ", "input": " List<StorageTierView> mTierViews \n BlockMetadataManager mMetadataManager \n Map<String,StorageTierView> mAliasToTierViews \n Set<Long> mPinnedInodes \n Set<Long> mInUseBlocks \n\n List<StorageTierView> getTierViews \n StorageTierView getTierView \n boolean isBlockMarked \n BlockMeta getBlockMeta \n void clearBlockMarks \n StorageTierView getNextTier \n boolean isBlockPinned \n long getAvailableBytes \n boolean isBlockLocked \n boolean isBlockEvictable", "output": ""}, {"instruction": "Generate java code\nreturns the same key with the private part removed . may return the same instance . ", "input": " Joiner PATH_JOINER \n DeterministicKey parent \n ImmutableList<ChildNumber> childNumberPath \n byte[] chainCode \n ECPoint publicAsPoint \n long serialVersionUID \n BigInteger privateAsFieldElement \n\n DeterministicKey getParent \n int getDepth \n ECPoint getPubPoint \n String serializePrivB58 \n String toBase58 \n String serializePubB58 \n byte[] serializePublic \n byte[] getPrivKeyBytes33 \n boolean hasPrivate \n byte[] addChecksum \n byte[] getChainCode \n ECKey toECKey \n byte[] serialize \n byte[] serializePrivate \n ChildNumber getChildNumber \n byte[] getIdentifier \n String getPath \n BigInteger getPrivAsFieldElement \n byte[] getPubKeyBytes \n String toString \n byte[] getFingerprint \n ImmutableList<ChildNumber> getChildNumberPath \n byte[] getPrivKeyBytes", "output": ""}, {"instruction": "Generate java code\na version of heartbeat which returns a future representing completion of therecompute plan . this is especially useful for tests . ", "input": " RecomputePlan mPlan \n FileSystemMaster mFileSystemMaster \n ExecutorService mRecomputeLauncherService \n int DEFAULT_RECOMPUTE_LAUNCHER_POOL_SIZE \n Logger LOG \n RecomputePlanner mPlanner \n\n void heartbeat \n void run \n void close", "output": ""}, {"instruction": "Generate java code\nremove propertychangelistener . ", "input": " Element m_SignedPart \n int m_SignMode \n String PROP_SIGNEDELEMENT \n Element m_WrappingPayloadElemnt \n String PROP_REFERRINGELEMENT \n WrappingAttackMode m_CurrWrappingMode \n String PROP_WRAPPINGELMENT \n PropertyChangeSupport m_PropertyChangeSupport \n int m_CurrWrappingPayloadIdx \n Element m_AttackPayloadElemnt \n boolean m_IsAdditionalWrap \n String PROP_ATTACKELEMENT \n\n void setAttackPayloadElement \n void setCurrWrappingPayloadIdx \n void setWrappingPayloadElement \n boolean isSigned \n boolean isAdditionalWrap \n Element getWrappingPayloadElement \n void setCurrWrappingMode \n void setIsAdditionalWrap \n Element getAttackPayloadElement \n void setSignedPart \n int getCurrWrappingPayloadIdx \n WrappingAttackMode getCurrWrappingMode \n Element getSignedPart \n int getSignMode \n void setSignMode \n void addPropertyChangeListener \n void addPropertyChangeListener", "output": ""}, {"instruction": "Generate java code\nperform the xslt transformation specified in the constructor ", "input": " File PWD \n Map<String,Object> parameters \n Transformation transformation \n\n R withExceptionHandling \n void setOutputProperties \n R transform \n void transformTo \n String getDefaultSystemId \n void setParameter \n void setErrorListener \n void setOutputProperty \n void clearParameters \n Document getResultDocument \n void setURIResolver \n void provideSystemIdIfRequired \n Object getParameter", "output": ""}, {"instruction": "Generate java code\ngets all parameters . ", "input": " long timeElapsed \n HttpServletRequest request \n ArrayList messages \n Date startTime \n Date stopTime \n ArrayList parameters \n\n ArrayList getDebugMessages \n HttpServletRequest getRequest \n String getCompleteLog \n void startTimer \n void logMsg \n void logMsg \n void stopTimer \n long getTimeElapsed \n void addParameter \n void addParameter \n void addParameter", "output": ""}, {"instruction": "Generate java code\ngets the file size . ", "input": " String comments \n String inactivationReasonType \n Timestamp receiptDate \n String isActive \n BigDecimal predecessorId \n String srcFileName \n long serialVersionUID \n String srcUniqueFileName \n BigDecimal successorId \n Timestamp createdDate \n List<PCLDataUnitEntity> pclDataUnits \n long dataSetId \n BigDecimal feedId \n BigDecimal fileSize \n String destFileName \n String checksum \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isUpdate \n String receiptDateType \n String status \n\n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n long getDataSetId \n void setReceiptDateType \n void setIsPrepopulated \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getStatus \n String getDestFileName \n String getIsUpdate \n List<PCLDataUnitEntity> getPclDataUnits \n void setPclDataUnits \n void setInactivationReasonType \n Timestamp getReceiptDate \n String getComments \n Timestamp getCreatedDate \n void setComments \n PCLDataUnitEntity removePclDataUnit \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setFileSize \n BigDecimal getPredecessorId \n void setChecksum \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setRunId \n void setReceiptDate \n void setStatus \n Timestamp getModifiedDate \n String getIsActive \n void setSuccessorId \n void setDestFileName \n PCLDataUnitEntity addPclDataUnit \n void setModifiedDate \n void setCreatedDate \n void setDataSetId \n void setPredecessorId \n void setIsActive \n void setChecksumType", "output": ""}, {"instruction": "Generate java code\nadds a css property to a component . e.g. : key = background-color value = yellow ", "input": " Component component \n HashMap<String,String> properties \n\n boolean addBackgroundColor \n boolean addWidth \n HashMap<String,String> getProperties", "output": ""}, {"instruction": "Generate java code\nreturn linked stat source ", "input": " HashMap<Integer,Device> devices \n ArrayList<Option> options \n String name \n String description \n HashMap<Integer,StatSource> statSources \n\n Collection<Device> getDevices \n boolean read \n String getName \n String getOptionValue \n Option getOption \n Option getOption \n ArrayList<Option> getOptions \n Collection<StatSource> getStatSources \n String getDescription \n Device getDevice", "output": ""}, {"instruction": "Generate java code\ncalled when the connection is being finalized after receiving the response . use this to do any cleanup / resource freeing . ", "input": " HttpParameters responseParameters \n String authorizationWebsiteUrl \n OAuthProviderListener listener \n long serialVersionUID \n String accessTokenEndpointUrl \n boolean isOAuth10a \n String requestTokenEndpointUrl \n Map<String,String> defaultHeaders \n\n void retrieveAccessToken \n void retrieveToken \n HttpParameters getResponseParameters \n String getRequestTokenEndpointUrl \n HttpRequest createRequest \n void setRequestHeader \n String getAuthorizationWebsiteUrl \n void removeListener \n String getAccessTokenEndpointUrl \n void setOAuth10a \n void handleUnexpectedResponse \n String retrieveRequestToken \n Map<String,String> getRequestHeaders \n String getResponseParameter \n void setListener \n HttpResponse sendRequest \n void setResponseParameters \n boolean isOAuth10a", "output": ""}, {"instruction": "Generate java code\nindex a single node for visitation by rules . ", "input": " Map<RuleSet,List<Rule>> ruleSetRules \n Map<String,List<Node>> nodeNameToNodes \n\n void add \n void visitAll \n void clear \n void indexNodes \n void visit \n void initialize", "output": ""}, {"instruction": "Generate java code\ngets the test id . ", "input": " long testId \n long serialVersionUID \n long seqId \n\n long getSeqId \n int hashCode \n void setSeqId \n boolean equals \n void setTestId", "output": ""}, {"instruction": "Generate java code\nadd a short field to the stream . \\ param value the short value to be added . ", "input": " byte[] intBuf \n int MAX_INT_BYTES \n PackFormatInputStream format \n ByteArrayOutputStream packed \n\n byte[] getValue \n void packLong \n void reset \n String getFormat \n void addByte \n void addInt \n void addLong \n void addRecord \n void addByteArray \n void addByteArray \n void addString", "output": ""}, {"instruction": "Generate java code\nget the transaction output changes if they have been calculated , otherwise null . only one of this and gettransactions will return a non-null value . ", "input": " Sha256Hash blockHash \n long serialVersionUID \n TransactionOutputChanges txOutChanges \n List<Transaction> transactions \n\n Sha256Hash getHash \n int hashCode \n List<Transaction> getTransactions \n boolean equals \n String toString", "output": ""}, {"instruction": "Generate java code\nset the string corresponding to the callbackhandler class . ", "input": " CallbackHandler callbackHandler \n Logger LOG \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n String callbackHandlerClass \n String signaturePropertiesFile \n String signatureAlias \n String issuer \n\n String getIssuer \n String getSignatureAlias \n void setSignatureCrypto \n void setIssuer \n Crypto getSignatureCrypto \n CallbackHandler getCallbackHandler \n SignatureProperties getSignatureProperties \n void setSignatureAlias \n void setSignaturePropertiesFile \n void setSignatureProperties \n void setCallbackHandler", "output": ""}, {"instruction": "Generate java code\ncalculates the size of the roi ", "input": " boolean AMPLIFIED \n boolean DELETED \n int gisticID \n int peakStart \n ArrayList<CanonicalGene> genes_in_ROI \n String cytoband \n boolean amp \n int NO_SUCH_GISTIC \n int cancerStudyId \n int chromosome \n int peakEnd \n double qValue \n\n void setPeakEnd \n void setAmp \n String getCytoband \n void setPeakStart \n int getPeakStart \n void setqValue \n boolean getAmp \n int getInternalId \n void setGenes_in_ROI \n int getCancerStudyId \n int getChromosome \n int getPeakEnd \n void addGene \n void setInternalId \n void setCancerStudyId \n double getqValue \n String toString \n ArrayList<CanonicalGene> getGenes_in_ROI \n void setCytoband \n void setChromosome", "output": ""}, {"instruction": "Generate java code\ninternal method that updates the tree from the string ", "input": " Map<String,IntegerHolder> mapN \n int maxId \n Map<MTDFragmentAST,Tuple> mapS \n MTDFragmentAST tree \n int id \n IntegerHolder repetitions \n\n void decorate \n short distance \n short distance \n int update \n int dn \n int updateAux \n void store \n MTDFragmentAST parseTree \n int dnAux \n int ds \n int ds \n void setTree \n MTDFragmentAST getTree \n int size \n void load \n int hashCode \n boolean equals \n String toString \n String toString \n short mtd", "output": ""}, {"instruction": "Generate java code\nadd blacklist to this hosts file ", "input": " boolean mParseWhitelist \n THashMap<String,String> mRedirectionList \n Matcher mHostsParserMatcher \n THashSet<String> mWhitelist \n THashSet<String> mBlacklist \n Pattern mHostsParserPattern \n boolean mParseRedirections \n\n void addWhitelist \n void addRedirectionList \n THashSet<String> getBlacklist \n THashSet<String> getWhitelist \n THashMap<String,String> getRedirectionList \n void parse \n void compileList", "output": ""}, {"instruction": "Generate java code\ngets the exp data set id . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n void setActValue \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n void setSrcFileName \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n void setFailedAttrib \n String getErrorMsg \n String getActValue \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n BigDecimal getExpDataUnitId \n Timestamp getCreateTimeStamp \n String getFailedAttrib \n void setExpDataSetId \n void setDataSetId \n void setExpDataUnitId", "output": ""}, {"instruction": "Generate java code\nsets the exp msg . ", "input": " Date lastModifiedTimeStamp \n Long feedId \n String createdBy \n Date fetcherStartTimeStamp \n Date createTimeStamp \n Long testId \n Long runId \n Date fetcherEndTimeStamp \n List<TestResultDetailsDTO> regTestResultDetailsLst \n OutcomeType outcome \n RunStatusType runStatus \n String errorMsg \n\n void setLastModifiedTimeStamp \n Date getFetcherEndTimeStamp \n void setFeedId \n void setFetcherStartTimeStamp \n Date getLastModifiedTimeStamp \n OutcomeType getOutcome \n Long getRunId \n List<TestResultDetailsDTO> getRegTestResultDetailsLst \n Long getFeedId \n void setTestId \n Long getTestId \n Date getFetcherStartTimeStamp \n void setRunId \n void setRegTestResultDetailsLst \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n RunStatusType getRunStatus \n Date getCreateTimeStamp \n void setOutcome \n String toString \n String getCreatedBy \n String getErrorMsg \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\nsets the album / artwork picture to be displayed on the remote control . ", "input": " boolean HAS_REMOTE_CONTROL_APIS \n Object mActualMetadataEditor \n int METADATA_KEY_ARTWORK \n Object mActualRemoteControlClient \n\n void setPlaybackState \n void apply \n void removeFromMediaRouter \n MetadataEditorCompat putString \n void clear \n void addToMediaRouter \n Object getActualRemoteControlClientObject \n MetadataEditorCompat putLong \n MetadataEditorCompat editMetadata \n void setTransportControlFlags", "output": ""}, {"instruction": "Generate java code\nreturn the external id of an action . ", "input": " String WORKFLOW \n String ACTION_TRACKER_URI \n String LAST_ACTION_IN_ERROR \n String ACTION_PROTO_CONF \n String ACTION_DATA \n String ACTION_EXTERNAL_STATUS \n String ACTION_ERROR_CODE \n String ACTION_EXTERNAL_ID \n String ACTION \n String ACTION_ERROR_MESSAGE \n\n int wf_run \n WorkflowJobBean getWorkflow \n String getActionVar \n String wf_callback \n void setActionInfo \n String wf_conf \n String wf_actionExternalStatus \n WorkflowActionBean getAction \n Configuration getProtoActionConf \n String wf_group \n String wf_transition \n String wf_lastErrorNode \n String wf_appPath \n String wf_errorCode \n void configureEvaluator \n String wf_id \n String wf_actionTrackerUri \n Map<String,String> wf_actionData \n String wf_name \n String wf_errorMessage \n String wf_user", "output": ""}, {"instruction": "Generate java code\nreturns the string value of a configuration property . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n void setString \n boolean load \n boolean load \n boolean load \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nfinds the length of a byte array . either by decoding the length from the format or using the remaining size of the stream . ", "input": " int valueLen \n PackFormatInputStream format \n int valueOff \n byte[] value \n\n void getByteArrayInternal \n byte getByte \n short getShort \n String getString \n long getLong \n byte[] getValue \n int getInt \n int unpackInt \n short unpackShort \n void getByteArray \n void getByteArray \n byte[] getByteArray \n String getFormat \n long getRecord \n long unpackLong", "output": ""}, {"instruction": "Generate java code\nreturns the class name corresponding to a number ", "input": " int numOfClasses \n\n int getClassWordCount \n float testNaiveBayes \n double calculateProductOfProbGivenClass \n double findProbFromNaiveBayesMap \n boolean isPersonCorrectlyClassified \n String predictClassFromBlogs", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdmparser #setheading double . ", "input": " HDMSentence hdm \n String EXAMPLE \n\n void testSetHeadingTooHigh \n void testIsTrue \n void setUp \n void testGetHeading \n void testSetNegativeHeading \n void testConstructor", "output": ""}, {"instruction": "Generate java code\nadd an entry ", "input": " List<T> circularArray \n int max \n int position \n boolean haveOverflow \n\n int size \n String toString", "output": ""}, {"instruction": "Generate java code\nstarts the master . ", "input": " Supplier<String> mClientSupplier \n String mJournalFolder \n ClientPool mClientPool \n AlluxioMaster mAlluxioMaster \n Thread mMasterThread \n Logger LOG \n String mHostname \n\n AlluxioMaster getInternalMaster \n int getRPCLocalPort \n String getWebBindHost \n String uniquePath \n String getRPCBindHost \n FileSystem getClient \n void kill \n String getJournalFolder \n void stop \n int getWebLocalPort \n String get \n boolean isServing \n LocalAlluxioMaster create \n LocalAlluxioMaster create \n InetSocketAddress getAddress \n void clearClients \n String getUri", "output": ""}, {"instruction": "Generate java code\nset the identifier associated with this token ", "input": " String identifier \n String wsseValueType \n boolean useKeyIdentifier \n boolean useDirectReference \n String wsse11TokenType \n\n void setWsse11TokenType \n void setWsseValueType \n String getWsse11TokenType \n String getIdentifier \n void setUseDirectReference \n boolean isUseKeyIdentifier \n String getWsseValueType \n boolean isUseDirectReference \n void setUseKeyIdentifier", "output": ""}, {"instruction": "Generate java code\nensures that the given buffer contains at least the given number of bytes after the given offset . ", "input": " PlaceHolder placeHolder \n\n void writeInt \n void writeInt \n void writeInt \n void writeByte \n void writeByte \n void writeByte \n void writeLong \n void writeLong \n long readLong \n short readShort \n void writeShort \n void writeShort \n byte readByte \n byte readByte \n int readInt \n int readInt", "output": ""}, {"instruction": "Generate java code\ntests the clientrwlock #trylock method . ", "input": " ClientRWLock mClientRWLock \n Lock mReadLock \n Lock mWriteLock \n\n void unlock \n void lockInterruptibly \n void notSameLock \n void before \n void referenceCounting", "output": ""}, {"instruction": "Generate java code\ngets the test id . ", "input": " Date lastModifiedTimeStamp \n Long feedId \n String createdBy \n Date fetcherStartTimeStamp \n Date createTimeStamp \n Long testId \n Long runId \n Date fetcherEndTimeStamp \n List<TestResultDetailsDTO> regTestResultDetailsLst \n OutcomeType outcome \n RunStatusType runStatus \n String errorMsg \n\n void setLastModifiedTimeStamp \n Date getFetcherEndTimeStamp \n void setFeedId \n void setFetcherStartTimeStamp \n Date getLastModifiedTimeStamp \n OutcomeType getOutcome \n Long getRunId \n List<TestResultDetailsDTO> getRegTestResultDetailsLst \n Long getFeedId \n void setTestId \n Date getFetcherStartTimeStamp \n void setRunId \n void setRegTestResultDetailsLst \n void setErrorMsg \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n RunStatusType getRunStatus \n Date getCreateTimeStamp \n void setOutcome \n String toString \n String getCreatedBy \n String getErrorMsg \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\nreturns the entries as a list . ", "input": " List<String> log \n\n void clean \n String representation \n void append", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #getvariation . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetCourse \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nreturn the difference in minutes between now and the date . ", "input": " long MIN \n long ONEYEAR \n TimeZone timezone \n ResourceBundle translation \n long ONEHOUR \n long HALFHOUR \n long ONEDAY \n\n String duration \n String yesterday \n int daysAgo \n String timeAgo \n String timeAgo \n boolean isYesterday \n String today \n boolean isToday \n int hoursAgo \n String inFuture \n int convertFrequencyToMinutes \n String translate \n String translate \n String timeAgoCss", "output": ""}, {"instruction": "Generate java code\nreturn the directory into which we put our self-extracted native libraries and make sure it exists . ", "input": " byte[] cachedBuffer \n\n void reliablyCopyExecutable \n void deleteOrThrow \n FileLocker lockLibsDirectory \n void freeCopyBuffer \n File getLibsDirectory \n int findAbiScore \n void dumbDeleteRecrusive \n String[] getSupportedAbis \n String[] getSupportedAbis \n void fallocateIfSupported \n void fallocate", "output": ""}, {"instruction": "Generate java code\ngetter for the denied extensions of a file type . ", "input": " Map<ResourceTypeHandler,Set<String>> extensionsDenied \n Map<ResourceTypeHandler,Set<String>> extensionsAllowed \n\n boolean isAllowed \n void setExtensionsAllowed \n void setExtensionsDenied \n Set<String> getExtensionsAllowed", "output": ""}, {"instruction": "Generate java code\ntests the rpcblockreadresponse #getencodedlength method . ", "input": " long OFFSET \n long TEMP_UFS_FILE_ID \n ByteBuf mBuffer \n ExpectedException mThrown \n long LENGTH \n RPCResponse.Status STATUS \n\n void encodeDecode \n void before \n void getPayloadDataBuffer \n void assertValid \n void assertValid \n void createErrorResponse \n void validate", "output": ""}, {"instruction": "Generate java code\nformat the template with args , only supports the placeholder % s . ", "input": " PlaceHolder placeHolder \n\n int listListIteratorTesterNumIterations \n int collectionIteratorTesterNumIterations", "output": ""}, {"instruction": "Generate java code\nreturn a list containing o1 , ... , o3 . ", "input": " PlaceHolder placeHolder \n\n List<T> add \n T firstOrElse \n boolean equals \n List<T> nonNullList \n List<U> map \n Iterator<Pair<T,T>> pairs", "output": ""}, {"instruction": "Generate java code\nassert that the provided object is an instance of the provided class . assert.instanceof foo.class , foo ; ", "input": " PlaceHolder placeHolder \n\n void isTrue \n void isTrue \n void isAssignable \n void isAssignable \n void notNull \n void notNull \n void isNull \n void isNull \n void noNullElements \n void noNullElements \n void state \n void state \n void notEmpty \n void notEmpty \n void notEmpty \n void notEmpty \n void notEmpty \n void notEmpty", "output": ""}, {"instruction": "Generate java code\nreturn a wsdl definition model for a server . ", "input": " Bus bus \n String preKeepAlive \n Charset UTF8 \n Class<?> classpathAnchor \n Map<String,String> namespaces \n XMLInputFactory xmlInputFactory \n ByteArrayOutputStream response \n boolean written \n String basedirPath \n String contentType \n\n Bus getBus \n Document getWSDLDocument \n ByteArrayOutputStream getResponseStream \n void assertValidBoolean \n NodeList assertValid \n Node invoke \n Node invoke \n String getResponseContentType \n Server getServerForService \n String resolveNamespacePrefix \n void addNamespace \n XMLStreamReader getResourceAsXMLStreamReader \n Server getServerForAddress \n void recoverKeepAliveSystemProperty \n File getTestFile \n String getBasedir \n NodeList assertInvalid \n Map<String,String> getNamespaces \n InputStream getResourceAsStream \n byte[] invokeBytes \n byte[] invokeBytes \n void setKeepAliveSystemProperty \n void addDefaultNamespaces \n Reader getResourceAsReader \n void assertNoFault \n void onMessage \n void setBus \n void assertXPathEquals \n void assertXPathEquals", "output": ""}, {"instruction": "Generate java code\nused to read only single data ", "input": " String DATA_SEPARATOR \n Object report \n String ILLEGAL_DATAPATH \n String MAP_SEPARATOR \n String NO_DATA_FOUND \n\n Set<String> getSet \n void loadRowToReport \n List<String> getList \n Map<String,Integer> initializeColumnIndex \n String getCellToStringValue \n HSSFSheet getSheet \n void initializeReport \n String translateAsterix", "output": ""}, {"instruction": "Generate java code\nvalidates the collected sentences by checking the ages of each sentence and then by calling #isvalid . if extending implementation has no validation criteria , it should return always true . ", "input": " List<SentenceEvent> events \n SentenceReader reader \n List<ProviderListener<T>> listeners \n\n void fireProviderEvent \n void readingStopped \n boolean hasAll \n T createProviderEvent \n boolean isReady \n boolean isValid \n boolean hasOne \n void readingStarted \n void removeListener \n void readingPaused \n void reset \n void sentenceRead \n List<Sentence> getSentences \n void addListener", "output": ""}, {"instruction": "Generate java code\nadd a file with a relative path - should still be added and not be detected as a sym link . ", "input": " CPD cpd \n String BASE_TEST_RESOURCE_PATH \n int files \n int expectedFilesCount \n boolean canTestSymLinks \n\n void addedFile \n void prepareSymLinks \n void testFileSectionWithBrokenSymlinks \n void phaseUpdate \n void setup \n void verify \n void testFileAddedAsSymlinkAndReal", "output": ""}, {"instruction": "Generate java code\nif the supplied class has a declared method whose signature matchesthat of the supplied method , then this matching method is returned , otherwise null is returned . ", "input": " PlaceHolder placeHolder \n\n Method searchCandidates \n boolean isVisibilityBridgeMethodPair \n boolean isBridgedCandidateFor \n Method findBridgedMethod \n Method findGenericDeclaration \n boolean isResolvedTypeMatch \n boolean isBridgeMethodFor", "output": ""}, {"instruction": "Generate java code\nwrite a hashmap to a parcel , class of key and value can parcelable both ", "input": " PlaceHolder placeHolder \n\n Map<String,String> readHashMapStringAndString \n void writeHashMapStringAndString \n Map<String,V> readHashMapStringKey \n Map<K,V> readHashMap \n boolean readBoolean \n void writeHashMapStringKey \n void writeBoolean", "output": ""}, {"instruction": "Generate java code\ngets the title attribute of the stylesheetinfo object ", "input": " int AUTHOR \n int USER \n int USER_AGENT \n Stylesheet stylesheet \n int origin \n List mediaTypes \n String title \n String type \n String uri \n String content \n\n void addMedium \n void setContent \n void setStylesheet \n List getMedia \n int getOrigin \n boolean appliesToMedia \n void setOrigin \n String getContent \n void setUri \n void setTitle \n Stylesheet getStylesheet \n void setType \n String getType \n void setMedia \n void setMedia \n boolean isInline \n String getUri", "output": ""}, {"instruction": "Generate java code\nsets the modified date . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\ncurrently unused ", "input": " Throwable throwable \n T value \n boolean done \n\n boolean cancel \n void exception \n void set \n T get \n T get \n boolean isDone \n Map<String,Object> getContext", "output": ""}, {"instruction": "Generate java code\nutility function to determine the presence of a key . the default is false . ", "input": " Logger LOG \n Collection<Object[]> listeners \n\n String getParsingHelp \n void removeElementListener \n void cleanListener \n void updateListener \n void addElementListener \n void addElementListener \n void addElementListener \n void removeAllElementListeners \n String toString \n void parse \n void initialiseListener", "output": ""}, {"instruction": "Generate java code\ngets a future which returns this when the channel is successfully opened , or throws an exception if there is an error before the channel has reached the open state . after this future completes successfully , you may call paymentchannelclientconnection #incrementpayment java.math.biginteger to begin paying the server . ", "input": " SettableFuture<PaymentChannelClientConnection> channelOpenFuture \n ProtobufParser<Protos.TwoWayChannelMessage> wireParser \n PaymentChannelClient channelClient \n\n void disconnectWithoutSettlement \n void settle \n ListenableFuture<BigInteger> incrementPayment \n PaymentChannelClientState state", "output": ""}, {"instruction": "Generate java code\nreturns a string that is used to end a graph . ", "input": " String TEMP_DIR \n StringBuilder graph \n String DOT \n\n void add \n void addln \n void addln \n byte[] getGraph \n int writeGraphToFile \n int writeGraphToFile \n String start_graph \n String start_subgraph \n void readSource \n String getDotSource \n File writeDotSourceToFile \n byte[] get_img_stream \n String end_subgraph", "output": ""}, {"instruction": "Generate java code\ngets the modified date . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nint to little-endian bytes : writes x to buf offset . . . ", "input": " PlaceHolder placeHolder \n\n int leb2int \n short leb2short \n short beb2short \n void short2leb \n int ubyte2int", "output": ""}, {"instruction": "Generate java code\nmake a request to the facebook graph api with the given string parameters using an http get default method . see http://developers.facebook.com/docs/api note that this method is asynchronous and the callback will be invoked in a background thread ; operations that affect the ui will need to be posted to the ui thread or an appropriate handler . this method is deprecated . see facebook and com.facebook.request for more info . ", "input": " Facebook fb \n\n void onFileNotFoundException \n void logout \n void logout \n void onComplete \n void onIOException \n void onMalformedURLException \n void onFacebookError", "output": ""}, {"instruction": "Generate java code\nconfigures the api ", "input": " String apiKey \n OutputStream debugStream \n String scope \n SignatureType signatureType \n String callback \n String apiSecret \n Api api \n\n ServiceBuilder debug \n ServiceBuilder apiKey \n ServiceBuilder debugStream \n OAuthService build \n Api createApi \n ServiceBuilder scope \n ServiceBuilder signatureType \n ServiceBuilder callback \n ServiceBuilder apiSecret", "output": ""}, {"instruction": "Generate java code\nreturns true if the specified value was absolute even if we have a computed value for it , meaning that either the value can be used directly e.g. pixels or there is a fixed context-independent conversion for it e.g. inches . proportional types e.g. % return false . ", "input": " List TYPE_DESCRIPTIONS \n Map sacTypesStrings \n\n short guessType \n short sacPrimitiveTypeForString \n String stringForSACPrimitiveType \n boolean isNumber \n String getCssValueTypeDesc \n String cssType", "output": ""}, {"instruction": "Generate java code\ncheck whether we deal with a macintosh . ", "input": " PlaceHolder placeHolder \n\n boolean isSunJdk \n boolean isWin32", "output": ""}, {"instruction": "Generate java code\ntest for getlongitude ", "input": " Position instance \n\n void testGetLatitude \n void testSetIllegalLatitudeSouth \n void testDistanceToSelf \n void testSetIllegalLongitudeWest \n void testGetDatum \n void testSetLatitudeSouth \n void testDistanceTo \n void testSetIllegalLongitudeEast \n void testToWaypoint \n void testSetLongitudeEast \n void setUp \n void testSetLongitudeWest \n void testGetLatitudeHemisphere \n void testSetLatitudeNorth \n void testGetLongitudeHemisphere \n void testSetIllegalLatitudeNorth", "output": ""}, {"instruction": "Generate java code\ntests the rpcfilereadrequest #rpcfilereadrequest long , long , long constructor with avalid length . ", "input": " long OFFSET \n long TEMP_UFS_FILE_ID \n ByteBuf mBuffer \n long LENGTH \n\n void encodedLength \n void invalidLength \n void assertInvalid \n void encodeDecode \n void before \n void assertValid \n void assertValid \n void negativeOffset \n void validate", "output": ""}, {"instruction": "Generate java code\nreturns true if this objects chainwork is higher than the others . ", "input": " int COMPACT_SERIALIZED_SIZE \n BigInteger chainWork \n int CHAIN_WORK_BYTES \n Block header \n long serialVersionUID \n byte[] EMPTY_BYTES \n int height \n\n int getHeight \n BigInteger getChainWork \n StoredBlock deserializeCompact \n StoredBlock build \n void serializeCompact \n int hashCode \n boolean equals \n String toString \n StoredBlock getPrev \n Block getHeader", "output": ""}, {"instruction": "Generate java code\ninits the . ", "input": " Map<String,Field> dataSetFieldColumnMapping \n Logger LOGGER \n IFetcherContext fetcherContext \n IFetcherTesterDataUnitVerifier fetcherRegDataUnitVerifier \n\n String getDataSetCompareKey \n List<RegPCLTestResultDetailsEntity> verifyDataSet", "output": ""}, {"instruction": "Generate java code\nclose the connection ", "input": " Connection connection \n String targetEPR \n Hashtable<String,String> properties \n Log log \n\n AMQP.BasicProperties.Builder buildBasicProperties \n void handleException \n void handleException \n void send", "output": ""}, {"instruction": "Generate java code\nthe hash of the transaction which holds this output . ", "input": " boolean coinbase \n long serialVersionUID \n long index \n Coin value \n byte[] scriptBytes \n Sha256Hash hash \n int height \n\n Coin getValue \n int getHeight \n long getIndex \n boolean isCoinbase \n int hashCode \n void serializeToStream \n boolean equals \n String toString \n byte[] getScriptBytes", "output": ""}, {"instruction": "Generate java code\n< a > < b > < b > < / a > ", "input": " OpenTagRegister tagList \n int elmId \n\n void openedIsolatedTag \n void interleavedTags \n void newRegister \n void testSimpleNesting \n void unopenedTags \n ASTElement element", "output": ""}, {"instruction": "Generate java code\nmethod ignorablewhitespace . ", "input": " Map<String,String> mapping \n XMLStreamWriter writer \n boolean inCDATA \n\n String getPrefix \n void endPrefixMapping \n void startElement \n void startEntity \n void endCDATA \n void endDocument \n void startDocument \n void endEntity \n void startDTD \n void endDTD \n void characters \n void startCDATA \n void startPrefixMapping \n void endElement \n void skippedEntity \n void comment \n void setDocumentLocator \n void processingInstruction", "output": ""}, {"instruction": "Generate java code\nappend a hashcode for an object array . ", "input": " int iConstant \n int iTotal \n\n HashCodeBuilder appendSuper \n int toHashCode", "output": ""}, {"instruction": "Generate java code\nsets the value of the filepath property . ", "input": " String testData \n String method \n String filepath \n String step \n String stepResult \n String time \n\n void setMethod \n void setStepResult \n String getTime \n String getStep \n String getFilepath \n String getTestData \n String getMethod \n String getStepResult \n void setStep \n void setTestData \n void setTime", "output": ""}, {"instruction": "Generate java code\ndispose resources used by this printerrenderer . this does not dispose the attached printer . ", "input": " Printer _printer \n SharedContext _sharedContext \n\n Document loadDocument \n void print \n void print \n void print \n void print \n void print \n void print \n void printDialog \n void printDialog \n boolean isFocus \n boolean isHover \n LayoutContext newLayoutcontext \n boolean isActive \n RenderingContext newRenderingContext", "output": ""}, {"instruction": "Generate java code\nin contrast to #getzipname returns the member ` sname without the prepended name of the project but with the extension . todo : this is not used anywhere - shall we remove it ? ", "input": " String uniqueName \n Project project \n\n void makeUniqueName \n String getType \n String getZipName \n String toString \n void remove \n String getZipFileExtension", "output": ""}, {"instruction": "Generate java code\nreturns the number of satoshis of this monetary value . it 's deprecated in favour of accessing #value directly . ", "input": " MonetaryFormat FRIENDLY_FORMAT \n MonetaryFormat PLAIN_FORMAT \n int SMALLEST_UNIT_EXPONENT \n long value \n String currencyCode \n\n Fiat add \n int signum \n boolean isNegative \n boolean isLessThan \n String getCurrencyCode \n Fiat valueOf \n Fiat subtract \n boolean isGreaterThan \n boolean isPositive \n int smallestUnitExponent \n String toPlainString \n int compareTo \n long getValue \n String toFriendlyString \n Fiat[] divideAndRemainder \n Fiat negate \n int hashCode \n boolean equals \n boolean isZero \n Fiat divide \n long divide \n String toString \n Fiat multiply \n Fiat parseFiat", "output": ""}, {"instruction": "Generate java code\nsimply return true is the image is equal to keyword ` this ' or ` super ' . ", "input": " String THIS_DOT \n String image \n int argumentCount \n String SUPER_DOT \n String SUPER \n NameOccurrence qualifiedName \n JavaNode location \n boolean isMethodOrConstructorInvocation \n String THIS \n\n JavaNode getLocation \n boolean isMethodReference \n void setIsMethodOrConstructorInvocation \n NameOccurrence getNameForWhichThisIsAQualifier \n boolean thirdChildHasDottedName \n boolean isMethodOrConstructorInvocation \n boolean isCompoundAssignment \n boolean isOnRightHandSide \n boolean isStandAlonePostfix \n boolean isSelfAssignment \n int getArgumentCount \n boolean hasAssignmentOperator \n boolean isPartOfQualifiedName \n boolean useThisOrSuper \n int hashCode \n boolean equals \n boolean isOnLeftHandSide \n void setArgumentCount \n String toString \n void setNameWhichThisQualifies \n String getImage", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.ttmparser #gettime . ", "input": " String EXAMPLE \n TTMParser ttm \n TTMParser empty \n\n void testGetAcquisitionType \n void testGetDistance \n void testSetStatus \n void testSetNumber \n void testSetDistanceOfCPA \n void testConstructor \n void testSetCourse \n void testGetName \n void testGetNumber \n void testGetDistanceOfCPA \n void setUp \n void testGetCourse \n void testSetReferenceTrue \n void testSetReferenceFalse \n void testSetAcquisitionType \n void testSetBearing \n void testGetBearing \n void testSetDistance \n void testSetTimeToCPA \n void testSetTime \n void testGetSpeed \n void testGetStatus \n void testGetTimeToCPA \n void testSetName \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\ngets the value of the string1 property . ", "input": " String string1 \n\n void setString1", "output": ""}, {"instruction": "Generate java code\nsets the username of the user ", "input": " long serialVersionUID \n String userStoreDomain \n String userName \n String tenantDomain \n\n String getTenantDomain \n String getUserStoreDomain \n void setUserStoreDomain \n User build \n String getUserName \n String toString \n void setTenantDomain", "output": ""}, {"instruction": "Generate java code\nmarks this directory as one that has been removed , indicating we should also remove all the directory contents . ", "input": " Collection<File> m_newDirectoryContents \n Collection<File> m_storedDirectoryContents \n Logger m_log \n boolean m_removed \n File m_directory \n boolean m_markedForRemoval \n\n boolean removed \n int hashCode \n boolean equals \n boolean markedForRemoval \n File getDirectory \n boolean shouldUpdate \n void setRemoved \n Collection<File> getFiles \n void updated", "output": ""}, {"instruction": "Generate java code\ngets the visited attribute of the standardattributeresolver object ", "input": " NamespaceHandler nsh \n UserInterface ui \n UserAgentCallback uac \n\n String getClass \n boolean isLink \n String getAttributeValue \n String getAttributeValue \n boolean isHover \n boolean isFocus \n String getLang \n String getID \n String getNonCssStyling \n String getElementStyling \n boolean isActive", "output": ""}, {"instruction": "Generate java code\nexecutes the specified javascript command ", "input": " WebEngine webEngine \n\n void load \n void loadContent \n void setOnAlert \n Worker<Void> getLoadWorker \n void setOnError", "output": ""}, {"instruction": "Generate java code\ncomplementary operation to filteronly ", "input": " Result globalLog \n List<ResultEntry> log \n Map<ResultObserver,ResultObserverSettings> observers \n\n Result getGlobalResult \n Result filterOut \n Result filterOut \n Result filterOut \n boolean removeObserver \n void addObserverLogSource \n void setSources \n boolean remove \n Iterator<ResultEntry> iterator \n boolean removeAll \n ResultEntry get \n Object[] toArray \n T[] toArray \n boolean registerObserver \n boolean add \n void removeObserverLogSource \n boolean containsAll \n void clear \n boolean isEmpty \n void setObserverLevel \n boolean contains \n int size \n boolean addAll \n List<String> getSoures \n String toString \n void notifyObserversClear \n void notifyObserversAdd \n boolean retainAll", "output": ""}, {"instruction": "Generate java code\ncomputes a metric identified by its code on a operation ast node . ", "input": " PackageStats TOP_LEVEL_PACKAGE \n OperationMetric calculator \n\n PackageStats getTopLevelPackageStats \n ClassMetric getCalculator \n OperationMetric getCalculator", "output": ""}, {"instruction": "Generate java code\nupdate the set of listeners based on the given event . the default implementation just removes all listeners , and then re-initialises completely - this is method 1 . a more efficient way would be to dissect the propertychangeevent , and only adapt the listeners that need to be adapted - this is method 2 . method 2 is explained by the code below that is commented out . method 1 is the easiest to implement , since at every arrival of an event , we just remove all old listeners , and then inspect the current model , and add listeners where we need them . i.e. the advantage is that we only need to traverse the model structure in one location , i.e. the initialiselistener method . ", "input": " Logger LOG \n Collection<Object[]> listeners \n\n String getParsingHelp \n boolean isValue \n void removeElementListener \n void cleanListener \n void addElementListener \n void addElementListener \n void addElementListener \n void removeAllElementListeners \n String toString \n void parse \n void initialiseListener", "output": ""}, {"instruction": "Generate java code\ncreates a general purpose solver . use this if you are not sure what you need . ", "input": " PlaceHolder placeHolder \n\n LinearSolver<DenseMatrix64F> leastSquares \n LinearSolver<DenseMatrix64F> pseudoInverse \n LinearSolver<DenseMatrix64F> linear \n LinearSolver<DenseMatrix64F> symmPosDef \n AdjustableLinearSolver adjustable \n LinearSolver<DenseMatrix64F> leastSquaresQrPivot", "output": ""}, {"instruction": "Generate java code\ngets the data set id . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nsets the modified date . ", "input": " String comments \n String inactivationReasonType \n Timestamp receiptDate \n String isActive \n BigDecimal predecessorId \n String srcFileName \n long serialVersionUID \n String srcUniqueFileName \n BigDecimal successorId \n Timestamp createdDate \n List<PCLDataUnitEntity> pclDataUnits \n long dataSetId \n BigDecimal feedId \n BigDecimal fileSize \n String destFileName \n String checksum \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isUpdate \n String receiptDateType \n String status \n\n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n long getDataSetId \n void setReceiptDateType \n void setIsPrepopulated \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getStatus \n String getDestFileName \n String getIsUpdate \n BigDecimal getFileSize \n List<PCLDataUnitEntity> getPclDataUnits \n void setPclDataUnits \n void setInactivationReasonType \n Timestamp getReceiptDate \n String getComments \n Timestamp getCreatedDate \n void setComments \n PCLDataUnitEntity removePclDataUnit \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setFileSize \n BigDecimal getPredecessorId \n void setChecksum \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setRunId \n void setReceiptDate \n void setStatus \n Timestamp getModifiedDate \n String getIsActive \n void setSuccessorId \n void setDestFileName \n PCLDataUnitEntity addPclDataUnit \n void setCreatedDate \n void setDataSetId \n void setPredecessorId \n void setIsActive \n void setChecksumType", "output": ""}, {"instruction": "Generate java code\nalternate initialization entry point for use by argoeclipse . it leaves out telling gef about bundles that it wo n't be able to access . note : this must be called before any other methods are called to work properly . ", "input": " Logger LOG \n Locale systemDefaultLocale \n String BUNDLES_PATH \n Map<String,ResourceBundle> bundles \n List<ClassLoader> classLoaders \n boolean initialized \n\n void initInternal \n void init \n void init \n String localize \n String localize \n String getName \n void addClassLoader \n void loadBundle \n String messageFormat \n Locale getSystemDefaultLocale \n Locale[] getLocales \n void setLocale \n void setLocale", "output": ""}, {"instruction": "Generate java code\nsimilar to load64 , but allows offset + 8 > input.length , padding the result with zeroes . this has to explicitly reverse the order of the bytes as it packs them into the result which makes it slower than the native version . ", "input": " int BYTE_ARRAY_BASE_OFFSET \n Unsafe theUnsafe \n LittleEndianBytes byteArray \n\n int load32 \n long load64 \n void putLongLittleEndian \n void putLongLittleEndian \n void putLongLittleEndian \n void putLongLittleEndian \n boolean usingUnsafe \n sun.misc.Unsafe getUnsafe \n long getLongLittleEndian \n long getLongLittleEndian \n long getLongLittleEndian \n long getLongLittleEndian \n void store64", "output": ""}, {"instruction": "Generate java code\nreturns the numeric value of a configuration property . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n String getString \n String getString \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n void setString \n boolean load \n boolean load \n boolean load \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nincrements the current value . ", "input": " boolean consoleMode \n org.apache.log4j.Logger logger \n int maxValue \n boolean showProgress \n ProgressMonitor progressMonitor \n StringBuffer log \n String currentMessage \n List<String> debugMessages \n TreeSet<String> warnings \n int curValue \n HashMap<String,Integer> warningCounts \n\n void setCurValue \n void setConsoleModeAndParseShowProgress \n void setShowProgress \n void setCurrentMessage \n int getMaxValue \n String getLog \n void logWarning \n ArrayList<String> getWarnings \n void logDebug \n ArrayList<String> getMessages \n boolean isConsoleMode \n List<String> getDebugMessages \n void setMaxValue \n boolean isRunningOnServer \n String getCurrentMessage \n void setConsoleMode \n int getCurValue \n boolean isShowProgress \n double getPercentComplete", "output": ""}, {"instruction": "Generate java code\nreturns the collection of nodes in this network which are connected to edge . ", "input": " Map<String,Node> nodesByIds \n Graph<Node,Edge> graph \n\n Collection<Node> getNodes \n Node[] getNodes \n void addNode \n Collection findEdgeSet \n Node getNodeById \n Collection<Node> getNeighbors \n boolean removeEdge \n int countNodes \n int countNodes \n int getDegree \n Node getOpposite \n Collection<Edge> getEdges \n void addEdge \n int coundEdges \n boolean removeNode", "output": ""}, {"instruction": "Generate java code\nobtains the address of the local test server . ", "input": " LocalTestServer localServer \n\n void tearDown", "output": ""}, {"instruction": "Generate java code\nget the ws-reliablemessaging namespace to be used for encoding and decoding messages . ", "input": " SequenceType sequence \n long messageNumber \n SourceSequence sourceSequence \n CloseSequenceType closeSequence \n Collection<SequenceAcknowledgement> acks \n boolean lastMessage \n String namespaceURI \n Collection<AckRequestedType> acksRequested \n\n void setSequence \n void setSequence \n void exposeAs \n boolean isLastMessage \n void setAcks \n CloseSequenceType getCloseSequence \n long getMessageNumber \n SourceSequence getSourceSequence \n void setCloseSequence \n void setAcksRequested \n Collection<AckRequestedType> getAcksRequested \n Collection<SequenceAcknowledgement> getAcks \n SequenceType getSequence \n void addAck", "output": ""}, {"instruction": "Generate java code\nremove a terminal ", "input": " TerminalDeviceRepository repository \n\n void addDevice \n TerminalDevice getStatus \n Set<Schedule> getSchedule \n void setStatus", "output": ""}, {"instruction": "Generate java code\nestimates the number of distinct field values in the table , which is obtainable from the statistics manager . ", "input": " Transaction tx \n TableInfo ti \n StatInfo si \n\n Schema schema \n int blocksAccessed \n int recordsOutput \n Scan open", "output": ""}, {"instruction": "Generate java code\nwait until the given sequence number has been acknowledged ", "input": " boolean storeStatistics \n MeanValue dgSendInterval \n SenderLossList senderLossList \n boolean paused \n long iterationStart \n UDTSession session \n Map<Long,DataPacket> sendBuffer \n boolean started \n AtomicReference<CountDownLatch> waitForSeqAckLatch \n Thread senderThread \n long lastAckSequenceNumber \n boolean stopped \n long largestSentSequenceNumber \n CountDownLatch startLatch \n UDPEndPoint endpoint \n Logger logger \n AtomicReference<CountDownLatch> waitForAckLatch \n MeanValue dgSendTime \n AtomicInteger unacknowledged \n BlockingQueue<DataPacket> sendQueue \n MeanThroughput throughput \n long currentSequenceNumber \n UDTStatistics statistics \n Object sendLock \n\n void sendAck2 \n void receive \n void onNAKPacketReceived \n void onAcknowledge \n void handleResubmit \n void sendKeepAlive \n void start \n void senderAlgorithm \n void pause \n boolean haveAcknowledgementFor \n void putUnacknowledgedPacketsIntoLossList \n void initMetrics \n boolean sendUdtPacket \n void stop \n long getLargestSentSequenceNumber \n void doStart \n boolean isSentOut \n boolean haveLostPackets \n long getLastAckSequenceNumber \n void send \n long getNextSequenceNumber \n long getCurrentSequenceNumber", "output": ""}, {"instruction": "Generate java code\ntests the rpcfilereadrequest #getencodedlength method . ", "input": " long OFFSET \n long TEMP_UFS_FILE_ID \n ByteBuf mBuffer \n long LENGTH \n\n void invalidLength \n void assertInvalid \n void encodeDecode \n void before \n void encodeDecodeData \n void validLength \n void getPayloadDataBuffer \n void assertValid \n void assertValid \n void negativeOffset \n void validate", "output": ""}, {"instruction": "Generate java code\nfactory method for creating a new springchain with default springconfig . ", "input": " int DEFAULT_ATTACHMENT_TENSION \n CopyOnWriteArrayList<SpringListener> mListeners \n SpringConfig mAttachmentSpringConfig \n int DEFAULT_ATTACHMENT_FRICTION \n int DEFAULT_MAIN_TENSION \n int mControlSpringIndex \n SpringConfigRegistry registry \n SpringConfig mMainSpringConfig \n SpringSystem mSpringSystem \n int DEFAULT_MAIN_FRICTION \n CopyOnWriteArrayList<Spring> mSprings \n int id \n\n SpringConfig getMainSpringConfig \n List<Spring> getAllSprings \n SpringChain setControlSpringIndex \n void onSpringActivate \n Spring getControlSpring \n void onSpringAtRest \n void onSpringUpdate \n SpringChain addSpring \n void onSpringEndStateChange \n SpringConfig getAttachmentSpringConfig", "output": ""}, {"instruction": "Generate java code\ncheck whether a given file exists in the system ", "input": " FileBasedConfigManager instance \n Log log \n\n String getTextValue \n List<String> getTextValueList \n FileBasedConfigManager getInstance \n void addServiceProviders \n SAMLSSOServiceProviderDO[] readServiceProvidersFromFile", "output": ""}, {"instruction": "Generate java code\ngets the checksum type . ", "input": " String comments \n String inactivationReasonType \n Timestamp receiptDate \n String isActive \n BigDecimal predecessorId \n String srcFileName \n long serialVersionUID \n String srcUniqueFileName \n BigDecimal successorId \n Timestamp createdDate \n List<PCLDataUnitEntity> pclDataUnits \n long dataSetId \n BigDecimal feedId \n BigDecimal fileSize \n String destFileName \n String checksum \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isUpdate \n String receiptDateType \n String status \n\n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n long getDataSetId \n void setReceiptDateType \n void setIsPrepopulated \n BigDecimal getRunId \n void setSrcFileName \n String getSrcFileName \n String getChecksum \n String getStatus \n String getDestFileName \n String getIsUpdate \n BigDecimal getFileSize \n List<PCLDataUnitEntity> getPclDataUnits \n void setPclDataUnits \n void setInactivationReasonType \n Timestamp getReceiptDate \n String getComments \n Timestamp getCreatedDate \n void setComments \n PCLDataUnitEntity removePclDataUnit \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setFileSize \n BigDecimal getPredecessorId \n void setChecksum \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setRunId \n void setReceiptDate \n void setStatus \n Timestamp getModifiedDate \n String getIsActive \n void setSuccessorId \n void setDestFileName \n PCLDataUnitEntity addPclDataUnit \n void setModifiedDate \n void setCreatedDate \n void setDataSetId \n void setPredecessorId \n void setIsActive \n void setChecksumType", "output": ""}, {"instruction": "Generate java code\ntest of getname method , of class testdosattack . ", "input": " PlaceHolder placeHolder \n\n void testGetAuthor \n void testCreateTamperedRequest \n void setUpClass \n void testGetVersion \n void testGetCountermeasures \n void setUp \n void tearDownClass \n void testGetDescription \n void testInitializePlugin \n void tearDown", "output": ""}, {"instruction": "Generate java code\nget the number of milliseconds for the inactivity timeout . ", "input": " DeliveryAssurance deliveryAssurance \n Long inactivityTimeout \n Long acknowledgementInterval \n String rmNamespace \n boolean sequenceTransportSecurityRequired \n String rm10AddressingNamespace \n boolean inOrder \n boolean exponentialBackoff \n Long baseRetransmissionInterval \n boolean sequenceSTRRequired \n\n void setInactivityTimeout \n void setRMNamespace \n Long getInactivityTimeout \n void setAcknowledgementInterval \n void setDeliveryAssurance \n long getAcknowledgementIntervalTime \n Long getAcknowledgementInterval \n void setSequenceSTRRequired \n boolean isSequenceTransportSecurityRequired \n String getAddressingNamespace \n void setRM10AddressingNamespace \n String getRMNamespace \n ProtocolVariation getProtocolVariation \n String getRM10AddressingNamespace \n boolean isSequenceSTRRequired \n void setExponentialBackoff \n boolean isExponentialBackoff \n void setInOrder \n Long getBaseRetransmissionInterval \n boolean isInOrder \n void setSequenceTransportSecurityRequired \n void setBaseRetransmissionInterval \n DeliveryAssurance getDeliveryAssurance", "output": ""}, {"instruction": "Generate java code\ncreate a sla evaluator to be used during materialization ", "input": " Integer HOUR \n Integer MINUTE \n\n ELEvaluator createLazyEvaluator \n String make2Digits \n void setConfigToEval \n ELEvaluator createELEvaluatorForGroup \n ELEvaluator createELEvaluatorForDataEcho \n ELEvaluator createURIELEvaluator \n SyncCoordDataset getDSObject \n ELEvaluator createInstancesELEvaluator \n ELEvaluator createInstancesELEvaluator \n ELEvaluator createDataEvaluator", "output": ""}, {"instruction": "Generate java code\ncreates a parser for specified nmea 0183 sentence string . the parser implementation is selected from registered parsers according to sentence type . the returned instance must be cast in to correct sentence interface , for which the type should first be checked by using the sentence #getsentenceid method . ", "input": " SentenceFactory instance \n Map<String,Class<? extends SentenceParser>> parsers \n\n void unregisterParser \n boolean hasParser \n List<String> listParsers \n void reset \n void registerParser \n SentenceFactory getInstance \n Sentence createParserImpl", "output": ""}, {"instruction": "Generate java code\nreturns the timestamp service . ", "input": " PlaceHolder placeHolder \n\n AccessTokenExtractor getAccessTokenExtractor \n String getAccessTokenEndpoint \n OAuthService createService \n String getAuthorizationUrl \n SignatureService getSignatureService \n BaseStringExtractor getBaseStringExtractor \n Verb getAccessTokenVerb \n String getRequestTokenEndpoint \n RequestTokenExtractor getRequestTokenExtractor \n Verb getRequestTokenVerb \n HeaderExtractor getHeaderExtractor", "output": ""}, {"instruction": "Generate java code\nmanually set the last version name - for testing purposes only ", "input": " String lastVersion \n StringBuffer sb \n Listmode listMode \n String thisVersion \n Context context \n String VERSION_KEY \n String EOCL \n String TAG \n\n void openList \n boolean firstRun \n String getLastVersion \n String getLog \n String getLog \n String getThisVersion \n AlertDialog getFullLogDialog \n AlertDialog getLogDialog \n String getFullLog \n boolean firstRunEver \n void closeList \n AlertDialog getDialog", "output": ""}, {"instruction": "Generate java code\ninitialize the hessian stream with the underlying input stream . ", "input": " HessianRemoteResolver resolver \n byte[] _buffer \n\n void readEnd \n HessianRemoteResolver getRemoteResolver \n int addRef \n String getMethod \n String readHeader \n Object readReply \n void resetReferences \n void setRef \n void startReply \n void startReplyBody \n int readCall \n double readDouble \n InputStream readInputStream \n Object readRemote \n void skipOptionalCall \n int readInt \n void close \n int readMapStart \n int readMethodArgLength \n void readListEnd \n boolean readToOutputStream \n Reader getReader \n String readString \n void startCall \n boolean isEnd \n Object readObject \n Object readObject \n void completeCall \n void readMapEnd \n long readUTCDate \n long readLong \n int readListStart \n int readLength \n void setSerializerFactory \n void setRemoteResolver \n String readMethod \n Object readRef \n void completeReply \n byte[] readBytes \n boolean readBoolean \n void readNull \n String readType \n org.w3c.dom.Node readNode", "output": ""}, {"instruction": "Generate java code\nset whether proof of possession is required or not to cancel a token ", "input": " Logger LOG \n boolean verifyProofOfPossession \n\n boolean canHandleToken \n boolean matchDOMSignatureSecret \n boolean matchStreamingSignatureSecret \n boolean matchKey \n TokenCancellerResponse cancelToken", "output": ""}, {"instruction": "Generate java code\nthis method returns policy publisher ", "input": " PolicyPublisher policyPublisher \n PolicyDataStore policyDataStore \n Log log \n EntitlementDataFinder entitlementDataFinder \n PolicyStoreManager policyStoreManager \n ConcurrentHashMap<String,EntitlementAdminEngine> entitlementAdminEngines \n PolicyVersionManager versionManager \n PAPPolicyStoreManager papPolicyStoreManager \n Set<PAPStatusDataHandler> papStatusDataHandlers \n Object lock \n\n PolicyVersionManager getVersionManager \n PolicyStoreManager getPolicyStoreManager \n EntitlementDataFinder getEntitlementDataFinder \n Set<PAPStatusDataHandler> getPapStatusDataHandlers \n PAPPolicyStoreManager getPapPolicyStoreManager \n PolicyDataStore getPolicyDataStore \n EntitlementAdminEngine getInstance", "output": ""}, {"instruction": "Generate java code\nget application options . currently only video options . ", "input": " String appPath \n Keys keys \n Machine machine \n String logPath \n Options options \n HashMap<Integer,Playlist> playlists \n DefaultListModel genreListModel \n Logger logger \n DbConnJaMuz db \n ArrayList<String> tags \n\n void logConfig \n boolean getCurrentMachine \n boolean createLog \n Proxy getProxy \n void readTags \n List<Playlist> getPlaylistsVisible \n void readGenres \n boolean setProxy \n boolean connectDatabase \n Playlist getPlaylist \n boolean readPlaylists \n Logger getLogger \n ArrayList<String> getTags \n boolean configure \n Options getKeys \n File getFile \n DbConnJaMuz getDb \n Machine getMachine \n DefaultListModel getGenreListModel \n DefaultHttpClient getHttpClient \n String getLogPath \n List<String> getGenres \n List<Playlist> getPlaylists", "output": ""}, {"instruction": "Generate java code\nshould be called before once before any other method is called ", "input": " GeneralMotorCon ourInstance \n int spin90Time \n String TAG \n int batLvl \n long threadTimer \n int spinSpeed \n CommandManager cmd \n int hoverTime \n int speed \n int spin90Speed \n ARDrone drone \n int spinTime \n\n void spin90Left \n void spinRight \n void takeoff \n void forward \n void spinLeft \n void right \n void lowerAltitude \n void spin90Right \n void landing \n void left \n void backward \n GeneralMotorCon getInstance \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n void raiseAltitude", "output": ""}, {"instruction": "Generate java code\ncall back when loading . ", "input": " BitmapSetter<T> bitmapSetter \n\n void onPreLoad \n void onLoadCompleted \n Drawable getDrawable \n void onLoadFailed \n void setBitmap \n void onLoadStarted \n void setBitmapSetter \n void setDrawable", "output": ""}, {"instruction": "Generate java code\nset the error queue . ", "input": " String types \n String verbose \n Map<String,Integer> reportTopics \n String dataflow \n Stack<String> should_report \n String frontend \n String imports \n ErrorQueue eq \n String loader \n String time \n String debug \n String cfg \n String context \n String visit \n String resolver \n Collection<String> topics \n String serialize \n boolean noReporting \n String errors \n\n boolean should_report \n boolean should_report \n boolean should_report \n int level \n void pushTopic \n void popTopic \n void addTopic \n ErrorQueue getQueue \n void report \n void report \n void setTopic", "output": ""}, {"instruction": "Generate java code\nsets the stylesheet attribute of the stylesheetinfo object ", "input": " int AUTHOR \n int USER \n int USER_AGENT \n Stylesheet stylesheet \n int origin \n List mediaTypes \n String title \n String type \n String uri \n String content \n\n void addMedium \n void setContent \n List getMedia \n int getOrigin \n boolean appliesToMedia \n void setOrigin \n String getContent \n void setUri \n void setTitle \n Stylesheet getStylesheet \n void setType \n String getTitle \n String getType \n void setMedia \n void setMedia \n boolean isInline \n String getUri", "output": ""}, {"instruction": "Generate java code\ngets the value of the auth property . ", "input": " Auth auth \n\n void setAuth", "output": ""}, {"instruction": "Generate java code\nputs the specified name/value pair in the specified json object . ", "input": " Logger LOG \n\n int extractInt \n Collection<InetSocketAddress> getInetAddresses", "output": ""}, {"instruction": "Generate java code\ndispatches an accessibilityevent to the host view first and thento its children for adding their text content to the event . the default implementation behaves as view #dispatchpopulateaccessibilityevent accessibilityevent view #dispatchpopulateaccessibilityevent accessibilityevent forthe case of no accessibility delegate been set . ", "input": " AccessibilityDelegateImpl IMPL \n Object DEFAULT_DELEGATE \n Object mBridge \n\n Object newAccessiblityDelegateDefaultImpl \n Object newAccessiblityDelegateDefaultImpl \n void onInitializeAccessibilityEvent \n void onInitializeAccessibilityEvent \n void onInitializeAccessibilityEvent \n Object getBridge \n void sendAccessibilityEventUnchecked \n void sendAccessibilityEventUnchecked \n void sendAccessibilityEventUnchecked \n void onPopulateAccessibilityEvent \n void onPopulateAccessibilityEvent \n void onPopulateAccessibilityEvent \n boolean onRequestSendAccessibilityEvent \n boolean onRequestSendAccessibilityEvent \n boolean onRequestSendAccessibilityEvent \n void onInitializeAccessibilityNodeInfo \n void onInitializeAccessibilityNodeInfo \n void onInitializeAccessibilityNodeInfo \n void sendAccessibilityEvent \n void sendAccessibilityEvent \n void sendAccessibilityEvent \n Object newAccessiblityDelegateBridge \n Object newAccessiblityDelegateBridge", "output": ""}, {"instruction": "Generate java code\nget the color name of the color that is exactly equal to the given hex color value as a 6-digit hex string . ", "input": " int r \n int b \n Map<RGB,String> namedColors \n int g \n\n int hashCode \n boolean equals \n Color getColor \n String getClosestNamedColor \n String getClosestNamedColor \n double calculateColorDistSq", "output": ""}, {"instruction": "Generate java code\nreturns the schema of the index join . ", "input": " IndexInfo ii \n Plan p1 \n Plan p2 \n String joinfield \n Schema sch \n\n int blocksAccessed \n int distinctValues \n int recordsOutput \n Scan open", "output": ""}, {"instruction": "Generate java code\ngets the batch id . ", "input": " Long totalElapsedMinutes \n List<TestResultDTO> testResultLst \n String startTime \n String endTime \n Long batchId \n String batchStatus \n Long totalElapsedSeconds \n\n void setBatchStatus \n Long getTotalElapsedSeconds \n void setBatchId \n void setTotalElapsedMinutes \n void setTestResultLst \n String getEndTime \n Long getTotalElapsedMinutes \n void setEndTime \n void setTotalElapsedSeconds \n String toString \n String getStartTime \n void setStartTime \n List<TestResultDTO> getTestResultLst \n String getBatchStatus", "output": ""}, {"instruction": "Generate java code\nadds a one-way connection to the map . ", "input": " Hashtable<String,Point2D> locationPositions \n LabeledGraph<String,Double> links \n\n Double getDistance \n void clear \n String randomlyGenerateDestination \n void clearLinks \n void setPosition \n void addBidirectionalLink \n void removeUnidirectionalLink \n Point2D getPosition \n void removeBidirectionalLink \n boolean isLocation \n List<String> getLocations \n List<String> getLocationsLinkedTo \n void setDistAndDirToRefLocation", "output": ""}, {"instruction": "Generate java code\nadds a string field to the schema . the length is the conceptual length of the field . for example , if the field is defined as varchar 8 , then its length is 8 . ", "input": " int length \n int type \n Map<String,FieldInfo> info \n\n void add \n void addAll \n void addField \n void addIntField \n int length \n Collection<String> fields \n int type \n boolean hasField", "output": ""}, {"instruction": "Generate java code\nassert that a collection has elements ; that is , it must not be null and must have at least one element.assert.notempty collection , `` collection must have elements '' ; ", "input": " PlaceHolder placeHolder \n\n void isTrue \n void isTrue \n void isAssignable \n void isAssignable \n void notNull \n void notNull \n void isNull \n void isNull \n void noNullElements \n void noNullElements \n void isInstanceOf \n void isInstanceOf \n void state \n void state", "output": ""}, {"instruction": "Generate java code\nset up . ", "input": " TransferManager mManager \n String BUCKET_PREFIX \n AmazonS3Client mClient \n String DST \n S3AUnderFileSystem mS3UnderFileSystem \n String SRC \n String ACCOUNT_OWNER \n String PATH \n String BUCKET_NAME \n short BUCKET_MODE \n\n void renameOnAmazonClientException \n void deleteNonRecursiveOnAmazonClientException \n void deleteRecursiveOnAmazonClientException", "output": ""}, {"instruction": "Generate java code\ngets the bloack size . ", "input": " long tStart \n long qStart \n long tStop \n int blockSize \n\n long getQStart \n long getTStart \n long getTStop", "output": ""}, {"instruction": "Generate java code\nreturns true if property has been defined in this style . ", "input": " Map cascadedProperties \n String fingerprint \n CascadedStyle emptyCascadedStyle \n\n PropertyDeclaration createLayoutPropertyDeclaration \n java.util.Iterator getCascadedPropertyDeclarations \n PropertyDeclaration propertyByName \n CascadedStyle createLayoutStyle \n CascadedStyle createLayoutStyle \n CascadedStyle createLayoutStyle \n int countAssigned \n void addProperties \n CascadedStyle createAnonymousStyle \n String getFingerprint \n IdentValue getIdent", "output": ""}, {"instruction": "Generate java code\nchecks if is sp error out . ", "input": " Integer errorCode \n String errorMsg \n\n void setErrorMsg \n Integer getErrorCode \n String toString \n void setErrorCode \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nwrite the body of the response . ", "input": " int status \n int INFINITY \n HttpServletRequest request \n URI base \n HttpServletResponse response \n\n URI lookup \n int getDepth \n InputStream read \n String getNormalizedPath \n URI getDestination \n String getMethod \n int getStatus \n boolean hasRequestBody \n void setStatus \n void setHeader \n boolean getOverwrite \n String getOriginalPath \n void setContentType \n Date getIfModifiedSince", "output": ""}, {"instruction": "Generate java code\nreturns the list as a string representation . ", "input": " List<String> log \n\n List<String> get \n void clean \n void append", "output": ""}, {"instruction": "Generate java code\nthe hashcode of a move is 8y + x. ", "input": " int x \n int y \n\n int getX \n int getY \n boolean equals \n String toString", "output": ""}, {"instruction": "Generate java code\nreplaces the current maximum by the field value in the current record , if it is higher . ", "input": " Constant val \n String fldname \n\n String fieldName \n void processFirst \n Constant value", "output": ""}, {"instruction": "Generate java code\ncheck for connection reset ", "input": " long duration \n String content \n\n void setDuration \n void setContent \n long getDuration \n boolean isReadTimedOut \n boolean isSOAPFault \n String getContent \n boolean isEmptyResponse", "output": ""}, {"instruction": "Generate java code\ngets a u2fservice instance . ", "input": " U2FService u2FService \n Log log \n U2F u2f \n Map<String,String> requestStorage \n\n ArrayList<String> getDeviceMetadata \n boolean isDeviceRegistered \n RegisterRequestData startRegistration \n void removeAllRegistrations \n void removeRegistration \n void addRegistration \n void finishAuthentication \n AuthenticateRequestData startAuthentication \n Iterable<DeviceRegistration> getRegistrations \n void finishRegistration", "output": ""}, {"instruction": "Generate java code\nget / dish-collections / : id : get the `` id '' dishcollection . ", "input": " Logger log \n DishCollectionService dishCollectionService \n\n ResponseEntity<List<DishCollection>> getAllDishCollections \n ResponseEntity<DishCollection> updateDishCollection \n ResponseEntity<DishCollection> createDishCollection \n ResponseEntity<Void> deleteDishCollection", "output": ""}, {"instruction": "Generate java code\ncreates a scriptsig that can redeem a pay-to-pubkey output . ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder data \n Script createMultiSigOutputScript \n Script build \n Script createMultiSigInputScriptBytes \n ScriptBuilder smallNum \n Script createP2SHOutputScript \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript", "output": ""}, {"instruction": "Generate java code\nchecks the behavior when the issuer is not known . ", "input": " ServerConfiguration mockServerConfig \n String issuer \n StaticClientConfigurationService service \n RegisteredClient mockClient \n\n void getClientConfiguration_success \n void prepare", "output": ""}, {"instruction": "Generate java code\nprovide the id to the extradhcpoption 's builder . ", "input": " String optionValue \n String id \n String optionName \n\n Builder toBuilder \n Objects.ToStringHelper string \n Builder optionValue \n Builder fromExtraDhcpOption \n String getId \n String getOptionName \n ExtraDhcpOption build \n int hashCode \n String getOptionValue \n boolean equals \n Builder builder \n String toString \n Builder id \n Builder optionName", "output": ""}, {"instruction": "Generate java code\nsetea si la cuenta esta expirada o no . ", "input": " String password \n Date credentialsExpirationDate \n Integer loginsFallidos \n Collection<GrantedAuthority> grantedAuthorities \n boolean credentialsNonExpired \n boolean accountNonExpired \n Long id \n boolean enabled \n String email \n String username \n boolean accountNonLocked \n String nombres \n\n void setCredentialsNonExpired \n void setPassword \n Date getCredentialsExpirationDate \n void setUsername \n void setAccountNonLocked \n String getNombres \n boolean isAccountNonLocked \n Long getId \n void setNombres \n Collection<GrantedAuthority> getAuthorities \n String getUsername \n void setEnabled \n String getPassword \n void setEmail \n void setAuthorities \n boolean isAccountNonExpired \n boolean isCredentialsNonExpired \n boolean isEnabled \n String getEmail \n void setId \n void setCredentialsExpirationDate", "output": ""}, {"instruction": "Generate java code\ngets the lang attribute of the standardattributeresolver object ", "input": " NamespaceHandler nsh \n UserInterface ui \n UserAgentCallback uac \n\n String getClass \n boolean isLink \n String getAttributeValue \n String getAttributeValue \n boolean isVisited \n boolean isHover \n boolean isFocus \n String getID \n String getNonCssStyling \n String getElementStyling \n boolean isActive", "output": ""}, {"instruction": "Generate java code\nget the action that can redo the last undone action . ", "input": " ProjectActions theInstance \n ActionRemoveFromDiagram removeFromDiagram \n AbstractAction redoAction \n ActionUndo undoAction \n\n void determineRemoveEnabled \n void targetSet \n void jumpToDiagramShowing \n AbstractAction getUndoAction \n void targetRemoved \n AbstractAction getRemoveFromDiagramAction \n void setTarget \n void propertyChange \n ProjectActions getInstance \n void targetAdded", "output": ""}, {"instruction": "Generate java code\nreturn list of devices as collection ", "input": " HashMap<Integer,Device> devices \n ArrayList<Option> options \n String name \n String description \n HashMap<Integer,StatSource> statSources \n\n boolean read \n String getName \n String getOptionValue \n Option getOption \n Option getOption \n ArrayList<Option> getOptions \n Collection<StatSource> getStatSources \n String getDescription \n StatSource getStatSource \n Device getDevice", "output": ""}, {"instruction": "Generate java code\nsetea si la cuenta esta bloqueada o no . ", "input": " String password \n Date credentialsExpirationDate \n Integer loginsFallidos \n Collection<GrantedAuthority> grantedAuthorities \n boolean credentialsNonExpired \n boolean accountNonExpired \n Long id \n boolean enabled \n String email \n String username \n boolean accountNonLocked \n String nombres \n\n void setCredentialsNonExpired \n void setPassword \n Date getCredentialsExpirationDate \n void setUsername \n String getNombres \n void setAccountNonExpired \n boolean isAccountNonLocked \n Long getId \n void setNombres \n Collection<GrantedAuthority> getAuthorities \n String getUsername \n void setEnabled \n String getPassword \n void setEmail \n void setAuthorities \n boolean isAccountNonExpired \n boolean isCredentialsNonExpired \n boolean isEnabled \n String getEmail \n void setId \n void setCredentialsExpirationDate", "output": ""}, {"instruction": "Generate java code\nreturn all stations ", "input": " LineStationDao lineStationDao \n Map<String,Station> stationCache \n StationDao stationDao \n\n List<Station> getStationsByVehicle \n List<Station> getStationsByVehicle \n Station getStationByName \n void save \n void save \n List<Station> getStations \n List<Station> findNearLocation", "output": ""}, {"instruction": "Generate java code\nunpins any buffers still pinned by this transaction . ", "input": " BufferMgr bufferMgr \n List<Block> pins \n Map<Block,Buffer> buffers \n\n Block pinNew \n Buffer getBuffer \n void pin \n void unpin", "output": ""}, {"instruction": "Generate java code\nlog a debug message to the context logger . ", "input": " boolean debug \n ServletContext context \n String servletName \n\n void log \n void log \n void doLog", "output": ""}, {"instruction": "Generate java code\ndetermine if this gitblit instance is actively serving git repositories or if it is merely a repository viewer . ", "input": " IStoredSettings settings \n ServerStatus serverStatus \n Logger logger \n File baseFolder \n TimeZone timezone \n ServerSettings settingsModel \n\n boolean isDebugMode \n IStoredSettings getSettings \n RuntimeManager start \n void logTimezone \n File getFileOrFolder \n File getFileOrFolder \n boolean updateSettings \n ServerStatus getStatus \n ServerSettings getSettingsModel \n void setBaseFolder \n RuntimeManager stop \n TimeZone getTimezone \n Date getBootDate \n File getBaseFolder", "output": ""}, {"instruction": "Generate java code\nadd a byte array field to the stream . \\ param value the byte array value to be added . ", "input": " byte[] intBuf \n int MAX_INT_BYTES \n PackFormatInputStream format \n ByteArrayOutputStream packed \n\n byte[] getValue \n void packLong \n void addShort \n void reset \n String getFormat \n void addByte \n void addInt \n void addLong \n void addRecord \n void addString", "output": ""}, {"instruction": "Generate java code\ngets a hashmap of the default mutation profiles . ", "input": " ArrayList<GeneticProfile> otherCnaProfileList \n String RAE \n ArrayList<GeneticProfile> mutationProfileList \n ArrayList<GeneticProfile> raeProfileList \n String GISTIC \n ArrayList<GeneticProfile> gisticProfileList \n\n HashMap<String,GeneticProfile> getDefaultCopyNumberMap \n void addCopyNumberProfile \n GeneticProfile getDefaultCnaProfile \n HashMap<String,GeneticProfile> getDefaultGeneticProfileMap \n void conditionallyAddProfileToSet \n HashMap<String,GeneticProfile> getDefaultMutationAndCopyNumberMap \n void addMutationProfile \n GeneticProfile getFirstPriorityProfile \n void addRaeProfile \n GeneticProfile getDefaultMutationProfile \n void addGisticProfile \n void addOtherCnaProfile \n void addGeneticProfile \n int getNumDefaultMutationAndCopyNumberProfiles", "output": ""}, {"instruction": "Generate java code\ngets the value of the executionenddatetime property . ", "input": " String executionEndDateTime \n String build \n String browser \n String projectName \n String executionStartDateTime \n String value \n String url \n String TotalDuration \n\n String getProjectName \n String getBuild \n String getExecutionStartDateTime \n void setBuild \n void setExecutionEndDateTime \n void setUrl \n String getValue \n void setProjectName \n String getUrl \n String getTotalDuration \n void setValue \n void setTotalDuration \n void setBrowser \n void setExecutionStartDateTime \n String getBrowser", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.ttmparser #getnumber . ", "input": " String EXAMPLE \n TTMParser ttm \n TTMParser empty \n\n void testGetAcquisitionType \n void testGetDistance \n void testSetStatus \n void testSetNumber \n void testSetDistanceOfCPA \n void testConstructor \n void testGetTime \n void testSetCourse \n void testGetName \n void testGetDistanceOfCPA \n void setUp \n void testGetCourse \n void testSetReferenceTrue \n void testSetReferenceFalse \n void testSetAcquisitionType \n void testSetBearing \n void testGetBearing \n void testSetDistance \n void testSetTimeToCPA \n void testSetTime \n void testGetSpeed \n void testGetStatus \n void testGetTimeToCPA \n void testSetName \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\ncreates a new mode by applying the umask specified in configuration to this mode . ", "input": " Bits mOwnerBits \n Bits mGroupBits \n Bits[] SVALS \n Bits mOtherBits \n String mString \n\n Bits extractOtherBits \n boolean tryParseInt \n boolean imply \n Bits or \n void set \n Bits extractOwnerBits \n void setOtherBits \n Bits getOtherBits \n Mode getDefault \n Mode createFullAccess \n Bits getGroupBits \n Bits extractGroupBits \n Bits getOwnerBits \n void setOwnerBits \n Bits not \n void fromShort \n Bits and \n int hashCode \n void setGroupBits \n boolean equals \n Mode getUMask \n String toString \n String toString \n short toShort \n Mode createNoAccess", "output": ""}, {"instruction": "Generate java code\norder by increasing sequence number ", "input": " long sequenceNumber \n long lastFeedbacktime \n long k \n\n void feedback \n long getSequenceNumber \n long getK \n int hashCode \n boolean equals \n String toString \n long getLastFeedbackTime", "output": ""}, {"instruction": "Generate java code\ncloses idle connections . ", "input": " Lock poolLock \n boolean isShutDown \n Set<BasicPoolEntryRef> issuedConnections \n IdleConnectionHandler idleConnHandler \n Log log \n int numConnections \n ReferenceQueue<Object> refQueue \n Set<BasicPoolEntry> leasedConnections \n\n void enableConnectionGC \n void handleReference \n void handleLostEntry \n void deleteClosedConnections \n BasicPoolEntry getEntry \n PoolEntryRequest requestPoolEntry \n void shutdown \n void freeEntry \n void closeExpiredConnections \n void closeConnection", "output": ""}, {"instruction": "Generate java code\npass the event to the listener . ", "input": " byte[] data \n\n ParserEventType getType \n String toString", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.ttmparser #getbearing . ", "input": " String EXAMPLE \n TTMParser ttm \n TTMParser empty \n\n void testGetAcquisitionType \n void testGetDistance \n void testSetStatus \n void testSetNumber \n void testSetDistanceOfCPA \n void testConstructor \n void testGetTime \n void testSetCourse \n void testGetName \n void testGetNumber \n void testGetDistanceOfCPA \n void setUp \n void testGetCourse \n void testSetReferenceTrue \n void testSetReferenceFalse \n void testSetAcquisitionType \n void testSetBearing \n void testSetDistance \n void testSetTimeToCPA \n void testSetTime \n void testGetSpeed \n void testGetStatus \n void testGetTimeToCPA \n void testSetName \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nremove a plugin from this container by its index ", "input": " SortedUniqueList<AbstractPlugin> plugins \n long serialVersionUID \n\n boolean add \n boolean contains \n Iterator<AbstractPlugin> iterator \n boolean removeByName \n int size \n AbstractPlugin getByIndex \n AbstractPlugin getByName \n void clear \n int indexOf \n boolean remove", "output": ""}, {"instruction": "Generate java code\nscans list of base packages for all classes marked with specific annotations . ", "input": " ClasspathScanner HELPER \n String ALL_CLASS_FILES \n String CLASSPATH_URL_SCHEME \n String ALL_FILES \n String WILDCARD \n String[] PACKAGES_TO_SKIP \n\n Set<String> parsePackages \n ClasspathScanner getClasspathScanner \n Map<Class<? extends Annotation>,Collection<Class<?>>> findClassesInternal \n List<URL> findResources \n List<URL> findResources \n List<URL> findResources \n List<URL> findResources \n List<URL> findResourcesInternal", "output": ""}, {"instruction": "Generate java code\nsaves the state to a stream that is , serializes it . ", "input": " AtomicLongArray longs \n long serialVersionUID \n\n void set \n boolean compareAndSet \n boolean weakCompareAndSet \n double get \n int length \n void lazySet \n double getAndAdd \n double addAndGet \n String toString \n double getAndSet \n void readObject", "output": ""}, {"instruction": "Generate java code\nsets the fetcher end time stamp . ", "input": " Date lastModifiedTimeStamp \n Long feedId \n String createdBy \n Date fetcherStartTimeStamp \n Date createTimeStamp \n Long testId \n Long runId \n Date fetcherEndTimeStamp \n List<TestResultDetailsDTO> regTestResultDetailsLst \n OutcomeType outcome \n RunStatusType runStatus \n String errorMsg \n\n void setLastModifiedTimeStamp \n Date getFetcherEndTimeStamp \n void setFeedId \n void setFetcherStartTimeStamp \n Date getLastModifiedTimeStamp \n OutcomeType getOutcome \n Long getRunId \n List<TestResultDetailsDTO> getRegTestResultDetailsLst \n Long getFeedId \n void setTestId \n Long getTestId \n Date getFetcherStartTimeStamp \n void setRunId \n void setRegTestResultDetailsLst \n void setErrorMsg \n void setCreateTimeStamp \n void setCreatedBy \n RunStatusType getRunStatus \n Date getCreateTimeStamp \n void setOutcome \n String toString \n String getCreatedBy \n String getErrorMsg \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\nreturn the user name . ", "input": " String authToken \n String user \n\n void resume \n void suspend \n String getDefinition \n String submitJob \n String getJobIdForExternalId \n void change \n void start \n void streamLog \n void kill \n void reRun \n WorkflowJob getJob \n WorkflowJob getJob \n String getAuthToken \n String dryrunSubmit \n CoordinatorJob getCoordJob \n CoordinatorJob getCoordJob", "output": ""}, {"instruction": "Generate java code\ncreates an empty file . ", "input": " PlaceHolder placeHolder \n\n void mkdirIfNotExists \n void deleteDir", "output": ""}, {"instruction": "Generate java code\nonce it is called , the list will restart from the zero scroll ", "input": " RecyclerView.LayoutManager mManager \n boolean auto_disable_loadmore \n int page_now \n UltimateRecyclerView listview \n EASY noad \n ADMOB withad \n Runnable refresh_default \n onLoadMore loading_more \n boolean with_the_ad \n int max_pages \n int layoutLoadMoreResId \n int container_data_items \n\n void init \n boolean request_start \n BiAdAdapterSwitcher onEnableRefresh \n BiAdAdapterSwitcher onEnableLoadmore \n void run \n void setMaxPages \n BiAdAdapterSwitcher EnableAutoDisableLoadMoreByMaxPages \n void load_more_data_at_zero \n void emptyViewControl \n void load_more_data \n BiAdAdapterSwitcher setCustomOnFresh \n View getV \n void removeALL \n void scrollToTop \n void maximum_size \n void reset \n void insert_default \n void insert_default", "output": ""}, {"instruction": "Generate java code\nget image ", "input": " String msg \n BufferedImage image \n CoverArtImage coverArtImage \n String name \n List<MbImage> coverArtArchiveList \n CoverType type \n String value \n String hash \n\n List<MbImage> getCoverArtArchiveList \n String getMsg \n String getName \n String getHash \n String getSizeDisplay \n int compareTo \n BufferedImage readImage \n void listCovertArtArchive \n String getValue \n String getSizeHTML \n CoverType getType \n int hashCode \n boolean equals \n void readImages \n String toString \n void setImage", "output": ""}, {"instruction": "Generate java code\ncreate an instance of certificateinfo ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n RoleList createRoleList \n CheckServiceAccessRequest createCheckServiceAccessRequest \n JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n PasswordCredentials createPasswordCredentials \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n ValidateAccess createValidateAccess \n JAXBElement<ValidateAccess> createValidateAccess \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n RegistrationRequest createRegistrationRequest \n JAXBElement<RegistrationRequest> createRegistrationRequest \n Access createAccess \n JAXBElement<Access> createAccess \n ProjectValidation createProjectValidation \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\ngets the sharedcontext for layout and rendering . ", "input": " Dimension dim \n XHTMLPanel panel \n\n void layout \n BufferedImage renderToImageAutoSize \n BufferedImage renderToImageAutoSize \n void setDocument \n void setDocument \n void setSharedContext \n Rectangle getMinimumSize \n XHTMLPanel getPanel \n void render \n BufferedImage renderToImage \n BufferedImage renderToImage", "output": ""}, {"instruction": "Generate java code\nget applicationmanagementservice instance . ", "input": " PlaceHolder placeHolder \n\n String[] getAllLocalClaimUris \n RequestPathAuthenticatorConfig[] getAllRequestPathAuthenticators \n List<String> getAllRequestedClaimsByServiceProvider \n IdentityProvider[] getAllIdentityProviders \n ServiceProvider getServiceProvider \n void updateApplication \n Map<String,String> getServiceProviderToLocalIdPClaimMapping \n LocalAuthenticatorConfig[] getAllLocalAuthenticators \n String getServiceProviderNameByClientId \n ServiceProvider getApplicationExcludingFileBasedSPs \n void createApplication \n Map<String,String> getLocalIdPToServiceProviderClaimMapping \n ServiceProvider getServiceProviderByClientId \n ApplicationBasicInfo[] getAllApplicationBasicInfo \n IdentityProvider getIdentityProvider \n String getServiceProviderNameByClientIdExcludingFileBasedSPs \n void deleteApplication", "output": ""}, {"instruction": "Generate java code\ndestroy the memory locks service . ", "input": " String INSTRUMENTATION_GROUP \n MemoryLocks locks \n\n void init \n Class<? extends Service> getInterface \n MemoryLocks.LockToken getWriteLock \n MemoryLocks.LockToken getReadLock \n void instrument", "output": ""}, {"instruction": "Generate java code\nwrite the 16-bit length of the given data followed by the data itself ", "input": " ByteBuffer mWriter \n byte[] mBuffer \n\n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter putLen8 \n BufferedByteWriter put16 \n BufferedByteWriter put16 \n byte[] toByteArray \n void ensureCapacity \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put \n BufferedByteWriter put \n BufferedByteWriter put32 \n BufferedByteWriter put32 \n BufferedByteWriter put32", "output": ""}, {"instruction": "Generate java code\ngets the minimum encoded size of the given value . ", "input": " int originallyEncodedSize \n long value \n\n byte[] encode \n int getSizeInBytes \n int getOriginalSizeInBytes", "output": ""}, {"instruction": "Generate java code\nreturn a coordinator engine . ", "input": " PlaceHolder placeHolder \n\n void init \n Class<? extends Service> getInterface \n CoordinatorEngine getSystemCoordinatorEngine \n void destroy", "output": ""}, {"instruction": "Generate java code\nconvert an amount expressed in the way humans are used to into satoshis . ", "input": " Coin MICROCOIN \n int SMALLEST_UNIT_EXPONENT \n long COIN_VALUE \n Coin SATOSHI \n MonetaryFormat FRIENDLY_FORMAT \n Coin COIN \n Coin CENT \n Coin FIFTY_COINS \n Coin NEGATIVE_SATOSHI \n Coin MILLICOIN \n long MAX_SATOSHIS \n Coin ZERO \n long value \n MonetaryFormat PLAIN_FORMAT \n\n Coin add \n int signum \n boolean isNegative \n boolean isLessThan \n Coin subtract \n boolean isGreaterThan \n boolean isPositive \n String toPlainString \n int smallestUnitExponent \n int compareTo \n long longValue \n Coin parseCoin \n String toFriendlyString \n long getValue \n Coin shiftLeft \n Coin shiftRight \n Coin[] divideAndRemainder \n int hashCode \n Coin negate \n boolean equals \n boolean isZero \n Coin divide \n long divide \n String toString \n Coin multiply", "output": ""}, {"instruction": "Generate java code\nopen an url in the system 's default browser . ", "input": " Logger LOG \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nreturn a position for a type object . generate one if the type does n't have one . ", "input": " ExtensionInfo ext \n int EXPR \n int DECL \n Position pos \n int MEMB \n int STMT \n int TYPE \n int FILE \n\n TypeNode parseType \n TypeNode parseType \n ClassMember parseMember \n ClassMember parseMember \n QQParser parser \n Stmt parseStmt \n Stmt parseStmt \n ClassDecl parseDecl \n ClassDecl parseDecl \n SourceFile parseFile \n SourceFile parseFile \n Node parse \n Lexer lexer \n Expr parseExpr \n Expr parseExpr", "output": ""}, {"instruction": "Generate java code\ngets the error code . ", "input": " Integer errorCode \n String errorMsg \n\n boolean isSPErrorOut \n void setErrorMsg \n String toString \n void setErrorCode \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nset a hash code associated with this token . ", "input": " Date expires \n byte[] data \n String transformedTokenIdentifier \n Date created \n Element unattachedReference \n byte[] secret \n SecurityContext securityContext \n int tokenHash \n Element token \n Crypto crypto \n Principal principal \n long serialVersionUID \n String wsuId \n String issuerAddress \n String encrKeySha1Value \n String id \n X509Certificate x509cert \n String BOOTSTRAP_TOKEN_ID \n String tokenType \n Element attachedReference \n Map<String,Object> properties \n Key key \n\n void setAttachedReference \n String getTokenType \n void setProperties \n void setExpires \n String getIssuerAddress \n void setSHA1 \n String getId \n void setX509Certificate \n String getTransformedTokenIdentifier \n void setPrincipal \n Principal getPrincipal \n String getIdFromSTR \n void setId \n void setIssuerAddress \n byte[] getData \n void setKey \n void setTokenType \n Key getKey \n void setData \n Map<String,Object> getProperties \n void setTransformedTokenIdentifier \n int getTokenHash \n Date getCreated \n Element getUnattachedReference \n void processLifeTime \n void setUnattachedReference \n void setSecurityContext \n Crypto getCrypto \n byte[] getSecret \n void setToken \n void setSecret \n X509Certificate getX509Certificate \n Element getToken \n boolean isAboutToExpire \n boolean isExpired \n void setWsuId \n Date getExpires \n String getWsuId \n Element cloneElement \n Element getAttachedReference \n String getSHA1 \n SecurityContext getSecurityContext", "output": ""}, {"instruction": "Generate java code\nset the test-source from all kind of types supported by input #from object . ", "input": " DifferenceEvaluator differenceEvaluator \n ComparisonResult[] comparisonResultsToCheck \n ComparisonResult[] CHECK_FOR_IDENTICAL \n Source controlSource \n ComparisonResult[] CHECK_FOR_SIMILAR \n Map<String,String> namespaceContext \n Predicate<Node> nodeFilter \n List<ComparisonListener> differenceListeners \n Predicate<Attr> attributeFilter \n boolean ignoreWhitespace \n List<ComparisonListener> comparisonListeners \n boolean ignoreComments \n boolean normalizeWhitespace \n NodeMatcher nodeMatcher \n ComparisonController comparisonController \n Source testSource \n List<Difference> results \n EnumSet<ComparisonResult> comparisonResultsToCheck \n\n DiffBuilder checkForIdentical \n DiffBuilder withNamespaceContext \n DiffBuilder compare \n DiffBuilder withNodeFilter \n void comparisonPerformed \n DiffBuilder withNodeMatcher \n List<Difference> getDifferences \n DiffBuilder withComparisonController \n DiffBuilder ignoreWhitespace \n DiffBuilder withDifferenceEvaluator \n DiffBuilder ignoreComments \n DiffBuilder withDifferenceListeners \n DiffBuilder checkForSimilar \n DiffBuilder normalizeWhitespace \n Diff build \n Source getSource \n DiffBuilder withComparisonListeners \n Source wrap \n DiffBuilder withAttributeFilter", "output": ""}, {"instruction": "Generate java code\nget the id of satellite vehicle , for example `` 05 '' . ", "input": " int elevation \n int noise \n int azimuth \n String id \n\n int getAzimuth \n void setElevation \n void setNoise \n void setId \n int getNoise \n int getElevation \n void setAzimuth", "output": ""}, {"instruction": "Generate java code\nget the target reference . ", "input": " MessageObserver incomingObserver \n\n void activate \n Logger getLogger \n MessageObserver getMessageObserver \n void setMessageObserver \n void deactivate", "output": ""}, {"instruction": "Generate java code\ncreate an instance of rolelist ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n CheckServiceAccessRequest createCheckServiceAccessRequest \n JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n PasswordCredentials createPasswordCredentials \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n ValidateAccess createValidateAccess \n JAXBElement<ValidateAccess> createValidateAccess \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n CertificateInfo createCertificateInfo \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n RegistrationRequest createRegistrationRequest \n JAXBElement<RegistrationRequest> createRegistrationRequest \n Access createAccess \n JAXBElement<Access> createAccess \n ProjectValidation createProjectValidation \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\nsets the value of the named field . ", "input": " PlaceHolder placeHolder \n\n Object getValue \n Class getClass \n List getAllStaticMethods \n Constructor getConstructorImpl \n Method getMethodImpl \n Field getFieldImpl \n Class getClassImpl \n List invokeAllStaticMethods \n Method getMethod \n Object invokeMethod \n Object invokeMethod \n Object invokeMethod \n Object invokeConstructor \n Object invokeConstructor", "output": ""}, {"instruction": "Generate java code\nthe backing script bytes which can be turned into a script object . ", "input": " int NONCOINBASE_HEIGHT \n long serialVersionUID \n long index \n BigInteger value \n byte[] scriptBytes \n Sha256Hash hash \n int height \n\n BigInteger getValue \n int getHeight \n Sha256Hash getHash \n long getIndex \n int hashCode \n void serializeToStream \n boolean equals \n String toString", "output": ""}, {"instruction": "Generate java code\ngets the active attribute of the standardattributeresolver object ", "input": " NamespaceHandler nsh \n UserInterface ui \n UserAgentCallback uac \n\n String getClass \n boolean isLink \n String getAttributeValue \n String getAttributeValue \n boolean isVisited \n boolean isHover \n boolean isFocus \n String getLang \n String getID \n String getNonCssStyling \n String getElementStyling", "output": ""}, {"instruction": "Generate java code\ntakes in any valid uci command and executes it ", "input": " String PATH \n Process engineProcess \n OutputStreamWriter processWriter \n BufferedReader processReader \n\n float getEvalScore \n String getLegalMoves \n boolean startEngine \n void drawBoard \n String getBestMove \n void stopEngine \n String getOutput", "output": ""}, {"instruction": "Generate java code\nattaches the debugger to the given contextfactory . ", "input": " Scriptable scope \n Dim dim \n int type \n SwingGui debugGui \n int EXIT_ACTION \n int SCOPE_PROVIDER \n\n InputStream getIn \n void setExitAction \n void doBreak \n void main \n void run \n void setBreakOnReturn \n PrintStream getOut \n void setSize \n void setSize \n void setBreakOnExceptions \n void contextCreated \n void setVisible \n void mainEmbedded \n void mainEmbedded \n void mainEmbedded \n void contextExited \n void setBreakOnEnter \n PrintStream getErr \n void mainEmbeddedImpl \n void go \n boolean isVisible \n ScopeProvider newScopeProvider \n void setScopeProvider \n void pack \n void clearAllBreakpoints \n void contextReleased \n void setOptimizationLevel \n void detach \n void dispose \n void setScope \n void contextEntered \n Scriptable getScope \n JFrame getDebugFrame", "output": ""}, {"instruction": "Generate java code\ndelete the authentication . that is important if the authentication turned out to invalid . for example during login , if no clientidentity was associated with the given credentials ", "input": " JsonTray parent \n ClientCredential credential \n JSONObject json \n\n boolean checkExpireTime \n ClientIdentity getIdentity \n Object get \n void setExpireTime \n boolean getBoolean \n boolean getBoolean \n Authentication setIdentity \n String getString \n String getString \n boolean has \n void put \n void remove", "output": ""}, {"instruction": "Generate java code\ntest if a repository path is for a personal repository . ", "input": " String userRepoPrefix \n\n String getUserRepoPrefix \n boolean isUsersPersonalRepository \n String getUserNameFromRepoPath \n void setUserRepoPrefix \n String getPersonalPath", "output": ""}, {"instruction": "Generate java code\ncheck if input is a valid ipv6 address ", "input": " Matcher mWhitelistHostnameMatcher \n String IPV6_REGEX \n Pattern mTcpdumpHostnamePattern \n Pattern mHostnamePattern \n Pattern hostsParserPattern \n Matcher mIPv4Matcher \n Matcher mTcpdumpHostnameMatcher \n String SIMPLE_IPV6_REGEX \n Matcher mIPv6Matcher \n Matcher mHostnameMatcher \n String TCPDUMP_HOSTNAME_REGEX \n String IPV4_REGEX \n Pattern mIPv6Pattern \n String HOSTS_PARSER_WHITELIST_IMPORT \n Pattern hostsParserWhitelistImportPattern \n String WHITELIST_HOSTNAME_REGEX \n Pattern mIPv4Pattern \n String HOSTS_PARSER \n String HOSTNAME_REGEX \n Pattern mWhitelistHostnamePattern \n\n boolean isValidHostname \n boolean isValidIP \n boolean isValidWhitelistHostname \n String getTcpdumpHostname \n boolean isValidIPv4 \n boolean isValidUrl \n String wildcardToRegex", "output": ""}, {"instruction": "Generate java code\nspecifies that each key not value stored in the map should be wrapped in a weakreference by default , strong references are used . warning : when this method is used , the resulting map will use identity == comparison to determine equality of keys , which is a technical violation of the map specification , and may not be what you expect . ", "input": " int concurrencyLevel \n boolean useCustomMap \n Strength valueStrength \n int initialCapacity \n Strength keyStrength \n int DEFAULT_INITIAL_CAPACITY \n Equivalence<Object> keyEquivalence \n int UNSET_INT \n int DEFAULT_CONCURRENCY_LEVEL \n\n MapMaker weakValues \n MapMaker setValueStrength \n Equivalence<Object> getKeyEquivalence \n MapMaker initialCapacity \n ConcurrentMap<K,V> makeMap \n int getInitialCapacity \n MapMaker concurrencyLevel \n Strength getKeyStrength \n MapMakerInternalMap<K,V,?,?> makeCustomMap \n MapMaker keyEquivalence \n MapMaker setKeyStrength \n String toString \n int getConcurrencyLevel \n Strength getValueStrength", "output": ""}, {"instruction": "Generate java code\ndecomposes the matrix , extracts h and q , then sees if it can recompute a using similar matrix stuff . ", "input": " Random rand \n\n void testH \n void testHouseholderVectors \n void checkItAll \n void testInputUnmodified", "output": ""}, {"instruction": "Generate java code\ngets the pmids . ", "input": " String interactionType \n String experimentTypes \n long geneB \n String pmids \n long geneA \n String source \n\n void setSource \n String toSif \n void setExperimentTypes \n void setGeneA \n void setGeneB \n String getInteractionType \n long getGeneA \n long getGeneB \n void setPmids \n String getSource \n String toString \n void setInteractionType \n String getExperimentTypes", "output": ""}, {"instruction": "Generate java code\nget by index ", "input": " Result globalLog \n List<ResultEntry> log \n Map<ResultObserver,ResultObserverSettings> observers \n\n Result getGlobalResult \n Result filterOut \n Result filterOut \n Result filterOut \n boolean removeObserver \n void addObserverLogSource \n void setSources \n boolean remove \n Iterator<ResultEntry> iterator \n boolean removeAll \n Object[] toArray \n T[] toArray \n boolean registerObserver \n boolean add \n void removeObserverLogSource \n boolean containsAll \n void clear \n boolean isEmpty \n Result filterOnly \n Result filterOnly \n Result filterOnly \n void setObserverLevel \n boolean contains \n int size \n boolean addAll \n List<String> getSoures \n String toString \n void notifyObserversClear \n void notifyObserversAdd \n boolean retainAll", "output": ""}, {"instruction": "Generate java code\ncreate a four-component configuration key . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n String getString \n String getString \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n void setString \n boolean load \n boolean load \n boolean load \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nreturns the field 's name , prepended by `` maxof '' . ", "input": " Constant val \n String fldname \n\n void processFirst \n void processNext \n Constant value", "output": ""}, {"instruction": "Generate java code\nreturns the elapsed time from the start time . this method assumes that the start time was previously set . ", "input": " long offerTimeoutTime \n boolean m_gotAnswer \n Offerer m_offerer \n Object m_socketLock \n Logger m_log \n boolean m_finishedWaitingForSocket \n Object m_answerLock \n OfferAnswer m_offerAnswer \n int m_relayWaitTime \n long m_startTime \n Socket m_socket \n\n void onTcpSocket \n Socket newSocket \n void onTransactionSucceeded \n void onUdpSocket \n void onOfferAnswerFailed \n void notifySocketLock \n void onTransactionFailed \n Socket waitForSocket \n boolean processedSocket", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time #getminutes . ", "input": " Time time \n\n void testDateRoundTrip \n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\nreturns termcounter keys for the urls that have been indexed . should be used for development and testing , not production . ", "input": " Jedis jedis \n\n void add \n boolean isIndexed \n void deleteAllKeys \n Map<String,Integer> getCounts \n Set<String> urlSetKeys \n void main \n void printIndex \n String termCounterKey \n Set<String> termSet \n List<Object> pushTermCounterToRedis \n void loadIndex \n void deleteTermCounters \n String urlSetKey \n Integer getCount \n void indexPage \n void deleteURLSets \n Set<String> getURLs \n Map<String,Integer> getCountsFaster", "output": ""}, {"instruction": "Generate java code\nget one site by id . ", "input": " SiteRepository siteRepository \n Logger log \n\n Site save \n Site findOneByHost \n Page<Site> findAll \n void delete \n Site getWebNauAn", "output": ""}, {"instruction": "Generate java code\nreturns the description of what each action does . ", "input": " Object initialState \n ResultFunction resultFunction \n ActionsFunction actionsFunction \n StepCostFunction stepCostFunction \n GoalTest goalTest \n\n Object getInitialState \n StepCostFunction getStepCostFunction \n ActionsFunction getActionsFunction \n boolean isGoalState \n GoalTest getGoalTest", "output": ""}, {"instruction": "Generate java code\nreturns the string representation of the duration between now and the date . ", "input": " long MIN \n long ONEYEAR \n TimeZone timezone \n ResourceBundle translation \n long ONEHOUR \n long HALFHOUR \n long ONEDAY \n\n String duration \n String yesterday \n int daysAgo \n boolean isYesterday \n String today \n boolean isToday \n int hoursAgo \n String inFuture \n int convertFrequencyToMinutes \n int minutesAgo \n int minutesAgo \n String translate \n String translate \n String timeAgoCss", "output": ""}, {"instruction": "Generate java code\nhandle an unexpected condition and print the error code . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nreset the static members for the tokenmapper . ", "input": " int parentScope \n ArrayList functionBracePositions \n ObjArray funcObjects \n int functionNum \n ArrayList functionVarMappings \n int lastTokenCount \n ArrayList replacedTokens \n\n boolean isInScopeChain \n void collectFunctionMappings \n void leaveNestingLevel \n String getMappedToken \n String getPreviousTokenMapping \n void collectFuncNodes \n int sourceCompress \n void enterNestingLevel", "output": ""}, {"instruction": "Generate java code\nlogs out the user . ", "input": " String EMAIL \n\n boolean isUserAuthenticated \n void loginUser \n String getEmailId", "output": ""}, {"instruction": "Generate java code\nconvert a multiplicityrange bound string to an integer . ", "input": " EUMLModelImplementation modelImpl \n\n Object createMultiplicity \n Object createMultiplicity \n Object createMultiplicity \n String boundToString \n Object createArgListsExpression \n Object createProcedureExpression \n Object createTypeExpression \n Object createIterationExpression \n Object createObjectSetExpression \n Object createTimeExpression \n Object createMappingExpression \n Object createBooleanExpression \n Object createActionExpression \n OpaqueExpression createExpression \n Object createMultiplicityRange \n Object createMultiplicityRange", "output": ""}, {"instruction": "Generate java code\nget the name of the class for main method implementation . ", "input": " Class<?>[] targetImplements \n String mainMethodClassName \n CompilerEnvirons compilerEnv \n Class<?> targetExtends \n\n void setTargetExtends \n Object[] compileToClassFiles \n Class<?> getTargetExtends \n void setTargetImplements \n void setMainMethodClass \n CompilerEnvirons getCompilerEnv \n Class<?>[] getTargetImplements \n String makeAuxiliaryClassName", "output": ""}, {"instruction": "Generate java code\nreturns a byte bitfield with a given bit set . ", "input": " byte NUL \n byte RST \n UByte SYN_HEADER_LENGTH \n byte SYN \n int CHECKSUM_INDEX \n byte EACK \n byte ACK \n UByte NUL_HEADER_LENGTH \n UByte ACK_HEADER_LENGTH \n UByte EACK_HEADER_LENGTH \n UByte RST_HEADER_LENGTH \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nget a notationprovider for the given language . ", "input": " int TYPE_CALLSTATE \n Map<NotationName,Map<Integer,Class>> allLanguages \n int TYPE_ENUMERATION_LITERAL \n NotationProviderFactory2 instance \n int TYPE_ATTRIBUTE \n int TYPE_OBJECT \n int TYPE_TRANSITION \n int TYPE_OBJECTFLOWSTATE_STATE \n int TYPE_MESSAGE \n int TYPE_ASSOCIATION_ROLE \n NotationName defaultLanguage \n Logger LOG \n String currentLanguage \n int TYPE_OBJECTFLOWSTATE_TYPE \n int TYPE_COMPONENTINSTANCE \n int TYPE_OPERATION \n int TYPE_EXTENSION_POINT \n int TYPE_NAME \n int TYPE_ACTIONSTATE \n int TYPE_NODEINSTANCE \n int TYPE_ASSOCIATION_END_NAME \n int TYPE_MULTIPLICITY \n int TYPE_ASSOCIATION_NAME \n int TYPE_CLASSIFIERROLE \n int TYPE_STATEBODY \n\n void setCurrentLanguage \n void setDefaultNotation \n NotationProviderFactory2 getInstance \n boolean removeNotation \n void addNotationProvider \n Class getNotationProviderClass", "output": ""}, {"instruction": "Generate java code\nsaving the file 's bytearray ", "input": " float[] audioData \n byte[] arrFile \n AudioInputStream audioInputStream \n byte[] audioBytes \n AudioFormat format \n FileOutputStream fos \n double durationSec \n ByteArrayInputStream bis \n\n double getDurationSec \n float[] extractAmplitudeFromFileByteArrayInputStream \n float[] extractFloatDataFromAudioInputStream \n void saveToFile \n float[] extractAmplitudeFromFileByteArray \n float[] getAudioData \n byte[] getAudioBytes \n AudioFormat getFormat \n float[] extractFloatDataFromAmplitudeByteArray \n float[] extractAmplitudeFromFile", "output": ""}, {"instruction": "Generate java code\nremoves a child node from the node . ", "input": " List<DirectedAcyclicGraphNode<T>> mParents \n List<DirectedAcyclicGraphNode<T>> mChildren \n T mPayload \n\n List<DirectedAcyclicGraphNode<T>> getParents \n T getPayload \n List<DirectedAcyclicGraphNode<T>> getChildren \n void addParent \n void addChild", "output": ""}, {"instruction": "Generate java code\ncalls a method on the given object instance with the given arguments . ", "input": " PlaceHolder placeHolder \n\n Object getValue \n Class getClass \n List getAllStaticMethods \n Constructor getConstructorImpl \n Method getMethodImpl \n Field getFieldImpl \n Class getClassImpl \n void setValue \n List invokeAllStaticMethods \n Method getMethod \n Object invokeConstructor \n Object invokeConstructor", "output": ""}, {"instruction": "Generate java code\nadds an operation to the class . ", "input": " Map<FieldSignature,Set<String>> fields \n Map<String,ClassStats> nestedClasses \n Map<ClassMetricKey,Double> memo \n Map<OperationSignature,Map<String,OperationStats>> operations \n\n double compute \n double compute \n void addField \n ClassStats getNestedClassStats \n boolean hasMatchingSig \n boolean hasMatchingSig", "output": ""}, {"instruction": "Generate java code\ncreate a program that satisfies an op_checkmultisig program , using pre-encoded signatures . ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder data \n Script createMultiSigOutputScript \n Script build \n ScriptBuilder smallNum \n Script createP2SHOutputScript \n Script createInputScript \n Script createInputScript \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time #sethour int . ", "input": " Time time \n\n void testDateRoundTrip \n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\nif using directly , consider using owneditem instead ", "input": " Logger log \n TypedItemMapper mapper \n PlatformLayerClient platformLayerClient \n\n JobExecutionList listJobExecutions \n JobExecutionList listJobExecutions \n UntypedItemCollection listRoots \n Tags changeTags \n Tags changeTags \n String getSshPublicKey \n T promoteToTyped \n T promoteToTyped \n T getItem \n T getItem \n Tags getItemTags \n Tags addTag \n List<T> listItems \n List<T> listItems \n List<T> listItems \n List<T> listItems \n Collection<ServiceInfo> listServices \n T findItem \n T findItem \n T findItem \n Tags addTags \n UntypedItemCollection listItemsUntyped \n MetricInfoCollection listMetrics \n Tags addUniqueTag \n List<ItemBase> listChildrenTyped \n PlatformLayerEndpointInfo getEndpointInfo \n T putItem \n UntypedItem putItem \n UntypedItem getItemUntyped \n UntypedItem getItemUntyped \n JobDataList listJobs \n JobDataList listJobs \n String getActivation \n String getSchema \n PlatformLayerKey toKey \n String activateService \n JobData deleteItem \n void ensureLoggedIn \n MetricDataStream getMetric \n JobData doAction \n JobData doAction \n ProjectId getProject \n UntypedItemCollection listChildren \n JobLog getJobExecutionLog", "output": ""}, {"instruction": "Generate java code\ntests the rpcblockreadrequest #getencodedlength method . ", "input": " long OFFSET \n long LOCK_ID \n long SESSION_ID \n long BLOCK_ID \n ByteBuf mBuffer \n long LENGTH \n\n void invalidLength \n void assertInvalid \n void encodeDecode \n void before \n void validLength \n void assertValid \n void assertValid \n void negativeOffset \n void validate", "output": ""}, {"instruction": "Generate java code\ngets the offset of the data stored in this datagram packet . ", "input": " byte[] data \n int offset \n int length \n ServiceID serviceID \n int capacity \n InetAddress address \n\n void setServiceID \n ServiceID getServiceID \n void setLengthOnly \n void setLength \n void setAddress \n void setData \n void setData \n SocketAddress getSocketAddress \n int getLength \n InetAddress getAddress \n void setSocketAddress \n byte[] getData \n int getCapacity", "output": ""}, {"instruction": "Generate java code\ncalls evaluate method and returns sorted outcome . ", "input": " FIS fis \n\n ArrayList<K> sortByValue \n void printInputs \n Map<String,Double> evaluate \n void setInput", "output": ""}, {"instruction": "Generate java code\nreads the soap 1.2 or soap 1.1 reference attribute . ", "input": " QName SOAP_ENCODING_REF_1_2 \n QName SOAP_ENCODING_ID_1_1 \n QName SOAP_ENCODING_ID_1_2 \n QName SOAP_ENCODING_REF_1_1 \n String SOAP_ENCODING_NS_1_2 \n\n void writeId \n String readId \n void writeRef \n String readAttributeValue \n void writeAttribute", "output": ""}, {"instruction": "Generate java code\nreturns a location which is selected by random . ", "input": " Hashtable<String,Point2D> locationPositions \n LabeledGraph<String,Double> links \n\n Double getDistance \n void clear \n void clearLinks \n void setPosition \n void addBidirectionalLink \n void removeUnidirectionalLink \n Point2D getPosition \n void removeBidirectionalLink \n boolean isLocation \n List<String> getLocations \n void addUnidirectionalLink \n List<String> getLocationsLinkedTo \n void setDistAndDirToRefLocation", "output": ""}, {"instruction": "Generate java code\ngets an object value out of the object . ", "input": " Bundle bundle \n Bundle bundle \n\n E putStringArrayList \n SharePhoto getPhoto \n E putPhotoArrayList \n E putDoubleArray \n double getDouble \n E putDouble \n E putLong \n Bundle getBundle \n double[] getDoubleArray \n Object get \n ArrayList<ShareOpenGraphObject> getObjectArrayList \n E putIntArray \n boolean getBoolean \n E putLongArray \n Set<String> keySet \n E putBoolean \n boolean[] getBooleanArray \n ArrayList<SharePhoto> getPhotoArrayList \n E putPhoto \n E readFrom \n E putInt \n E putString \n ArrayList<String> getStringArrayList \n String getString \n int describeContents \n long[] getLongArray \n long getLong \n int getInt \n E putObjectArrayList \n E putBooleanArray \n E putObject \n void writeToParcel \n int[] getIntArray", "output": ""}, {"instruction": "Generate java code\nif a handler is connected , call its com.google.bitcoin.protocols.channels.paymentchannelserver #close method thus disconnecting the tcp connection . ", "input": " BigInteger bestValueToMe \n long refundTransactionUnlockTimeSecs \n PaymentChannelServer connectedHandler \n Transaction contract \n TransactionOutput clientOutput \n ECKey myKey \n byte[] bestValueSignature \n PaymentChannelServerState state \n\n PaymentChannelServer setConnectedHandler \n String toString \n void updateValueToMe \n void clearConnectedHandler \n PaymentChannelServerState getOrCreateState", "output": ""}, {"instruction": "Generate java code\nconvert string date to date type ", "input": " String SHORT_FORMAT \n String FULL_FORMAT \n String NORMAL_DAY_OF_WEEK_FORMAT \n String NORMAL_FORMAT \n\n String getDateTime \n Date getDateFromDatePicket \n String getStringTimeFromTime \n String getStringTimeFromTimePicker \n boolean isAfter \n String dateToString \n boolean isBefore", "output": ""}, {"instruction": "Generate java code\nis selected ? ", "input": " List<String> formats \n String author \n FileSizeComparable length \n String rating \n String title_sort \n String language \n String title \n String uuid \n String tagStr \n List<String> tags \n String path \n String author_sort \n String comment \n String filenameWithoutExtension \n boolean selected \n String pubdate \n\n String getAuthor_sort \n void setSelected \n String getAuthor \n List<String> getTags \n int compareTo \n ImageIcon getThumbnail \n boolean isLocal \n String getSort \n String getCoverFilePath \n void setLength \n String getTitle \n String getPubdate \n String getUuid \n String getFilePath \n String getPath \n FileSizeComparable getLength \n String getFormat \n String toString \n String getRating", "output": ""}, {"instruction": "Generate java code\nadd item . ", "input": " List<Object> mArray \n\n long getLong \n int getInt \n JSONObject getObject \n void addAll \n void addAll \n Object get \n int length \n double getDouble \n JSONArray getArray \n boolean getBoolean \n float getFloat \n String getString \n void writeJSON", "output": ""}, {"instruction": "Generate java code\nrenames a repository role . ", "input": " IStoredSettings settings \n Map<String,String> legacyBackingServices \n IRuntimeManager runtimeManager \n Logger logger \n IUserService userService \n\n boolean deleteRepositoryRole \n List<String> getAllUsernames \n List<UserModel> getAllUsers \n UserModel getUserModel \n UserModel getUserModel \n boolean updateUserModel \n boolean updateUserModel \n TeamModel getTeamModel \n boolean updateTeamModel \n boolean updateTeamModel \n boolean isInternalAccount \n List<String> getTeamNamesForRepositoryRole \n boolean deleteTeam \n boolean updateUserModels \n List<String> getUsernamesForRepositoryRole \n boolean deleteTeamModel \n UserManager start \n void setUserService \n IUserService createUserService \n List<TeamModel> getAllTeams \n String getCookie \n boolean deleteUserModel \n UserManager stop \n boolean deleteUser \n void setup \n List<String> getAllTeamNames \n boolean updateTeamModels", "output": ""}, {"instruction": "Generate java code\nimplements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . ", "input": " IEnvironments environments \n HashMap<String,MQTTConnectionFactory> factories \n AutoSIMMQTTConfig config \n\n void start", "output": ""}, {"instruction": "Generate java code\nthe most common use of `` unifiedbreak '' : level 1 , with an alternative of a single space . ", "input": " PlaceHolder placeHolder \n\n void newline \n void newline \n void newline \n boolean flush \n boolean flush \n void end \n String toString \n void allowBreak \n void allowBreak \n void allowBreak \n void write \n void write \n void begin \n void close", "output": ""}, {"instruction": "Generate java code\nhash forward first 7 characters ", "input": " PlaceHolder placeHolder \n\n void testCollisionsFail \n void testGenNCollisions \n void testCompare2CollisionString \n void TestPrecomputedFileExists \n void MeetInTheMiddleHashBackTest \n void setUp \n void testGetHash \n void tearDown \n void testCollisionsOk \n void testReadRandomStringForCollision", "output": ""}, {"instruction": "Generate java code\nno data available after this reset . ", "input": " BoundingBox boundingBox \n Hashtable<Long,MapNode> nodes \n Hashtable<Long,MapWay> ways \n ArrayList<MapEventListener> listeners \n long nextTrackId \n EntityClassifier<EntityViewInfo> entityClassifier \n KDTree entityTree \n Logger LOG \n ArrayList<MapNode> markers \n ArrayList<MapNode> pois \n ArrayList<Track> tracks \n\n void visitEntities \n List<Track> getTracks \n void addNode \n List<MapNode> getWayNodes \n Object[][] getStatistics \n MapNode getNearestWayNode \n void setBoundingBox \n void removeMarker \n void clearTrack \n List<MapEntity> getVisibleMarkersAndTracks \n KDTree getEntityTree \n void fireMapDataEvent \n BoundingBox getBoundingBox \n void clearMarkersAndTracks \n List<MapNode> getMarkers \n int getNodeCount \n void compile \n List<MapNode> getPlaces \n void createTrack \n int getPoiCount \n Collection<MapWay> getWays \n List<MapNode> getPois \n void close \n void addToTrack \n Track getTrack \n Track getTrack \n boolean isEmpty \n void setEntityClassifier \n void addMapDataEventListener \n void applyClassifierAndUpdateTree \n EntityFinder getEntityFinder \n void removeMapDataEventListener \n MapWay getWay \n MapBuilder getBuilder \n int getWayCount \n void addWay \n MapNode getNode \n void updateEntityViewInfo \n MapNode addMarker", "output": ""}, {"instruction": "Generate java code\ngets whether this result object is empty , i.e. contains no information flows ", "input": " List<Stmt> path \n Logger logger \n Map<SinkInfo,Set<SourceInfo>> results \n Value sink \n Stmt context \n Value source \n\n void printResults \n void printResults \n Value getSink \n boolean containsSink \n List<SinkInfo> findSinkByMethodSignature \n int size \n Value getSource \n int hashCode \n int hashCode \n boolean isPathBetweenMethods \n boolean equals \n boolean equals \n List<Stmt> getPath \n boolean containsSinkMethod \n Map<SinkInfo,Set<SourceInfo>> getResults \n String toString \n String toString \n String toString \n void addResult \n void addResult \n void addResult \n void addResult \n boolean isPathBetween \n boolean isPathBetween \n Stmt getContext \n Stmt getContext", "output": ""}, {"instruction": "Generate java code\nallows third party apps to specify the scanning rectangle dimensions , rather than determine them automatically based on screen resolution . ", "input": " int MAX_FRAME_HEIGHT \n String TAG \n int requestedFramingRectHeight \n AutoFocusManager autoFocusManager \n CameraConfigurationManager configManager \n WindowManager windowManager \n PreviewCallback previewCallback \n Rect framingRectInPreview \n int MAX_FRAME_WIDTH \n Context context \n Rect framingRect \n boolean initialized \n int requestedFramingRectWidth \n Camera camera \n int MIN_FRAME_WIDTH \n boolean previewing \n int MIN_FRAME_HEIGHT \n\n void requestPreviewFrame \n void stopPreview \n boolean isOpen \n void startPreview \n Rect getFramingRect \n PlanarYUVLuminanceSource buildLuminanceSource \n void closeDriver \n void setTorch \n void openDriver \n Rect getFramingRectInPreview", "output": ""}, {"instruction": "Generate java code\ngets the string representing the access token . ", "input": " Date ALREADY_EXPIRED_EXPIRATION_TIME \n Date expires \n String EXPIRES_IN_KEY \n Date lastRefresh \n AccessTokenSource DEFAULT_ACCESS_TOKEN_SOURCE \n Date DEFAULT_LAST_REFRESH_TIME \n String ACCESS_TOKEN_KEY \n long serialVersionUID \n AccessTokenSource source \n String token \n Date DEFAULT_EXPIRATION_TIME \n long serialVersionUID \n List<String> permissions \n Date MIN_DATE \n Date MAX_DATE \n\n AccessToken createFromNativeLogin \n Object readResolve \n List<String> getPermissions \n String tokenToString \n Object writeReplace \n AccessToken createFromNativeLinkingIntent \n boolean isInvalid \n AccessToken createNew \n void readObject \n Date getBundleLongAsDate \n AccessToken createFromExistingAccessToken \n AccessToken createFromBundle \n void appendPermissions \n AccessTokenSource getSource \n AccessToken createFromTokenWithRefreshedPermissions \n Bundle toCacheBundle \n AccessToken createEmptyToken \n AccessToken createFromString \n Date getLastRefresh \n String toString \n AccessToken createFromCache \n AccessToken createFromRefresh \n Date getExpires \n AccessToken createFromWebBundle", "output": ""}, {"instruction": "Generate java code\nretrieve the group attributes by group name ", "input": " Log logger \n int tenantId \n\n String getGroupName \n boolean isGroupExisting \n void deleteGroupAttributes \n Set<String> listSCIMRoles \n Map<String,String> getGroupAttributesById \n void addMandatoryAttributes \n void createSCIMAttributes \n void updateRoleName \n String getGroupId \n Group getGroupWithAttributes", "output": ""}, {"instruction": "Generate java code\ncalculate how many milliseconds have passed since last frame . ", "input": " float rotation \n long lastFPS \n float x \n long lastFrame \n int fps \n float y \n\n void updateFPS \n long getTime \n void start \n void update \n void initGL \n void renderGL \n void main", "output": ""}, {"instruction": "Generate java code\nconverts ` a ' into a block matrix and call seta on the block matrix solver . ", "input": " LinearSolver<BlockMatrix64F> alg \n BlockMatrix64F blockA \n BlockMatrix64F blockB \n BlockMatrix64F blockX \n\n void invert \n void solve \n boolean modifiesA \n boolean modifiesB \n double quality", "output": ""}, {"instruction": "Generate java code\ncheck whether the resource is healthy . if not retry . when this called , the resource is not in mresourceavailable . ", "input": " ReentrantLock mLock \n ScheduledExecutorService mExecutor \n Clock mClock \n long mInitialDelayMs \n long mLastAccessTimeMs \n Condition mNotEmpty \n ScheduledExecutorService mGcExecutor \n long mGcIntervalMs \n int mIdentity \n T mResource \n int mMaxCapacity \n HashMap<T,ResourceInternal<T>> mResources \n int mMaxCapacity \n ScheduledFuture<?> mGcFuture \n TreeSet<ResourceInternal<T>> mResourceAvailable \n int mMinCapacity \n Logger LOG \n int mMinCapacity \n\n T createNewResource \n int compare \n void release \n ResourceInternal<T> poll \n T acquire \n T acquire \n void remove \n boolean isHealthy \n boolean shouldGc \n void setLastAccessTimeMs \n Options setMinCapacity \n Options setGcIntervalMs \n Options setGcExecutor \n Options setInitialDelayMs \n long getInitialDelayMs \n long getLastAccessTimeMs \n void close \n boolean add \n ScheduledExecutorService getGcExecutor \n int getMaxCapacity \n Options defaultOptions \n void closeResource \n Options setMaxCapacity \n void closeResourceSync \n int size \n long getGcIntervalMs \n int getMinCapacity \n boolean isFull", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.mwvparser #getspeedunit . ", "input": " String EXAMPLE \n MWVSentence mwv \n\n void testSetNegativeSpeed \n void testSetInvalidSpeedUnit \n void testIsTrue \n void testMWVParserTalkerId \n void testSetStatus \n void testSetAngle \n void testSetSpeedUnit \n void testSetNegativeAngle \n void testGetAngle \n void testSetTrue \n void testSetAngleOutOfRange \n void setUp \n void testGetSpeed \n void testGetStatus \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\ntest method for org.mitre.uma.service.impl.defaultresourcesetservice #savenew org.mitre.uma.model.resourceset . ", "input": " ResourceSetRepository repository \n DefaultResourceSetService resourceSetService \n\n void testUpdate_nullId2 \n void setUp \n void testUpdate_mismatchedIds \n void testUpdate_nullId", "output": ""}, {"instruction": "Generate java code\nprints input in console for debugging . ", "input": " FIS fis \n\n ArrayList<K> sortByValue \n ArrayList<String> getActions \n Map<String,Double> evaluate \n void setInput", "output": ""}, {"instruction": "Generate java code\nadds an integer field to the schema . ", "input": " int length \n int type \n Map<String,FieldInfo> info \n\n void add \n void addStringField \n void addAll \n void addField \n int length \n Collection<String> fields \n int type \n boolean hasField", "output": ""}, {"instruction": "Generate java code\ndefines the hashcode . ", "input": " String type \n String url \n\n String getURL \n String getType \n boolean equals \n String toString \n void setURL", "output": ""}, {"instruction": "Generate java code\ngets the ids of the registered object instances . ", "input": " SortedMap<String,List<SoapRef>> unresolvedRefs \n SortedMap<String,Object> instances \n\n void addInstance \n SortedMap<String,List<SoapRef>> getUnresolvedRefs \n SoapRefRegistry get \n void addRef", "output": ""}, {"instruction": "Generate java code\ntests to ensure s3aoutputstream #flush calls the underlying output stream . ", "input": " String BUCKET_NAME \n BufferedOutputStream mLocalOutputStream \n String KEY \n File mFile \n S3AOutputStream mStream \n\n void writeByte \n void writeByteArray \n void writeByteArrayWithRange \n void before \n void close", "output": ""}, {"instruction": "Generate java code\nguaranteed to throw an exception and leave the underlying data unmodified . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nreturns the class ` name ' that was declared by class ` parent ' . ", "input": " PlaceHolder placeHolder \n\n Object getValue \n List getAllStaticMethods \n Constructor getConstructorImpl \n Method getMethodImpl \n Field getFieldImpl \n Class getClassImpl \n void setValue \n List invokeAllStaticMethods \n Method getMethod \n Object invokeMethod \n Object invokeMethod \n Object invokeMethod \n Object invokeConstructor \n Object invokeConstructor", "output": ""}, {"instruction": "Generate java code\ncreates a new local alluxio master with a isolated port . ", "input": " Supplier<String> mClientSupplier \n String mJournalFolder \n ClientPool mClientPool \n AlluxioMaster mAlluxioMaster \n Thread mMasterThread \n Logger LOG \n String mHostname \n\n AlluxioMaster getInternalMaster \n int getRPCLocalPort \n String getWebBindHost \n String uniquePath \n void start \n String getRPCBindHost \n FileSystem getClient \n void kill \n String getJournalFolder \n void stop \n int getWebLocalPort \n String get \n boolean isServing \n InetSocketAddress getAddress \n void clearClients \n String getUri", "output": ""}, {"instruction": "Generate java code\nmina does some funky things if we do n't do this first . ", "input": " Logger m_log \n\n SipMessage createRegisterOk \n void ultimateSipDecodingTest \n Invite createInvite \n Invite createInvite \n Invite createInvite \n void testPartialMessageSipDecoding \n Register createRegister \n Invite createNoBodyInvite \n Invite createNoBodyInvite \n void testBasicSipDecoding \n SipResponse createInviteOkNoBody \n SipResponse createInviteOk \n ByteBuffer combine", "output": ""}, {"instruction": "Generate java code\nget the conditionsprovider ", "input": " boolean signToken \n ConditionsProvider conditionsProvider \n Logger LOG \n List<AttributeStatementProvider> attributeStatementProviders \n SubjectProvider subjectProvider \n\n boolean canHandleToken \n boolean canHandleToken \n List<AttributeStatementProvider> getAttributeStatementProviders \n SamlAssertionWrapper createSamlToken \n boolean isSignToken \n void setSubjectProvider \n void testKeyType \n TokenProviderResponse createToken \n void setAttributeStatementProviders \n SamlCallbackHandler createCallbackHandler \n SubjectProvider getSubjectProvider \n void setConditionsProvider \n void setSignToken", "output": ""}, {"instruction": "Generate java code\ncloses the manager , by unpinning the block . ", "input": " Block blk \n int EMPTY \n int INUSE \n Transaction tx \n TableInfo ti \n int slotsize \n int currentslot \n\n boolean next \n boolean isValidSlot \n void moveToId \n int currentId \n boolean insert \n String getString \n int currentpos \n void delete \n void setInt \n int getInt \n void setString \n int fieldpos \n boolean searchFor", "output": ""}, {"instruction": "Generate java code\nset the token id ", "input": " TokenReference unAttachedReference \n Date expires \n String tokenId \n Date created \n long lifetime \n TokenReference attachedReference \n Element token \n\n void setAttachedReference \n String getTokenId \n TokenReference getUnAttachedReference \n long getLifetime \n void setExpires \n Date getCreated \n void setCreated \n void setUnattachedReference \n void setToken \n Element getToken \n void setLifetime \n Date getExpires \n TokenReference getAttachedReference", "output": ""}, {"instruction": "Generate java code\ngetstate returns a string representing the state in a ubl address . ", "input": " AddressType address \n\n String getZip \n String getStreet \n String getCity", "output": ""}, {"instruction": "Generate java code\nunlocks the given lock and releases the block lock for the given block id if the lock no longer in use . ", "input": " Map<Long,LockRecord> mLockIdToRecordMap \n Map<Long,Set<Long>> mSessionIdToLockIdsMap \n Object mSharedMapsLock \n AtomicLong LOCK_ID_GEN \n long mSessionId \n long mBlockId \n ResourcePool<ClientRWLock> mLockPool \n Lock mLock \n Logger LOG \n Map<Long,ClientRWLock> mLocks \n\n void unlockBlock \n void unlockBlock \n ClientRWLock createNewResource \n Lock getLock \n ClientRWLock getBlockLock \n void validateLock \n long getBlockId \n long lockBlock \n void cleanupSession \n Set<Long> getLockedBlocks \n long getSessionId \n void close \n void releaseBlockLockIfUnused \n void validate", "output": ""}, {"instruction": "Generate java code\naccessor for the version of the client we 're running . if we 're running on the main line , this just returns 0.00 . ", "input": " boolean s_newVersionSet \n boolean s_newVersion \n boolean s_installed \n Logger LOG \n\n boolean running \n boolean hasId \n void setInstalled \n double getLastVersion \n boolean isInstalled \n long setId \n long getId \n String getBaseUri \n void setLastVersion \n File getTorrentDir \n boolean newVersion", "output": ""}, {"instruction": "Generate java code\ntests that an exception is thrown when trying to unlock a block via blocklockmanager #unlockblock long which is not locked . ", "input": " BlockLockManager mLockManager \n long TEST_BLOCK_ID \n ExpectedException mThrown \n long TEST_SESSION_ID \n TemporaryFolder mFolder \n\n void lockAcrossSessions \n void stress \n void validateLockIdWithNoRecord \n void dontReuseLock \n void before \n void reuseLock \n void readBlocksWrite \n void validateLockIdWithWrongBlockId \n void setMaxLocks \n void lockExpectingHang \n void lockBlock \n void grabManyLocks \n void validateLockIdWithWrongSessionId \n void cleanupSession \n void after", "output": ""}, {"instruction": "Generate java code\ngets the checksum type . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nsends a zoom command to the camera according to the user control ", "input": " int framerate \n String cameraIPAddress \n String channel \n int cameraPort \n int compression \n String resolution \n URL url \n\n URL getURL \n void halt \n void movePanTilt \n String composeURL \n void runUrl \n void start \n void setIPAddress", "output": ""}, {"instruction": "Generate java code\ntest of getaddress method , of class device . ", "input": " Device dev \n\n void testGetType \n void setUpClass \n void testGetDeviceName_0args \n void testAddToPane \n void tearDownClass \n void tearDown \n void testGetDeviceNames \n void testGetDeviceBlock \n void testAddCapabilities \n void testToString \n void testGetImgName \n void testAddCapability \n void testGetDeviceName_Locale \n void setUp \n void testGetImage \n void testGetDeviceID \n void testGetCapabilityBlock \n void testGetCapabilities \n void testRemoveCapability", "output": ""}, {"instruction": "Generate java code\nget the maximum lifetime in seconds for issued saml token if requestor specifies lifetime element ", "input": " Logger LOG \n long DEFAULT_MAX_LIFETIME \n boolean acceptClientLifetime \n long lifetime \n long maxLifetime \n boolean failLifetimeExceedance \n long futureTimeToLive \n\n long getFutureTimeToLive \n void setFutureTimeToLive \n long getLifetime \n void setFailLifetimeExceedance \n void setMaxLifetime \n void setLifetime \n void setAcceptClientLifetime \n ConditionsBean getConditions \n boolean isAcceptClientLifetime \n String extractAddressFromParticipantsEPR \n List<AudienceRestrictionBean> createAudienceRestrictions \n boolean isFailLifetimeExceedance", "output": ""}, {"instruction": "Generate java code\nfactory method for the routing component . subclasses can override it and provide more advanced routing algorithms . ", "input": " JComboBox waySelection \n JButton calcButton \n RouteCalculator routeCalculator \n String ROUTE_TRACK_NAME \n MapViewFrame frame \n\n void actionPerformed \n void eventHappened \n MapViewFrame getFrame \n MapViewFrame constructApplicationFrame \n void main \n void showFrame", "output": ""}, {"instruction": "Generate java code\nchanges local file 's permission . ", "input": " Logger LOG \n\n void setLocalDirStickyBit \n void move \n short getLocalFileMode \n void changeLocalFileUser \n void delete \n String getLocalFileOwner \n void createFile \n void createStorageDirPath \n void changeLocalFileToFullPermission \n void changeLocalFileGroup \n String getLocalFileGroup \n void createDir \n boolean exists \n void createBlockPath \n void deletePathRecursively", "output": ""}, {"instruction": "Generate java code\nsets the inputstream to be used as data source . if reader is running , it is first stopped and you must call #start to resume reading . ", "input": " String LOG_MSG \n String DISPATCH_ALL \n DataReader reader \n DataListener dataListener \n ConcurrentMap<String,List<SentenceListener>> listeners \n int pauseTimeout \n ExceptionListener exceptionListener \n Thread thread \n Logger LOGGER \n int DEFAULT_TIMEOUT \n\n void fireReadingPaused \n void fireDataEvent \n ExceptionListener getExceptionListener \n void setPauseTimeout \n void start \n void removeSentenceListener \n void fireReadingStopped \n void registerListener \n List<SentenceListener> getSentenceListeners \n void handleException \n void setDataListener \n void stop \n void fireReadingStarted \n void fireSentenceEvent \n void addSentenceListener \n void addSentenceListener \n void addSentenceListener \n int getPauseTimeout \n void setExceptionListener \n void setDatagramSocket", "output": ""}, {"instruction": "Generate java code\ndisconnect database ", "input": " Connection connection \n DbInfo info \n\n String getStringValue \n String getStringValue \n String getStringValue \n DbInfo getInfo \n Connection getConnnection \n boolean connect", "output": ""}, {"instruction": "Generate java code\ngets the value of the dates property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the dates property . for example , to add a new item , do as follows : getdates . add newitem ; objects of the following type s are allowed in the list string ", "input": " List<Double> doubles \n List<BigDecimal> decimals \n List<Integer> numbers \n List<String> ids \n List<Date> dates \n List<ComplexNode> complexNodes \n long serialVersionUID \n\n List<BigDecimal> getDecimals \n List<Double> getDoubles \n List<String> getIds \n List<ComplexNode> getComplexNodes \n List<Integer> getNumbers", "output": ""}, {"instruction": "Generate java code\nrender the walls ", "input": " float xStartPos \n FloatBuffer lModelAmbient \n float zPos \n float yPos \n float MOVE_FORWARD_SPEED \n float yStartPos \n float walkbiasangle \n float walkbias \n int BULLET_INTERVAL \n long bulletTime \n int MAX_BULLETS \n float ROTATE_SPEED \n Monster[] monsters \n float xPos \n float MOVE_BACKWARD_SPEED \n int MAX_MONSTERS \n FloatBuffer lightPosition \n FloatBuffer whiteLight \n boolean[] monstersLiving \n float heading \n float STRAFE_SPEED \n float zStartPos \n ArrayList<Bullet> bullets \n\n void turnRight \n void restart \n void start \n void update \n void fireBullet \n boolean isFinished \n void walkForwards \n void renderFloor \n void walkBackwards \n void strafeLeft \n Level LoadFromFile \n void strafeRight \n void turnLeft \n Level ReadFromXML \n void render", "output": ""}, {"instruction": "Generate java code\ndefault locale is set and resources bundles are loaded . ", "input": " Logger LOG \n Locale systemDefaultLocale \n String BUNDLES_PATH \n Map<String,ResourceBundle> bundles \n List<ClassLoader> classLoaders \n boolean initialized \n\n void initInternal \n String localize \n String localize \n String getName \n void initForEclipse \n void initForEclipse \n void addClassLoader \n void loadBundle \n String messageFormat \n Locale getSystemDefaultLocale \n Locale[] getLocales \n void setLocale \n void setLocale", "output": ""}, {"instruction": "Generate java code\ngets the parent of the file at a path . ", "input": " int TEMPORARY_SUFFIX_LENGTH \n String TEMPORARY_SUFFIX_FORMAT \n\n String subtractPaths \n String temporaryFileName \n String[] getPathComponents \n String concatPath \n String getPermanentFileName \n boolean isRoot \n String uniqPath \n boolean isTemporaryFileName \n boolean hasPrefix \n String cleanPath \n void validatePath \n String normalizePath", "output": ""}, {"instruction": "Generate java code\nsets the trustmanagers associated with this endpoint . this parameter may be set to null for system default behavior . ", "input": " String certAlias \n SecureRandom secureRandom \n String protocol \n String provider \n CertificateConstraintsType certConstraints \n List<String> ciphersuites \n KeyManager[] keyManagers \n FiltersType cipherSuiteFilters \n TrustManager[] trustManagers \n\n void setCertConstraints \n void setCipherSuites \n void setSecureSocketProtocol \n void setCertAlias \n FiltersType getCipherSuitesFilter \n CertificateConstraintsType getCertConstraints \n SecureRandom getSecureRandom \n void setJsseProvider \n String getCertAlias \n void setKeyManagers \n String getSecureSocketProtocol \n void setSecureRandom \n String getJsseProvider \n TrustManager[] getTrustManagers \n KeyManager[] getKeyManagers \n void setCipherSuitesFilter \n List<String> getCipherSuites", "output": ""}, {"instruction": "Generate java code\nmutator for the replyto property . ", "input": " List<QName> mustUnderstand \n EndpointReferenceType replyTo \n EndpointReferenceType faultTo \n AttributedURIType messageID \n AttributedURIType action \n EndpointReferenceType from \n String namespaceURI \n EndpointReferenceType to \n AttributedURIType toURIType \n QName duplicate \n RelatesToType relatesTo \n\n List<QName> getMustUnderstand \n void setAction \n EndpointReferenceType getReplyTo \n void exposeAs \n void setFrom \n void setDuplicate \n RelatesToType getRelatesTo \n AttributedURIType getTo \n AttributedURIType getAction \n void setMessageID \n AttributedURIType getMessageID \n EndpointReferenceType getFaultTo \n void setFaultTo \n QName getDuplicate \n void setTo \n void setTo \n void setRelatesTo \n EndpointReferenceType getToEndpointReference \n String getNamespaceURI \n String toString \n AddressingProperties createCompatibleResponseProperties \n EndpointReferenceType getFrom", "output": ""}, {"instruction": "Generate java code\nreturn the utc date and time in w3c format down to second yyyy-mm-ddthh : mm : ssz . i.e. : 1997-07-16t19:20:30z ", "input": " String[] W3CDATETIME_MASKS \n TimeZone UTC \n\n boolean isDSTChangeDay \n String formatDateUTC \n String formatDateUTC \n DateFormat getISO8601DateFormat \n TimeZone getTimeZone \n java.util.Date toDate \n Timestamp convertDateToTimestamp \n Date parseDateUTC \n Calendar getCalendar \n Calendar getCalendar \n void moveToEnd \n Date parseUsingMask \n int hoursInDay", "output": ""}, {"instruction": "Generate java code\nmaps the specified row and column to the specified value in the table . neither the row nor the column nor the value can be null the value can be retrieved by calling the get method with a row and column that is equal to the original row and column . ", "input": " List<RowHeaderType> rowHeaders \n List<ColumnHeaderType> columnHeaders \n Hashtable<ColumnHeaderType,ValueType> cells \n Hashtable<RowHeaderType,Hashtable<ColumnHeaderType,ValueType>> rows \n ValueHeaderType value \n\n Hashtable<ColumnHeaderType,ValueType> cells \n ValueType get \n String toString \n ValueHeaderType value", "output": ""}, {"instruction": "Generate java code\nset the list of accepted signature algorithms . a request can contain a wst : signaturealgorithm uri to use to sign an issued token . the algorithm specified must be contained in this list . the default algorithms are rsa-sha1 . ", "input": " List<String> acceptedC14nAlgorithms \n String signatureAlgorithm \n long maximumKeySize \n long keySize \n List<String> acceptedSignatureAlgorithms \n String c14nAlgorithm \n String digestAlgorithm \n long minimumKeySize \n boolean useKeyValue \n\n String getC14nAlgorithm \n boolean isUseKeyValue \n List<String> getAcceptedC14nAlgorithms \n void setUseKeyValue \n long getMinimumKeySize \n void setAcceptedC14nAlgorithms \n void setC14nAlgorithm \n void setDigestAlgorithm \n void setMinimumKeySize \n String getDigestAlgorithm \n List<String> getAcceptedSignatureAlgorithms \n String getSignatureAlgorithm \n void setSignatureAlgorithm \n long getKeySize \n void setMaximumKeySize \n void setKeySize \n long getMaximumKeySize", "output": ""}, {"instruction": "Generate java code\ntest of setresponsestring method , of class logentryrequest . ", "input": " LogEntryRequest instance \n\n void testGetResponseStringCsv \n void testGetTsSend \n void testGetTsReceived \n void testGetResponseString \n void testGetFaultFlag \n void testSetFaultFlag \n void testSetDuration \n void testGetErrorFlag \n void testSetThreadNumber \n void testSetTsSend \n void testSetTsReceived \n void testGetDuration \n void testGetThreadNumber", "output": ""}, {"instruction": "Generate java code\nprovide explicit mappings to reflectionservicefactory . ", "input": " Bus bus \n Map<String,String> BUILTIN_SCHEMA_LOCS \n boolean mtomEnabled \n Collection<DOMSource> schemas \n boolean hackAroundEmptyNamespaceIssue \n Map<String,String> namespaceMap \n int mtomThreshold \n Map<String,String> contextualNamespaceMap \n\n Bus getBus \n boolean isMtomEnabled \n Map<String,String> getContextualNamespaceMap \n void updateSchemaLocation \n void setNamespaceMap \n void setMtomThreshold \n Map<String,String> getNamespaceMap \n void checkNamespaceMap \n XmlSchema addSchemaDocument \n XmlSchema addSchemaDocument \n void setMtomEnabled \n Collection<DOMSource> getSchemas \n void setSchemas \n Document doEmptyNamespaceHack \n Document copy \n void setContextualNamespaceMap \n int getMtomThreshold \n void setBus", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #getmode . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetCourse \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmbparser #getsteerto . ", "input": " String EXAMPLE \n RMBSentence rmb \n RMBSentence empty \n\n void testGetVelocity \n void testGetCrossTrackError \n void testArrivalStatus \n void testSetDestination \n void testSetBearing \n void testSetSteerToWithNull \n void testSetOriginId \n void testSetStatus \n void testConstructor \n void testGetBearing \n void testSetBearingWithNegativeValue \n void testSetSteerTo \n void testSetVelocity \n void testGetOriginId \n void testSetVelocityWithNegativeValue \n void setUp \n void testGetStatus \n void testSetBearingWithValueGreaterThanAllowed \n void testGetRange \n void testSetRange \n void testGetDestination \n void testSetCrossTrackError", "output": ""}, {"instruction": "Generate java code\nestimates the number of output records in the index selection , which is the same as the number of search key values for the index . ", "input": " Plan p \n IndexInfo ii \n Constant val \n\n Schema schema \n int blocksAccessed \n int distinctValues \n Scan open", "output": ""}, {"instruction": "Generate java code\nget the msg value . ", "input": " String msg \n\n void setMsg", "output": ""}, {"instruction": "Generate java code\nreturn the priority of the command . ", "input": " String DEFAULT_LOCK_TIMEOUT \n XLog LOG \n boolean dryrun \n XLog.Info logInfo \n int priority \n String type \n Map<Long,List<XCommand<?>>> commandQueue \n boolean used \n String name \n long createdTime \n MemoryLocks.LockToken lock \n String INSTRUMENTATION_GROUP \n Instrumentation instrumentation \n\n void loadState \n String getName \n long getLockTimeOut \n void releaseLock \n void eagerVerifyPrecondition \n T execute \n void resetUsed \n String getEntityKey \n Instrumentation getInstrumentation \n T call \n void verifyPrecondition \n boolean isLockRequired \n String getType \n void acquireLock \n void eagerLoadState \n long getCreatedTime \n void queue \n void queue", "output": ""}, {"instruction": "Generate java code\nadd a new declaration to the current scope using a unique prefix and return the prefix . this is useful when one just wants to add a decl and does n't want to have to deal with creating unique prefixes . if the namespace name is already declared and in scope , then the previously declared prefix is returned . ", "input": " String NS_PREFIX_PREFIX \n List<List<NSDecl>> stack \n List<NSDecl> top \n int size \n int nsPrefixCount \n\n void pop \n String getPrefix \n void push \n String getURI", "output": ""}, {"instruction": "Generate java code\nwhen adding a new substitution a - > b to the map , we need to check if there are already any existing substitutions , say c - > a , and if so , replace them appropriately , in this case with c - > b . this method allows subclasses to perform substitution on a value in the substitution map b in the example above . subclasses may need to override this if the keys and values are not the same object . ", "input": " Map<ClassType,ClassType> substClassTypeCache \n Map<CacheTypeWrapper,Type> cache \n Type t \n Map<Formal,Actual> subst \n long readObjectVersionUID \n long serialVersionUID \n long writeObjectVersionUID \n ParamTypeSystem<Formal,Actual> ts \n\n void cachePut \n ClassType substClassTypeImpl \n T substMethod \n CacheTypeWrapper typeWrapper \n List<T> substConstructorList \n T transform \n T transform \n T transform \n T transform \n Map<Formal,Actual> substitutions \n T substConstructor \n int hashCode \n int hashCode \n ClassType substClassType \n boolean cacheTypeEquality \n ReferenceType substContainer \n List<T> substMethodList \n Type cacheGet \n List<T> substTypeList \n void writeObject \n Type substType \n void readObject \n Iterator<Entry<Formal,Actual>> entries \n ParamTypeSystem<Formal,Actual> typeSystem \n PClass<Formal,Actual> substPClass \n boolean equals \n boolean equals \n List<T> substFieldList \n Type uncachedSubstType \n Iterable<Entry<Formal,Actual>> is_entry \n String toString \n String toString \n T substField", "output": ""}, {"instruction": "Generate java code\ncreate an instance of browseoffersresponse.return.offerdata.offermedia.offerimage.entry.value ", "input": " PlaceHolder placeHolder \n\n BrowseOffersResponse.Return.OfferData.Seo createBrowseOffersResponseReturnOfferDataSeo \n BrowseOffersResponse.Return.OfferData.Geo.Region.Country.State createBrowseOffersResponseReturnOfferDataGeoRegionCountryState \n BrowseOffersResponse.Return.OfferData.OfferMedia createBrowseOffersResponseReturnOfferDataOfferMedia \n BrowseOffersResponse createBrowseOffersResponse \n BrowseOffersResponse.Return.OfferData.Geo.Region.Country createBrowseOffersResponseReturnOfferDataGeoRegionCountry \n BrowseOffersResponse.Return createBrowseOffersResponseReturn \n BrowseOffersResponse.Return.OfferData createBrowseOffersResponseReturnOfferData \n BrowseOffersResponse.Return.OfferData.Merchant createBrowseOffersResponseReturnOfferDataMerchant \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntry \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage createBrowseOffersResponseReturnOfferDataOfferMediaOfferImage \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry.Value.Item createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntryValueItem \n BrowseOffersResponse.Return.OfferData.Geo createBrowseOffersResponseReturnOfferDataGeo \n BrowseOffersResponse.Return.OfferData.Geo.Region createBrowseOffersResponseReturnOfferDataGeoRegion", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rteparser #setsentenceindex int . ", "input": " RTESentence rte \n String EXAMPLE \n RTESentence empty \n\n void testGetWaypointIds \n void testIsActiveRoute \n void testIsFirst \n void testGetSentenceIndex \n void testConstructor \n void testSetSentenceCountWithNegativeValue \n void testAddWaypointId \n void testGetSentenceCount \n void testSetWaypointIds \n void testSetRouteId \n void testIsWorkingRoute \n void testSetSentenceCount \n void testGetRouteId \n void testSetRouteTypeActive \n void setUp \n void testIsLast \n void testGetWaypointCount \n void testSetSentenceIndex \n void testSetRouteTypeWorking", "output": ""}, {"instruction": "Generate java code\nstep back . ", "input": " int step \n List<JPanel> panels \n boolean started \n boolean finished \n WizardItem item \n\n void next \n void removePanel \n JPanel getCurrentPanel \n boolean canGoBack \n boolean canFinish \n int getStep \n JPanel makePanel \n int getNumSteps \n boolean isStarted \n void setToDoItem \n boolean isFinished \n void undoAction \n void undoAction \n int getProgress \n WizardItem getToDoItem \n boolean canGoNext \n void finish \n JPanel getPanel \n void doAction \n void doAction", "output": ""}, {"instruction": "Generate java code\ncall motionevent #getx int . if running on a pre - @android . os.build.version _ codes #honeycomb device , indexoutofboundsexception is thrown . ", "input": " int ACTION_MASK \n MotionEventVersionImpl IMPL \n int ACTION_POINTER_INDEX_SHIFT \n int ACTION_POINTER_INDEX_MASK \n int ACTION_HOVER_MOVE \n int ACTION_POINTER_DOWN \n int ACTION_POINTER_UP \n int ACTION_SCROLL \n\n float getY \n float getY \n float getY \n float getY \n int findPointerIndex \n int findPointerIndex \n int findPointerIndex \n int findPointerIndex \n int getPointerId \n int getPointerId \n int getPointerId \n int getPointerId \n int getActionIndex \n int getActionMasked", "output": ""}, {"instruction": "Generate java code\ngets committed bytes for this dir . this includes all blocks , locked , pinned , committed etc. . ", "input": " BlockMetadataManagerView mManagerView \n StorageDir mDir \n long mBlocksToMoveOutSize \n long mBlocksToMoveInSize \n StorageTierView mTierView \n Set<Long> mBlocksToMoveIn \n Set<Long> mBlocksToMoveOut \n\n long getEvitableBytes \n StorageTierView getParentTierView \n boolean isMarkedToMoveOut \n void markBlockMoveIn \n TempBlockMeta createTempBlockMeta \n void clearBlockMarks \n int getDirViewIndex \n List<BlockMeta> getEvictableBlocks \n long getCapacityBytes \n long getAvailableBytes \n BlockStoreLocation toBlockStoreLocation \n void markBlockMoveOut", "output": ""}, {"instruction": "Generate java code\ntests conversion to thrift representation . ", "input": " PlaceHolder placeHolder \n\n void defaults \n void fields \n void equalsTest", "output": ""}, {"instruction": "Generate java code\nreturn the default classloader to use : typically the thread context classloader , if available ; the classloader that loaded the classutils class will be used as fallback . call this method if you intend to use the thread context classloader in a scenario where you absolutely need a non-null classloader reference : for example , for class path resource loading but not necessarily for class.forname , which accepts a null classloader reference as well . ", "input": " Map<Class<?>,Class<?>> primitiveWrapperTypeMap \n String ARRAY_SUFFIX \n String INTERNAL_ARRAY_PREFIX \n Map<String,Class<?>> primitiveTypeNameMap \n\n ClassLoader getCallerClassLoader \n Class<?> resolvePrimitiveClassName \n String toShortString \n Class<?> forNameWithThreadContextClassLoader \n Class<?> forNameWithCallerClassLoader \n Class<?> forName \n Class<?> forName", "output": ""}, {"instruction": "Generate java code\nget wrapper . ", "input": " Map<Class<?>,Wrapper> WRAPPER_MAP \n Wrapper OBJECT_WRAPPER \n String[] EMPTY_STRING_ARRAY \n AtomicLong WRAPPER_CLASS_COUNTER \n String[] OBJECT_METHODS \n\n boolean hasMethods \n String[] getDeclaredMethodNames \n String[] getDeclaredMethodNames \n void setPropertyValues \n Object[] getPropertyValues \n String[] getMethodNames \n String[] getMethodNames \n boolean hasProperty \n boolean hasProperty \n boolean hasMethod \n Class<?> getPropertyType \n Class<?> getPropertyType \n String args \n Wrapper makeWrapper \n Object getPropertyValue \n Object getPropertyValue \n String propertyName \n void setPropertyValue \n void setPropertyValue \n String arg \n String[] getPropertyNames \n String[] getPropertyNames \n Object invokeMethod \n Object invokeMethod", "output": ""}, {"instruction": "Generate java code\ncreates a project scan for this query . ", "input": " Plan p \n Schema schema \n\n Schema schema \n int blocksAccessed \n int distinctValues \n int recordsOutput", "output": ""}, {"instruction": "Generate java code\nasigna un nuevo grado al polonomio ", "input": " int grado \n int[] coef \n\n boolean igualA \n void setCoeficientes \n int getGrado \n int getCoeficiente \n String toString \n void setCoeficiente \n int[] getCoeficientes", "output": ""}, {"instruction": "Generate java code\ncalls the given restutils.restcallable and handles any exceptions thrown . ", "input": " Logger LOG \n\n Response createResponse \n Response createErrorResponse", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #setyear int . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nbuilds the qualified name of a constructor declaration . ", "input": " Pattern FORMAT \n String[] packages \n String operation \n String[] classes \n\n QualifiedName makeOuterClassOf \n boolean isClass \n QualifiedName parseName \n String getOperationName \n boolean isOperation \n QualifiedName makeNestedClassOf \n int hashCode \n boolean equals \n String[] getPackages \n String getOperation \n String toString \n String[] getClasses \n QualifiedName makeClassOf", "output": ""}, {"instruction": "Generate java code\nunset application management service implementation ", "input": " Log log \n BundleContext bundleContext \n\n void setApplicationMgtService \n void activate", "output": ""}, {"instruction": "Generate java code\nget a list of strings that corresponds to the subject regular expression constraints from a jaxb certificateconstraintstype ", "input": " PlaceHolder placeHolder \n\n List<String> getIssuerConstraints \n CertConstraints createCertConstraints \n CertConstraints.Combinator getSubjectConstraintsCombinator \n CertConstraints.Combinator getIssuerConstraintsCombinator", "output": ""}, {"instruction": "Generate java code\ntest method for notificationcontroller #deregisterusersession serversession , servermessage verifies that nullpointerexception is thrown when serversession is null . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n NotificationController notificationController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle \n void testGetServerSessionByUserId \n void tearDown \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId \n void testRegisterUserSessionWithNullServerSessionThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\nretrieves a tiled map . tmx from the system . ", "input": " ShadowStruggles game \n Array<Asset> textures \n Array<Asset> sounds \n Array<Asset> rpgMaps \n String assetName \n Array<Asset> textureRegions \n String LOG \n String assetType \n\n void loadMaps \n void disposeSounds \n TextureRegion getTextureRegion \n void disposeTextures \n void disposeMaps \n Texture getTexture \n void unloadSounds \n void loadSounds \n boolean equals \n void setAssetsToLoad \n void loadAssets \n void dispose \n void loadTextureAtlas \n void createTextureAtlas \n void disposeAtlas \n void loadTextures", "output": ""}, {"instruction": "Generate java code\nreturn true if any element in ' candidates ' is contained in ' source ' ; otherwise returns false . ", "input": " Enumeration<E> enumeration \n\n Iterator<E> toIterator \n E next \n List arrayToList \n void mergePropertiesIntoMap \n boolean containsInstance \n T findValueOfType \n Object findValueOfType \n boolean isEmpty \n boolean isEmpty \n boolean hasUniqueObject \n boolean hasNext \n void remove \n boolean contains \n boolean contains \n Object findFirstMatch \n A[] toArray \n Class<?> findCommonElementType \n void mergeArrayIntoCollection", "output": ""}, {"instruction": "Generate java code\ntest for getlathemisphere ", "input": " Position instance \n\n void testGetLatitude \n void testSetIllegalLatitudeSouth \n void testDistanceToSelf \n void testSetIllegalLongitudeWest \n void testGetDatum \n void testSetLatitudeSouth \n void testDistanceTo \n void testSetIllegalLongitudeEast \n void testToWaypoint \n void testSetLongitudeEast \n void setUp \n void testGetLongitude \n void testSetLongitudeWest \n void testSetLatitudeNorth \n void testGetLongitudeHemisphere \n void testSetIllegalLatitudeNorth", "output": ""}, {"instruction": "Generate java code\ncreate an instance of passwordcredentials ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n RoleList createRoleList \n CheckServiceAccessRequest createCheckServiceAccessRequest \n JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n ValidateAccess createValidateAccess \n JAXBElement<ValidateAccess> createValidateAccess \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n CertificateInfo createCertificateInfo \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n RegistrationRequest createRegistrationRequest \n JAXBElement<RegistrationRequest> createRegistrationRequest \n Access createAccess \n JAXBElement<Access> createAccess \n ProjectValidation createProjectValidation \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\nverifies that two violations nodes with different begincolumn arenot equal . ", "input": " PlaceHolder placeHolder \n\n void testEqualsNodeWithTwoDifferentViolationsDifferentEndColumn \n ViolationNode createViolationNode \n void testEqualsNodeWithTwoDifferentViolationsDifferentVariableName \n void testEqualsNodeWithTwoDifferentViolationsDifferentEndLine \n void testEqualsNodeWithTwoDifferentViolationsDifferentFilename \n void testEqualsNodeWithTwoDifferentViolationsDifferentBeginLine \n void testEqualsNodeWithTwoEqualViolations", "output": ""}, {"instruction": "Generate java code\ngets the exp data unit id . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n void setActValue \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n void setSrcFileName \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n void setFailedAttrib \n BigDecimal getExpDataSetId \n String getErrorMsg \n String getActValue \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n Timestamp getCreateTimeStamp \n String getFailedAttrib \n void setExpDataSetId \n void setDataSetId \n void setExpDataUnitId", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #equals java.lang.object . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nsets the reg pcl test result details . ", "input": " Timestamp lastModifiedTimeStamp \n Timestamp fetcherStartTimestamp \n Timestamp createTimeStamp \n long serialVersionUID \n BigDecimal batchId \n String errorMsg \n OutcomeType outcomeType \n String createdBy \n BigDecimal feedId \n long testId \n BigDecimal runId \n Timestamp fetcherEndTimeStamp \n List<RegPCLTestResultDetailsEntity> regPclTestResultDetails \n RunStatusType runStatus \n\n void setLastModifiedTimeStamp \n void setFeedId \n void setFetcherStartTimestamp \n OutcomeType getOutcomeType \n void updateLastModifiedTimeStamp \n void updateCreateTimeStamp \n BigDecimal getRunId \n void setBatchId \n List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails \n void setTestId \n long getTestId \n RegPCLTestResultDetailsEntity removeRegPclTestResultDetail \n void setErrorMsg \n RunStatusType getRunStatus \n RegPCLTestResultDetailsEntity addRegPclTestResultDetail \n String getErrorMsg \n void setRunStatus \n Timestamp getFetcherEndTimeStamp \n Timestamp getLastModifiedTimeStamp \n BigDecimal getFeedId \n void setRunId \n Timestamp getFetcherStartTimestamp \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n Timestamp getCreateTimeStamp \n BigDecimal getBatchId \n void setOutcomeType \n String getCreatedBy", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time #setminutes int . ", "input": " Time time \n\n void testDateRoundTrip \n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\nget the heap min without extracting the key ", "input": " Map<T,Integer> nodePosition \n List<Node> allNodes \n int weight \n T key \n\n void add \n void printPositionMap \n void swap \n void updatePositionMap \n Integer getWeight \n Node extractMinNode \n void printHeap \n void main \n T extractMin \n void decrease \n boolean containsData \n boolean empty", "output": ""}, {"instruction": "Generate java code\ngets a textual title for the notation suitable for use in a combo box or other such visual location . ", "input": " Logger LOG \n String name \n Icon icon \n ArrayList<NotationName> notations \n String version \n\n String getVersion \n String getNotationNameString \n String getName \n void fireEvent \n boolean removeNotation \n Icon getIcon \n String getConfigurationValue \n NotationName findNotation \n NotationName getNotation \n NotationName getNotation \n List<NotationName> getAvailableNotations \n String toString \n NotationName makeNotation \n boolean sameNotationAs", "output": ""}, {"instruction": "Generate java code\nreturns a topkselector that collects the greatest k elements added to it , relative to the natural ordering of the elements , and returns them via #topk indescending order . ", "input": " Comparator<? super T> comparator \n T threshold \n int k \n T[] buffer \n int bufferSize \n\n void offer \n List<T> topK \n int partition \n void trim \n void swap \n void offerAll \n void offerAll \n TopKSelector<T> least \n TopKSelector<T> least \n TopKSelector<T> combine", "output": ""}, {"instruction": "Generate java code\nstore an xkmscachetoken in the cache using the given key ", "input": " Bus bus \n Ehcache cache \n String CACHE_KEY \n String DEFAULT_CONFIG_URL \n CacheManager cacheManager \n\n void postShutdown \n void createCache \n XKMSCacheToken get \n void initComplete \n void close \n void preShutdown", "output": ""}, {"instruction": "Generate java code\nreturns the values in the container packaged in a bundle . ", "input": " Bundle bundle \n Bundle bundle \n\n E putStringArrayList \n SharePhoto getPhoto \n E putPhotoArrayList \n E putDoubleArray \n double getDouble \n E putDouble \n E putLong \n double[] getDoubleArray \n Object get \n ArrayList<ShareOpenGraphObject> getObjectArrayList \n E putIntArray \n boolean getBoolean \n E putLongArray \n Set<String> keySet \n E putBoolean \n boolean[] getBooleanArray \n ArrayList<SharePhoto> getPhotoArrayList \n ShareOpenGraphObject getObject \n E putPhoto \n E readFrom \n E putInt \n E putString \n ArrayList<String> getStringArrayList \n String getString \n int describeContents \n long[] getLongArray \n long getLong \n int getInt \n E putObjectArrayList \n E putBooleanArray \n E putObject \n void writeToParcel \n int[] getIntArray", "output": ""}, {"instruction": "Generate java code\ngets the quality . ", "input": " int volume \n double occupancy \n Timestamp measurement_date \n int lane_id \n long id \n double speed \n int quality \n\n double getOccupancy \n void setOccupancy \n Timestamp getMeasurement_date \n int getLane_id \n long getId \n void setVolume \n void setLane_id \n void setSpeed \n int getVolume \n void setQuality \n double getSpeed \n void setMeasurement_date \n void setId \n String toString", "output": ""}, {"instruction": "Generate java code\nget the value of album ", "input": " FolderInfo.CheckedFlag checkedFlag \n String artist \n String album \n double rating \n int errorLevel \n\n FolderInfo.CheckedFlag getCheckedFlag \n void setArtist \n int getErrorLevel \n void setErrorLevel \n String getArtist \n void setAlbum \n String toString \n void setCheckedFlag \n void setRating \n double getRating", "output": ""}, {"instruction": "Generate java code\nset time zone offset hours . ", "input": " int offsetHours \n int offsetMinutes \n double seconds \n int minutes \n int hour \n String TIME_PATTERN \n\n int getOffsetHours \n Date toDate \n String toISO8601 \n void setMinutes \n void setHour \n long getMilliseconds \n void setOffsetMinutes \n int getMinutes \n double getSeconds \n int hashCode \n void setSeconds \n boolean equals \n int getOffsetMinutes \n int getHour \n String toString \n void setTime", "output": ""}, {"instruction": "Generate java code\nreturns an array containing all the bitcoin nodes within the list . ", "input": " int pnseedIndex \n int[] seedAddrs \n NetworkParameters params \n\n InetSocketAddress nextPeer \n InetSocketAddress[] allPeers \n InetSocketAddress getPeer \n InetAddress convertAddress \n void shutdown", "output": ""}, {"instruction": "Generate java code\nadds a source for the schema defintion . ", "input": " ArrayList<Source> sources \n JAXPValidator validator \n\n boolean isSchemaValid \n List<SAXParseException> getInstanceErrors \n boolean isInstanceValid \n List<SAXParseException> problemToExceptionList \n List<SAXParseException> getSchemaErrors", "output": ""}, {"instruction": "Generate java code\nnote this will also set the textureregion with the associated pglobaltileid of the tmxtiledmap . ", "input": " int mGlobalTileID \n int mTileWidth \n int mTileColumn \n int mTileRow \n int mTileHeight \n TextureRegion mTextureRegion \n\n int getTileHeight \n int getTileWidth \n TMXProperties<TMXTileProperty> getTMXTileProperties \n int getGlobalTileID \n int getTileY \n int getTileX \n TextureRegion getTextureRegion \n int getTileRow \n void setTextureRegion \n int getTileColumn", "output": ""}, {"instruction": "Generate java code\nejecuta un turno para el piloto dado . ", "input": " AtomicLong rondas \n List<? extends Piloto> pilotos \n AtomicLong timeout \n List<Observador> observadores \n Partida partida \n Semaphore semaforo \n\n void rondaTerminada \n void exception \n void agregarObservador \n void notificarObservadoresException \n void runRonda \n void run \n void setPartida \n void finalizacion \n void setPilotos \n void setTimeout \n long getRondas \n void notificarObservadoresRondaTerminada \n Partida getPartida \n List<Observador> getObservadores \n void notificarObservadoresFinalizacion \n long getTimeout \n List<? extends Piloto> getPilotos \n Semaphore getSemaforo", "output": ""}, {"instruction": "Generate java code\nenables or disables the timeout entirely . this may be useful if you want to store the timeout value but wish to temporarily disable/enable timeouts . the default is for timeoutenabled to be true but timeoutmillis to be set to 0 ie disabled . this call will reset the current progress towards the timeout . ", "input": " Timer timeoutTimer \n TimerTask timeoutTask \n boolean timeoutEnabled \n long timeoutMillis \n\n void setSocketTimeout \n void resetTimeout \n void timeoutOccurred", "output": ""}, {"instruction": "Generate java code\nthe value which this transaction output holds . ", "input": " boolean coinbase \n long serialVersionUID \n long index \n Coin value \n byte[] scriptBytes \n Sha256Hash hash \n int height \n\n int getHeight \n Sha256Hash getHash \n long getIndex \n boolean isCoinbase \n int hashCode \n void serializeToStream \n boolean equals \n String toString \n byte[] getScriptBytes", "output": ""}, {"instruction": "Generate java code\ngets the value of the items property . ", "input": " USAddress billTo \n String comment \n Items items \n XMLGregorianCalendar orderDate \n USAddress shipTo \n\n USAddress getShipTo \n USAddress getBillTo \n void setBillTo \n void setItems \n void setOrderDate \n void setComment \n XMLGregorianCalendar getOrderDate \n String getComment \n void setShipTo", "output": ""}, {"instruction": "Generate java code\nthis method signs requests in query-string form . it returns a url that should be used to fetch the response . the url returned should not be modified in any way , doing so will invalidate the signature and amazon will reject the request . ", "input": " String awsSecretKey \n String awsAccessKeyId \n String associatetag \n SecretKeySpec secretKeySpec \n String HMAC_SHA256_ALGORITHM \n String REQUEST_METHOD \n String UTF8_CHARSET \n String endpoint \n String REQUEST_URI \n Mac mac \n\n String percentEncodeRfc3986 \n Map<String,String> createParameterMap \n String hmac \n SignedRequestsHelper getInstance \n String canonicalize \n String timestamp", "output": ""}, {"instruction": "Generate java code\nretrieves the underlying node ", "input": " Node node \n SimpleNodeTreeNodeAdapter parent \n List<TreeNode> children \n\n int getChildCount \n void checkChildren \n TreeNode getChildAt \n TreeNode getParent \n int getIndex \n Enumeration<TreeNode> children \n boolean getAllowsChildren \n String toString \n boolean isLeaf", "output": ""}, {"instruction": "Generate java code\ntests that an exception is thrown when trying to validate a lock of a block via blocklockmanager #validatelock long , long , long which is not locked . ", "input": " BlockLockManager mLockManager \n long TEST_BLOCK_ID \n ExpectedException mThrown \n long TEST_SESSION_ID \n TemporaryFolder mFolder \n\n void lockAcrossSessions \n void stress \n void unlockNonExistingLock \n void dontReuseLock \n void before \n void reuseLock \n void readBlocksWrite \n void validateLockIdWithWrongBlockId \n void setMaxLocks \n void lockExpectingHang \n void lockBlock \n void grabManyLocks \n void validateLockIdWithWrongSessionId \n void cleanupSession \n void after", "output": ""}, {"instruction": "Generate java code\nadds an oauth callback url ", "input": " String apiKey \n OutputStream debugStream \n String scope \n SignatureType signatureType \n String callback \n String apiSecret \n Api api \n\n ServiceBuilder debug \n ServiceBuilder apiKey \n ServiceBuilder debugStream \n ServiceBuilder provider \n ServiceBuilder provider \n OAuthService build \n Api createApi \n ServiceBuilder scope \n ServiceBuilder signatureType \n ServiceBuilder callback \n ServiceBuilder apiSecret", "output": ""}, {"instruction": "Generate java code\nautogenerates a factory mapping skeleton for the given class . ", "input": " Map<ClassType,EfgClassInfo> factoryMappings \n Config config \n ValidationState validation \n ExtensionInfo extInfo \n EfgTypeSystem ts \n\n Config readConfig \n String superClass \n EfgClassInfo get \n Map<ClassType,EfgClassInfo> factoryMappings \n String packageName \n String lang \n String superInterface \n void ensureConfig \n void validate", "output": ""}, {"instruction": "Generate java code\nreturn the task launch id for the task . ", "input": " Map<String,String> attributes \n String id \n LaunchState state \n\n LaunchState getState \n Map<String,String> getAttributes \n String toString", "output": ""}, {"instruction": "Generate java code\nremoves all of the specified ranges from this range set optional operation . this is equivalent to calling #remove on each of the ranges in other inturn . ", "input": " PlaceHolder placeHolder \n\n void add \n Set<Range<C>> asDescendingSetOfRanges \n boolean intersects \n boolean isEmpty \n void clear \n boolean enclosesAll \n boolean enclosesAll \n RangeSet<C> subRangeSet \n void remove \n boolean contains \n Range<C> rangeContaining \n void addAll \n void addAll \n int hashCode \n boolean equals \n String toString \n RangeSet<C> complement \n boolean encloses \n Set<Range<C>> asRanges \n Range<C> span", "output": ""}, {"instruction": "Generate java code\ngets the test id . ", "input": " String feedId \n String destFileName \n String testId \n\n void setDestFileName \n void setFeedId \n String toString \n String getFeedId \n void setTestId \n String getDestFileName", "output": ""}, {"instruction": "Generate java code\nreturns whether a given state is the downloading state . ", "input": " Logger LOG \n\n File determineFile \n File determineFile \n File defaultFile \n HeadMethod issueHeadRequest \n boolean isMoved \n File downloadTorrentFile", "output": ""}, {"instruction": "Generate java code\ncreates a new hibernate session factory . ", "input": " boolean m_createTables \n Configuration m_config \n Logger LOG \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nsets the uri attribute of the stylesheetinfo object ", "input": " int AUTHOR \n int USER \n int USER_AGENT \n Stylesheet stylesheet \n int origin \n List mediaTypes \n String title \n String type \n String uri \n String content \n\n void addMedium \n void setContent \n void setStylesheet \n List getMedia \n int getOrigin \n boolean appliesToMedia \n void setOrigin \n String getContent \n void setTitle \n Stylesheet getStylesheet \n void setType \n String getTitle \n String getType \n void setMedia \n void setMedia \n boolean isInline \n String getUri", "output": ""}, {"instruction": "Generate java code\nretrieves a texture from the file system . ", "input": " ShadowStruggles game \n Array<Asset> textures \n Array<Asset> sounds \n Array<Asset> rpgMaps \n String assetName \n Array<Asset> textureRegions \n String LOG \n String assetType \n\n void loadMaps \n void disposeSounds \n TextureRegion getTextureRegion \n TiledMap getTiledMap \n void disposeTextures \n void disposeMaps \n void unloadSounds \n void loadSounds \n boolean equals \n void setAssetsToLoad \n void loadAssets \n void dispose \n void loadTextureAtlas \n void createTextureAtlas \n void disposeAtlas \n void loadTextures", "output": ""}, {"instruction": "Generate java code\nhas this token expired ? ", "input": " String QUERY_BY_TOKEN_VALUE \n String QUERY_EXPIRED_BY_DATE \n String QUERY_BY_CLIENT \n String PARAM_CLIENT \n String QUERY_ALL \n String PARAM_TOKEN_VALUE \n JWT jwt \n String PARAM_DATE \n AuthenticationHolderEntity authenticationHolder \n ClientDetailsEntity client \n Date expiration \n Long id \n\n String getValue \n void setClient \n AuthenticationHolderEntity getAuthenticationHolder \n Date getExpiration \n void setJwt \n void setId \n JWT getJwt \n Long getId \n void setAuthenticationHolder \n void setExpiration \n ClientDetailsEntity getClient", "output": ""}, {"instruction": "Generate java code\nreturns the string value of the specified field . the value is obtained from whichever scan contains the field . ", "input": " Scan s1 \n Scan s2 \n\n boolean next \n int getInt \n Constant getVal \n void beforeFirst \n void close \n boolean hasField", "output": ""}, {"instruction": "Generate java code\nused to specify a different ws-addressing namespace uri , so as to cause maps to be exposed i.e. encoded in externalized message with a different ws-addressing version . ", "input": " List<QName> mustUnderstand \n EndpointReferenceType replyTo \n EndpointReferenceType faultTo \n AttributedURIType messageID \n AttributedURIType action \n EndpointReferenceType from \n String namespaceURI \n EndpointReferenceType to \n AttributedURIType toURIType \n QName duplicate \n RelatesToType relatesTo \n\n List<QName> getMustUnderstand \n void setAction \n EndpointReferenceType getReplyTo \n void setFrom \n void setDuplicate \n RelatesToType getRelatesTo \n AttributedURIType getTo \n AttributedURIType getAction \n void setMessageID \n AttributedURIType getMessageID \n EndpointReferenceType getFaultTo \n void setReplyTo \n void setFaultTo \n QName getDuplicate \n void setTo \n void setTo \n void setRelatesTo \n EndpointReferenceType getToEndpointReference \n String getNamespaceURI \n String toString \n AddressingProperties createCompatibleResponseProperties \n EndpointReferenceType getFrom", "output": ""}, {"instruction": "Generate java code\nstring for the type of object used for the symbol on the parse stack . ", "input": " String _stack_type \n String _name \n int _index \n int _use_count \n\n int use_count \n String name \n boolean is_non_term \n void note_use \n int index \n String toString", "output": ""}, {"instruction": "Generate java code\ngets the path component of the alluxiouri . ", "input": " String SEPARATOR \n long serialVersionUID \n String CUR_DIR \n String WILDCARD \n URI mUri \n AlluxioURI EMPTY_URI \n\n AlluxioURI getParent \n int getDepth \n String getName \n String getScheme \n boolean isRoot \n boolean isPathAbsolute \n boolean containsWildcard \n int compareTo \n String getAuthority \n boolean hasScheme \n int getPort \n String getLeadingPath \n int hashCode \n boolean hasWindowsDrive \n boolean equals \n boolean isAbsolute \n Map<String,String> getQueryMap \n String toString \n AlluxioURI join \n AlluxioURI join \n String normalizePath \n String getHost \n boolean hasAuthority", "output": ""}, {"instruction": "Generate java code\nreturns true if the block height is either not a checkpoint , or is a checkpoint and the hash matches . ", "input": " int addressHeader \n int INTERVAL \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n long packetMagic \n int p2shHeader \n List<NetworkParameters> paramSet \n int PROTOCOL_VERSION \n Block genesisBlock \n BigInteger proofOfWorkLimit \n int subsidyDecreaseBlockCount \n int port \n BigInteger MAX_MONEY \n int TARGET_SPACING \n String[] dnsSeeds \n Map<Integer,Sha256Hash> checkpoints \n byte[] SATOSHI_KEY \n int interval \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n Sha256Hash calculateBlockPoWHash \n BigInteger getMaxMoney \n NetworkParameters getParamsFromAddressByte \n void registerParams \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n int getRetargetBlockCount \n int getRetargetBlockCount \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean isAcceptableAddressVersion \n String getURIScheme \n BigInteger getProofOfWorkLimit", "output": ""}, {"instruction": "Generate java code\nhandle event from the rawrtfparser . ", "input": " IParserEventHandler handler \n IParserEvent GROUP_END \n IParserEvent GROUP_START \n IParserEvent DOCUMENT_START \n Deque<IParserEventHandler> handlerStack \n Map<Integer,String> m_fontEncodings \n Deque<ParserState> stack \n IParserEvent DOCUMENT_END \n ParserState state \n int skipBytes \n\n void processCharacter \n void processUpr \n void handleEvent \n void processDocumentEnd \n void processGroupEnd \n void processCommand \n void parse \n void processCharacterBytes \n void processString \n void processDocumentStart \n void processUnicodeAlternateSkipCount \n void handleCommand \n void processGroupStart \n void processFont \n void processEncoding \n void processUnicode \n String currentEncoding \n void processFontCharset", "output": ""}, {"instruction": "Generate java code\nreturns the integer value for the currentvalue . if the currentvalue can not be interpreted as an integer , the defaultvalue is returned . ", "input": " boolean spaceDelimited \n String SINCE \n String defaultValue \n boolean caseSensitive \n String SPACE_DELIMITED \n String description \n long serialVersionUID \n String RESTART_REQUIRED \n boolean restartRequired \n String name \n String CASE_SENSITIVE \n String currentValue \n String since \n\n char getChar \n boolean getBoolean \n String getString \n Map<String,String> getMap \n boolean isDefaultValue \n List<String> getStrings \n List<String> getStrings", "output": ""}, {"instruction": "Generate java code\nadds a parent node to the node . ", "input": " List<DirectedAcyclicGraphNode<T>> mParents \n List<DirectedAcyclicGraphNode<T>> mChildren \n T mPayload \n\n List<DirectedAcyclicGraphNode<T>> getParents \n T getPayload \n List<DirectedAcyclicGraphNode<T>> getChildren \n void removeChild \n void addChild", "output": ""}, {"instruction": "Generate java code\nset the http content-type header . ", "input": " int status \n int INFINITY \n HttpServletRequest request \n URI base \n HttpServletResponse response \n\n URI lookup \n int getDepth \n InputStream read \n String getNormalizedPath \n URI getDestination \n String getMethod \n int getStatus \n boolean hasRequestBody \n void setStatus \n void setHeader \n boolean getOverwrite \n String getOriginalPath \n OutputStream write \n PrintWriter write \n Date getIfModifiedSince", "output": ""}, {"instruction": "Generate java code\ngets the test id . ", "input": " String reason \n String feedId \n String testId \n String batchId \n String runStatus \n\n void setFeedId \n boolean isFeedRunnable \n String getReason \n String getRunStatus \n void setReason \n String getBatchId \n String toString \n String getFeedId \n void setBatchId \n void setTestId \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\nset the stylesheet to use . ", "input": " TransformerFactory factory \n ErrorListener errorListener \n Properties output \n Source styleSheet \n Source source \n URIResolver uriResolver \n Map<String,Object> params \n\n void setSource \n void setFactory \n void transformTo \n void setErrorListener \n void clearParameters \n String transformToString \n void setURIResolver \n void clearOutputProperties \n void addParameter \n Document transformToDocument \n void addOutputProperty", "output": ""}, {"instruction": "Generate java code\ngenerate output file ", "input": " String DIR_NAME \n String mOutputPath \n MediaMuxer mMediaMuxer \n int mStatredCount \n boolean DEBUG \n String TAG \n SimpleDateFormat mDateTimeFormat \n boolean mIsStarted \n int mEncoderCount \n MediaEncoder mAudioEncoder \n MediaEncoder mVideoEncoder \n\n int addTrack \n void prepare \n String getDateTimeString \n void stop \n void addEncoder \n void startRecording \n boolean start \n boolean isStarted \n String getOutputPath \n void stopRecording \n void writeSampleData", "output": ""}, {"instruction": "Generate java code\nreads in the response string from server . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nfor modules , it would be usefule to be able to remove their factories . todo : the effect of this method is not yet tested ! ", "input": " Collection<PropPanelFactory> ppfactories \n\n void addPropPanelFactory \n Collection<PropPanelFactory> getFactories", "output": ""}, {"instruction": "Generate java code\nactivates interest in writing from a thread other than the selector thread . ", "input": " WriteListener m_listener \n SocketChannel m_socketChannel \n SelectorManager m_selectorManager \n int m_numQueued \n Collection m_buffers \n long m_totalBytes \n boolean m_closed \n WriteListener NO_OP_LISTENER \n long m_startTime \n Logger LOG \n List m_writeBuffers \n\n long getTotalBytes \n void disableWriteLater \n void onWrite \n void writeLater \n void writeLater \n void writeLater \n boolean writeBuffer \n void enableWrite \n Collection getBuffers \n void checkForNull \n long getStartTime \n void write \n void write \n void write \n boolean write \n void close \n WriteListener getListener \n int getNumQueued", "output": ""}, {"instruction": "Generate java code\ntests the webutils #convertmstoclocktime long method with one minute . ", "input": " PlaceHolder placeHolder \n\n void convertToClockTimeWithOneMinute30Seconds \n void convertToClockTimeWithOneDay4Hours10Minutes45SecondsWithStopwatch \n void convertToClockTimeWithNegativeValue \n void convertToClockTimeWithShortValue \n void convertToClockTimeWithOneDay4Hours10Minutes45Seconds \n void convertToClockTimeWithOneHour10Minutes45Seconds \n void convertToClockTimeWithOneHour \n void convertToClockTimeWithOneSecond \n void convertToClockTimeWithOneDay", "output": ""}, {"instruction": "Generate java code\nadd a terminal ", "input": " TerminalDeviceRepository repository \n\n TerminalDevice getStatus \n void removeDevice \n Set<Schedule> getSchedule \n void setStatus", "output": ""}, {"instruction": "Generate java code\nreturns if result is not valid ", "input": " int errorLevelFolder \n String tooltip \n int errorLevel \n String value \n\n void restoreFolderErrorLevel \n void setKO \n void setKO \n boolean isWarning \n void setErrorLevel \n int getErrorLevel \n String analyseTrack \n String analyseTrackYear \n String formatNumber \n String colorField \n String colorField \n String getValue \n String analyseTrackComment \n String analyseTrackBpm \n int hashCode \n void setValue \n boolean equals \n String getDisplayToolTip \n void setOK \n String toString \n Color getDisplayColor \n String analyseTrackNumber \n String getDisplayText \n void setWarning \n void setWarning \n String analyseTrackString \n boolean isKO", "output": ""}, {"instruction": "Generate java code\nset up . ", "input": " String BUCKET_PREFIX \n OSSClient mClient \n String DST \n String SRC \n OSSUnderFileSystem mOSSUnderFileSystem \n String PATH \n String BUCKET_NAME \n\n void deleteNonRecursiveOnServiceException \n void renameOnServiceException \n void deleteRecursiveOnServiceException", "output": ""}, {"instruction": "Generate java code\ncloses the page by unpinning its buffer . ", "input": " Transaction tx \n TableInfo ti \n int slotsize \n Block currentblk \n\n void insertDir \n int getChildNum \n void insert \n void delete \n Block split \n void transferRecs \n int fldpos \n int getNumRecs \n int slotpos \n int getFlag \n void setVal \n RID getDataRid \n Constant getVal \n void setFlag \n void insertLeaf \n Block appendNew \n String getString \n void setInt \n int getInt \n void setString \n Constant getDataVal \n void copyRecord \n boolean isFull \n void setNumRecs \n int findSlotBefore", "output": ""}, {"instruction": "Generate java code\naccessor for the from property . ", "input": " List<QName> mustUnderstand \n EndpointReferenceType replyTo \n EndpointReferenceType faultTo \n AttributedURIType messageID \n AttributedURIType action \n EndpointReferenceType from \n String namespaceURI \n EndpointReferenceType to \n AttributedURIType toURIType \n QName duplicate \n RelatesToType relatesTo \n\n List<QName> getMustUnderstand \n void setAction \n EndpointReferenceType getReplyTo \n void exposeAs \n void setFrom \n void setDuplicate \n RelatesToType getRelatesTo \n AttributedURIType getTo \n AttributedURIType getAction \n void setMessageID \n AttributedURIType getMessageID \n EndpointReferenceType getFaultTo \n void setReplyTo \n void setFaultTo \n QName getDuplicate \n void setTo \n void setTo \n void setRelatesTo \n EndpointReferenceType getToEndpointReference \n String getNamespaceURI \n String toString \n AddressingProperties createCompatibleResponseProperties", "output": ""}, {"instruction": "Generate java code\nconvert to a string . ", "input": " lalr_state _to_state \n lalr_transition _next \n symbol _on_symbol \n\n lalr_transition next \n symbol on_symbol \n lalr_state to_state", "output": ""}, {"instruction": "Generate java code\naccesses a float attribute from a tag name and an attribute name within the element identified by that tag . ", "input": " Logger LOG \n\n URI createUriValue \n Date parseDateString \n String createStringValue \n Date createDateValue \n float getFloatAttribute \n boolean createBooleanValue \n float createFloatValue \n long createLongValue \n int createIntValue", "output": ""}, {"instruction": "Generate java code\nget the current classifier . ", "input": " Object mClassifier \n Object namespace \n List newFeatures \n List newInnerClasses \n\n void newFeature \n Vector getAssociationEnds \n Object getNamespace \n List getAssociationEndsList \n List getNewInnerClassesList \n Vector getNewInnerClasses \n Object newClassifier \n Vector getNewFeatures \n List getNewFeaturesList", "output": ""}, {"instruction": "Generate java code\nsets the remote url . ", "input": " String type \n String url \n\n String getURL \n String getType \n int hashCode \n boolean equals \n String toString", "output": ""}, {"instruction": "Generate java code\nget the length of the text in the element . ", "input": " String name \n Attributes attributes \n StringBuffer text \n\n void setName \n String getName \n String getAttribute \n String getAttributeValue \n String getText \n void addText \n void addText \n void setAttributes \n int getNumAttributes \n void resetText \n String getAttributeName \n void setText", "output": ""}, {"instruction": "Generate java code\nlaunches any services that should be launched only if this peer is on the open internet , such as running a turn server or a sip proxy . ", "input": " SipRegistrar m_registrar \n Logger LOG \n OnlineStatusRegistrationListener m_onlineStatusListener \n TurnServer m_turnServer \n SipProxy m_sipProxy \n\n void clearOldUsers \n void main \n void loadContexts", "output": ""}, {"instruction": "Generate java code\ncaptures sshdatareceivedevent ", "input": " boolean connected \n\n void connected \n void disconnected \n void main", "output": ""}, {"instruction": "Generate java code\nreturns the count to which the specified key is mapped in this frequency counter , or 0 if the map contains no mapping for this key . ", "input": " Map<T,Integer> counter \n\n Double probabilityOf \n void incrementFor \n String toString \n Set<T> getStates", "output": ""}, {"instruction": "Generate java code\nnot required ", "input": " double lat \n String id_str \n String screen_name \n String place_name \n String image \n String user_name \n double lng \n Date created_at \n int loc_radius \n String user_id \n String text \n ArrayList<String> extras \n\n GenericJSONBuilder setIDstr \n GenericJSONBuilder setPlaceName \n GenericJSONBuilder addText \n GenericJSONBuilder addField \n void insert \n GenericJSONBuilder setCoordinateRadius \n GenericJSONBuilder setAuthor \n GenericJSONBuilder builder \n GenericJSONBuilder setCreatedTime \n void persist \n String buildFieldJSON \n GenericJSONBuilder setUserid \n GenericJSONBuilder setImage", "output": ""}, {"instruction": "Generate java code\nreturns the location one unit above this location . ", "input": " int yCoOrdinate \n int xCoOrdinate \n\n XYLocation south \n XYLocation north \n int getXCoOrdinate \n XYLocation right \n int getYCoOrdinate \n XYLocation down \n XYLocation locationAt \n XYLocation east \n XYLocation left \n int hashCode \n boolean equals \n XYLocation west \n String toString", "output": ""}, {"instruction": "Generate java code\ndevuelve los roles aosciados a este usuario . ", "input": " String password \n Date credentialsExpirationDate \n Integer loginsFallidos \n Collection<GrantedAuthority> grantedAuthorities \n boolean credentialsNonExpired \n boolean accountNonExpired \n Long id \n boolean enabled \n String email \n String username \n boolean accountNonLocked \n String nombres \n\n void setCredentialsNonExpired \n void setPassword \n Date getCredentialsExpirationDate \n void setUsername \n void setAccountNonLocked \n String getNombres \n void setAccountNonExpired \n boolean isAccountNonLocked \n Long getId \n void setNombres \n String getUsername \n void setEnabled \n String getPassword \n void setEmail \n void setAuthorities \n boolean isAccountNonExpired \n boolean isCredentialsNonExpired \n boolean isEnabled \n String getEmail \n void setId \n void setCredentialsExpirationDate", "output": ""}, {"instruction": "Generate java code\nsets the value of the vector to use in the start of the iterations . ", "input": " DenseMatrix64F q1 \n int maxIterations \n DenseMatrix64F q2 \n double tol \n DenseMatrix64F B \n DenseMatrix64F seed \n DenseMatrix64F q0 \n\n DenseMatrix64F getEigenVector \n boolean computeShiftDirect \n void setOptions \n void initPower \n boolean computeShiftInvert \n boolean computeDirect \n boolean checkConverged", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getofferdetailsresponse.return.detailofferdata.offermedia.offerimage.entry.value.item ", "input": " PlaceHolder placeHolder \n\n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos \n GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia \n GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue \n GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData \n GetOfferDetailsResponse createGetOfferDetailsResponse \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses \n GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "output": ""}, {"instruction": "Generate java code\nfind a type object by name . ", "input": " TopLevelResolver head \n TopLevelResolver tail \n\n String toString \n boolean packageExists", "output": ""}, {"instruction": "Generate java code\nsetter for the denied extensions of a file type . the allowed extensions will be cleared . if extensionslist is null , denied extensions are kept untouched . ", "input": " Map<ResourceTypeHandler,Set<String>> extensionsDenied \n Map<ResourceTypeHandler,Set<String>> extensionsAllowed \n\n boolean isAllowed \n void setExtensionsAllowed \n Set<String> getExtensionsDenied \n Set<String> getExtensionsAllowed", "output": ""}, {"instruction": "Generate java code\nadd the given identifier to the cache . it will be cached for a default amount of time . ", "input": " String DEFAULT_CONFIG_URL \n Ehcache cache \n long DEFAULT_TTL \n long MAX_TTL \n String CACHE_KEY \n CacheManager cacheManager \n long ttl \n\n void createCache \n void setTTL \n String getId \n void close \n long getTTL", "output": ""}, {"instruction": "Generate java code\nmakes a csp consisting of binary constraints arc-consistent . ", "input": " PlaceHolder placeHolder \n\n boolean revise", "output": ""}, {"instruction": "Generate java code\ngets the position altitude from mean sea level . notice that most sentences with position do n't provide this value . when missing , the default value in position is 0.0 . ", "input": " double altitude \n double latitude \n Datum datum \n double longitude \n\n CompassPoint getLatitudeHemisphere \n double haversine \n double getLongitude \n boolean isLatitudeNorth \n double getLatitude \n boolean isLongitudeEast \n double distanceTo \n void setLatitude \n void setAltitude \n CompassPoint getLongitudeHemisphere \n Waypoint toWaypoint \n Datum getDatum \n String toString \n void setLongitude", "output": ""}, {"instruction": "Generate java code\nreturns result value as array . ", "input": " String NAME \n String FAULT \n String MEMBER \n TimeZone tz \n ArrayList<Object> values \n String VALUE \n\n String getStringValue \n ArrayList<Object> parseArray \n List getValues \n Map<String,Object> getStructValue \n Double getDoubleValue \n int getValueCount \n void parse \n Integer getIntegerValue \n Boolean getBooleanValue \n HashMap<String,Object> parseStruct \n Object parseValue \n byte[] getBinaryValue \n Date getDateValue", "output": ""}, {"instruction": "Generate java code\ntest whether the device has an active pen ", "input": " PenEvent mPenEvent \n String TAG \n HardwareButtonListener buttonListener \n String KEY_OVERRIDE_PEN_TYPE \n String PEN_TYPE_ICS \n boolean mHasPenDigitizer \n String PEN_TYPE_THINKPAD_TABLET \n boolean mHasPressureSensor \n ArrayList<String> tabletMODELwithoutPressure \n String PEN_TYPE_SAMSUNG_NOTE \n String PEN_TYPE_HTC \n String PEN_TYPE_CAPACITIVE \n Hardware instance \n String PEN_TYPE_LEFT_ALT \n String model \n long serialVersionUID \n String PEN_TYPE_AUTO \n\n boolean onKeyDown \n boolean isPenEvent \n boolean onKeyUp \n boolean isPenButtonPressed \n void forceCapacitivePen \n void addViewHack \n void forceFromPreferences \n void forceSamsungNote \n void setOnHardwareButtonListener \n void forceLeftAlt \n boolean hasPressureSensor \n void autodetect \n void forceThinkpadTablet \n void forceICS \n void callOnHardwareButtonListener \n void forceHTC \n Hardware getInstance", "output": ""}, {"instruction": "Generate java code\nwrite boolean ", "input": " PlaceHolder placeHolder \n\n void writeHashMap \n Map<String,String> readHashMapStringAndString \n void writeHashMapStringAndString \n Map<String,V> readHashMapStringKey \n Map<K,V> readHashMap \n boolean readBoolean \n void writeHashMapStringKey", "output": ""}, {"instruction": "Generate java code\nunregister an endpoint resolver . ", "input": " Bus bus \n List<EndpointResolver> resolvers \n\n EndpointReferenceType mint \n EndpointReferenceType mint \n EndpointReferenceType resolve \n List<EndpointResolver> getResolvers \n EndpointReferenceType renew \n void setBus \n void register", "output": ""}, {"instruction": "Generate java code\nreturns a printstream for stderr in the debugger 's internalconsole window . ", "input": " Scriptable scope \n Dim dim \n int type \n SwingGui debugGui \n int EXIT_ACTION \n int SCOPE_PROVIDER \n\n InputStream getIn \n void setExitAction \n void doBreak \n void main \n void run \n void setBreakOnReturn \n PrintStream getOut \n void setSize \n void setSize \n void setBreakOnExceptions \n void contextCreated \n void setVisible \n void mainEmbedded \n void mainEmbedded \n void mainEmbedded \n void contextExited \n void setBreakOnEnter \n void mainEmbeddedImpl \n void go \n boolean isVisible \n ScopeProvider newScopeProvider \n void setScopeProvider \n void pack \n void clearAllBreakpoints \n void contextReleased \n void setOptimizationLevel \n void detach \n void dispose \n void setScope \n void attachTo \n void contextEntered \n Scriptable getScope \n JFrame getDebugFrame", "output": ""}, {"instruction": "Generate java code\nthe number of previous blocks to look at when calculating the next block 's difficulty ", "input": " int addressHeader \n int INTERVAL \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n long packetMagic \n int p2shHeader \n List<NetworkParameters> paramSet \n int PROTOCOL_VERSION \n Block genesisBlock \n BigInteger proofOfWorkLimit \n int subsidyDecreaseBlockCount \n int port \n BigInteger MAX_MONEY \n int TARGET_SPACING \n String[] dnsSeeds \n Map<Integer,Sha256Hash> checkpoints \n byte[] SATOSHI_KEY \n int interval \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n Sha256Hash calculateBlockPoWHash \n BigInteger getMaxMoney \n NetworkParameters getParamsFromAddressByte \n void registerParams \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n boolean isAcceptableAddressVersion \n String getURIScheme \n BigInteger getProofOfWorkLimit", "output": ""}, {"instruction": "Generate java code\ncreate an instance of complexnode ", "input": " QName _ComplexNode_QNAME \n\n RootNode createRootNode", "output": ""}, {"instruction": "Generate java code\nsets the genes in the roi ", "input": " boolean AMPLIFIED \n boolean DELETED \n int gisticID \n int peakStart \n ArrayList<CanonicalGene> genes_in_ROI \n String cytoband \n boolean amp \n int NO_SUCH_GISTIC \n int cancerStudyId \n int chromosome \n int peakEnd \n double qValue \n\n void setPeakEnd \n void setAmp \n String getCytoband \n void setPeakStart \n int getPeakStart \n void setqValue \n boolean getAmp \n int getInternalId \n int peakSize \n int getCancerStudyId \n int getChromosome \n int getPeakEnd \n void addGene \n void setInternalId \n void setCancerStudyId \n double getqValue \n String toString \n ArrayList<CanonicalGene> getGenes_in_ROI \n void setCytoband \n void setChromosome", "output": ""}, {"instruction": "Generate java code\nruns the given callable in the javafx thread , waiting for it to complete before returning . also attempts to wait for any other javafx events that may have been queued in the callable to complete . if any exception is thrown during execution of the callable , that exception will be re-thrown from invokeandwait . ", "input": " PlaceHolder placeHolder \n\n void awaitCondition \n void awaitCondition \n void awaitEvents", "output": ""}, {"instruction": "Generate java code\nappend a simple string . ", "input": " List<String> log \n\n List<String> get \n void clean \n String representation", "output": ""}, {"instruction": "Generate java code\ncompute a hash code . ", "input": " int SHIFT \n int NONASSOC \n int REDUCE \n int ERROR \n\n int kind \n boolean equals \n boolean equals \n String toString", "output": ""}, {"instruction": "Generate java code\naccessor for the tie breaker bytes . ", "input": " Random s_random \n byte[] m_byteArray \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nsets the file count . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n BigDecimal getDownloadSize \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\nan integer between 0 and 100 , shows percent done . the current argouml user interface shows different postit note icons for 0 , 1-25 , 26-50 . 51-75 , and 76-100 . ", "input": " int step \n List<JPanel> panels \n boolean started \n boolean finished \n WizardItem item \n\n void next \n void removePanel \n JPanel getCurrentPanel \n boolean canGoBack \n boolean canFinish \n int getStep \n JPanel makePanel \n void back \n int getNumSteps \n boolean isStarted \n void setToDoItem \n boolean isFinished \n void undoAction \n void undoAction \n WizardItem getToDoItem \n boolean canGoNext \n void finish \n JPanel getPanel \n void doAction \n void doAction", "output": ""}, {"instruction": "Generate java code\ncreate an instance of browseoffersresponse.return.offerdata.geo.region ", "input": " PlaceHolder placeHolder \n\n BrowseOffersResponse.Return.OfferData.Seo createBrowseOffersResponseReturnOfferDataSeo \n BrowseOffersResponse.Return.OfferData.Geo.Region.Country.State createBrowseOffersResponseReturnOfferDataGeoRegionCountryState \n BrowseOffersResponse.Return.OfferData.OfferMedia createBrowseOffersResponseReturnOfferDataOfferMedia \n BrowseOffersResponse createBrowseOffersResponse \n BrowseOffersResponse.Return.OfferData.Geo.Region.Country createBrowseOffersResponseReturnOfferDataGeoRegionCountry \n BrowseOffersResponse.Return createBrowseOffersResponseReturn \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry.Value createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntryValue \n BrowseOffersResponse.Return.OfferData createBrowseOffersResponseReturnOfferData \n BrowseOffersResponse.Return.OfferData.Merchant createBrowseOffersResponseReturnOfferDataMerchant \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntry \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage createBrowseOffersResponseReturnOfferDataOfferMediaOfferImage \n BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry.Value.Item createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntryValueItem \n BrowseOffersResponse.Return.OfferData.Geo createBrowseOffersResponseReturnOfferDataGeo", "output": ""}, {"instruction": "Generate java code\nobtains the default port . ", "input": " int defaultPort \n SchemeSocketFactory socketFactory \n String name \n String stringRep \n boolean layered \n\n SocketFactory getSocketFactory \n String getName \n int hashCode \n boolean isLayered \n boolean equals \n String toString \n SchemeSocketFactory getSchemeSocketFactory \n int resolvePort", "output": ""}, {"instruction": "Generate java code\nprints the inventory list for debugging purposes . ", "input": " int limit \n int count \n Map<Item,Integer> invMap \n\n void addItem \n ItemStack[] getItemStacks \n void dumpAll \n boolean isFull", "output": ""}, {"instruction": "Generate java code\nset length ", "input": " List<String> formats \n String author \n FileSizeComparable length \n String rating \n String title_sort \n String language \n String title \n String uuid \n String tagStr \n List<String> tags \n String path \n String author_sort \n String comment \n String filenameWithoutExtension \n boolean selected \n String pubdate \n\n String getAuthor_sort \n void setSelected \n String getAuthor \n List<String> getTags \n int compareTo \n ImageIcon getThumbnail \n boolean isLocal \n String getSort \n String getCoverFilePath \n String getTitle \n String getPubdate \n String getUuid \n String getFilePath \n boolean isSelected \n String getPath \n FileSizeComparable getLength \n String getFormat \n String toString \n String getRating", "output": ""}, {"instruction": "Generate java code\nget the default languageversion for the first language of a given source file . ", "input": " Map<Language,LanguageVersion> languageToLanguageVersion \n\n LanguageVersion getDefaultLanguageVersion \n String getExtension \n LanguageVersion setDefaultLanguageVersion \n List<Language> getLanguagesForFile \n List<Language> getLanguagesForFile", "output": ""}, {"instruction": "Generate java code\ntest of getimage method , of class device . ", "input": " Device dev \n\n void testGetType \n void setUpClass \n void testGetDeviceName_0args \n void testAddToPane \n void testGetAddress \n void tearDownClass \n void tearDown \n void testGetDeviceNames \n void testGetDeviceBlock \n void testAddCapabilities \n void testToString \n void testGetImgName \n void testAddCapability \n void testGetDeviceName_Locale \n void setUp \n void testGetDeviceID \n void testGetCapabilityBlock \n void testGetCapabilities \n void testRemoveCapability", "output": ""}, {"instruction": "Generate java code\ncheckpoint records have no associated transaction , and so the method returns a `` dummy '' , negative txid . ", "input": " PlaceHolder placeHolder \n\n int op \n int writeToLog \n void undo \n String toString \n void redo", "output": ""}, {"instruction": "Generate java code\ngets a builder configured as this object . ", "input": " String physicalNetwork \n NetworkType networkType \n Integer segmentationId \n\n Builder fromNetworkSegment \n Objects.ToStringHelper string \n Integer getSegmentationId \n String getPhysicalNetwork \n NetworkSegment build \n int hashCode \n boolean equals \n NetworkType getNetworkType \n Builder builder \n Builder physicalNetwork \n String toString \n Builder networkType \n Builder segmentationId", "output": ""}, {"instruction": "Generate java code\ntest of setnumberrequests method , of class logentryinterval . ", "input": " PlaceHolder placeHolder \n\n void testSetIntervalNumber \n void testGetIntervalNumber \n void testGetNumberRequests \n void testSetMeanResponseTime \n void testGetMeanResponseTime \n void testIncNumberRequests", "output": ""}, {"instruction": "Generate java code\nreturn a classpath resource as a reader . it is assumed that the resource is a text resource . ", "input": " PlaceHolder placeHolder \n\n String getReaderAsString \n File createJar \n String getResourceAsString \n void copyCharStream \n void zipDir \n void zipDir \n InputStream getResourceAsStream \n void copyStream \n void delete", "output": ""}, {"instruction": "Generate java code\ntests the datanettybuffer #getreadonlybytebuffer method . ", "input": " ByteBuf mBuffer \n ExpectedException mThrown \n int LENGTH \n\n void bufferAlreadyReleased \n void before \n void getNettyOutputNotSupported \n void singleNioBufferCheckFailed \n void releaseBuffer \n void length \n void releaseBufferTest \n void refCountCheckFailed \n void after \n void releaseBufferFail", "output": ""}, {"instruction": "Generate java code\ngets the visited attribute of the naiveuseragent object ", "input": " int _imageCacheCapacity \n String _baseURL \n LinkedHashMap _imageCache \n Device _device \n\n String getBaseURL \n ImageResource loadEmbeddedBase64ImageResource \n void disposeCache \n CSSResource getCSSResource \n ImageResource createImageResource \n XMLResource getXMLResource \n void setBaseURL \n ImageResource getImageResource \n String resolveURI \n byte[] getBinaryResource \n InputStream getInputStream", "output": ""}, {"instruction": "Generate java code\nserializes an object into a json object . ", "input": " PlaceHolder placeHolder \n\n void read", "output": ""}, {"instruction": "Generate java code\nget a read-only list containing all metrics ", "input": " long congestionWindowSize \n AtomicInteger numberOfDuplicateDataPackets \n List<MeanValue> metrics \n AtomicInteger numberOfNAKSent \n List<StatisticsHistoryEntry> statsHistory \n AtomicInteger numberOfACKReceived \n String componentDescription \n AtomicInteger numberOfRetransmittedDataPackets \n AtomicInteger numberOfACKSent \n boolean first \n AtomicInteger numberOfCCSlowDownEvents \n AtomicInteger numberOfMissingDataEvents \n AtomicInteger numberOfCCWindowExceededEvents \n long initialTime \n AtomicInteger numberOfReceivedDataPackets \n AtomicInteger numberOfSentDataPackets \n long roundTripTime \n AtomicInteger numberOfNAKReceived \n long roundTripTimeVariance \n long estimatedLinkCapacity \n long packetArrivalRate \n double sendPeriod \n\n void setCongestionWindowSize \n int getNumberOfACKSent \n void incNumberOfMissingDataEvents \n void incNumberOfCCWindowExceededEvents \n void incNumberOfNAKReceived \n long getCongestionWindowSize \n void incNumberOfCCSlowDownEvents \n int getNumberOfReceivedDataPackets \n int getNumberOfNAKReceived \n void addMetric \n void incNumberOfReceivedDataPackets \n int getNumberOfRetransmittedDataPackets \n int getNumberOfNAKSent \n void writeParameterHistory \n void incNumberOfRetransmittedDataPackets \n void incNumberOfACKReceived \n int getNumberOfDuplicateDataPackets \n int getNumberOfSentDataPackets \n double getSendPeriod \n void incNumberOfNAKSent \n void setSendPeriod \n int getNumberOfACKReceived \n void setRTT \n void storeParameters \n void incNumberOfACKSent \n void incNumberOfSentDataPackets \n void setPacketArrivalRate \n long getPacketArrivalRate \n String toString \n void incNumberOfDuplicateDataPackets", "output": ""}, {"instruction": "Generate java code\ntest of createoverlaidchart method , of class chartobject . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\ndetermines the number of consecutive characters that are encodable using numeric compaction . ", "input": " int ASCII_ENCODATION \n int TEXT_ENCODATION \n int X12_ENCODATION \n String MACRO_06_HEADER \n char LATCH_TO_C40 \n char UPPER_SHIFT \n char LATCH_TO_EDIFACT \n char LATCH_TO_TEXT \n char C40_UNLATCH \n char LATCH_TO_ANSIX12 \n int BASE256_ENCODATION \n String MACRO_05_HEADER \n String MACRO_TRAILER \n char MACRO_05 \n int EDIFACT_ENCODATION \n char PAD \n int C40_ENCODATION \n char LATCH_TO_BASE256 \n char MACRO_06 \n char X12_UNLATCH \n\n void illegalCharacter \n int findMinimums \n boolean isX12TermSep \n boolean isSpecialB256 \n boolean isExtendedASCII \n boolean isNativeEDIFACT \n int getMinimumCount \n boolean isDigit \n char randomize253State \n boolean isNativeC40 \n int lookAheadTest \n boolean isNativeX12 \n String encodeHighLevel \n String encodeHighLevel \n boolean isNativeText", "output": ""}, {"instruction": "Generate java code\nreturns the x-coordinate of the move . ", "input": " int x \n int y \n\n int getY \n int hashCode \n boolean equals \n String toString", "output": ""}, {"instruction": "Generate java code\nsets the test id . ", "input": " Date lastModifiedTimeStamp \n Long feedId \n String createdBy \n Date fetcherStartTimeStamp \n Date createTimeStamp \n Long testId \n Long runId \n Date fetcherEndTimeStamp \n List<TestResultDetailsDTO> regTestResultDetailsLst \n OutcomeType outcome \n RunStatusType runStatus \n String errorMsg \n\n void setLastModifiedTimeStamp \n Date getFetcherEndTimeStamp \n void setFeedId \n void setFetcherStartTimeStamp \n Date getLastModifiedTimeStamp \n OutcomeType getOutcome \n Long getRunId \n List<TestResultDetailsDTO> getRegTestResultDetailsLst \n Long getFeedId \n Long getTestId \n Date getFetcherStartTimeStamp \n void setRunId \n void setRegTestResultDetailsLst \n void setErrorMsg \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n RunStatusType getRunStatus \n Date getCreateTimeStamp \n void setOutcome \n String toString \n String getCreatedBy \n String getErrorMsg \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\ninitializes an accessibilityevent with information about thethe host view which is the event source . the default implementation behaves as viewcompat #oninitializeaccessibilityevent view v , accessibilityevent event viewcompat #oninitalizeaccessibilityevent view v , accessibilityevent event forthe case of no accessibility delegate been set . ", "input": " AccessibilityDelegateImpl IMPL \n Object DEFAULT_DELEGATE \n Object mBridge \n\n Object newAccessiblityDelegateDefaultImpl \n Object newAccessiblityDelegateDefaultImpl \n boolean dispatchPopulateAccessibilityEvent \n boolean dispatchPopulateAccessibilityEvent \n boolean dispatchPopulateAccessibilityEvent \n Object getBridge \n void sendAccessibilityEventUnchecked \n void sendAccessibilityEventUnchecked \n void sendAccessibilityEventUnchecked \n void onPopulateAccessibilityEvent \n void onPopulateAccessibilityEvent \n void onPopulateAccessibilityEvent \n boolean onRequestSendAccessibilityEvent \n boolean onRequestSendAccessibilityEvent \n boolean onRequestSendAccessibilityEvent \n void onInitializeAccessibilityNodeInfo \n void onInitializeAccessibilityNodeInfo \n void onInitializeAccessibilityNodeInfo \n void sendAccessibilityEvent \n void sendAccessibilityEvent \n void sendAccessibilityEvent \n Object newAccessiblityDelegateBridge \n Object newAccessiblityDelegateBridge", "output": ""}, {"instruction": "Generate java code\ndecode an integer from the format string , return zero if not starting on a digit . \\ param advance whether to move the stream position . ", "input": " int formatOff \n boolean isRaw \n int formatRepeatCount \n String format \n\n void checkType \n char getType \n int getLengthFromFormat \n int available \n void reset \n String toString \n void consume \n boolean hasLength", "output": ""}, {"instruction": "Generate java code\ngets the act value . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n void setActValue \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n void setSrcFileName \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n void setFailedAttrib \n BigDecimal getExpDataSetId \n String getErrorMsg \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n BigDecimal getExpDataUnitId \n Timestamp getCreateTimeStamp \n String getFailedAttrib \n void setExpDataSetId \n void setDataSetId \n void setExpDataUnitId", "output": ""}, {"instruction": "Generate java code\nget user profile provider ", "input": " boolean sdkInited \n EaseUserProfileProvider userProvider \n EaseSettingsProvider settingsProvider \n List<Activity> activityList \n EaseEmojiconInfoProvider emojiconInfoProvider \n EaseUI instance \n String TAG \n Context appContext \n EaseNotifier notifier \n\n void setSettingsProvider \n EaseNotifier getNotifier \n EaseUser getUser \n void setEmojiconInfoProvider \n void initNotifier \n boolean isMsgSoundAllowed \n boolean isMsgSoundAllowed \n EaseSettingsProvider getSettingsProvider \n EaseEmojicon getEmojiconInfo \n EaseEmojiconInfoProvider getEmojiconInfoProvider \n EMOptions initChatOptions \n boolean init \n String getAppName \n void setUserProfileProvider \n void pushActivity \n boolean isMsgVibrateAllowed \n boolean isMsgVibrateAllowed \n User getAppUser \n void registerMessageListener \n Map<String,Object> getTextEmojiconMapping \n boolean isMsgNotifyAllowed \n boolean isMsgNotifyAllowed \n boolean hasForegroundActivies \n EaseUI getInstance \n boolean isSpeakerOpened \n boolean isSpeakerOpened \n void popActivity \n Context getContext \n EaseNotifier createNotifier", "output": ""}, {"instruction": "Generate java code\nsets the value of the internal integer . ", "input": " int value \n\n void add \n int getValue \n void dec \n String toString \n int compareTo \n void inc", "output": ""}, {"instruction": "Generate java code\ntest method for notificationcontroller #handleevent org.osgi.service.event.event verifies that illegalargumentexception is thrown when event 's notification #notification_key_title property is null . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n NotificationController notificationController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication \n void testDeregisterUserSessionWithNullServerSessonThrowsException \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testGetServerSessionByUserId \n void tearDown \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId \n void testRegisterUserSessionWithNullServerSessionThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testRegisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\ngets the value of the modulename property . ", "input": " String fail \n String pass \n String moduleName \n String noRun \n int ID \n String value \n String totalTC \n\n String getPass \n void setNoRun \n String getTotalTC \n int getID \n void setFail \n String getFail \n String getNoRun \n int compareTo \n String getValue \n void setValue \n void setID \n void setTotalTC \n void setModuleName \n void setPass", "output": ""}, {"instruction": "Generate java code\nreturns true if type is one of the nine primitive-wrapper types , such as integer . ", "input": " Map<Class<?>,Class<?>> PRIMITIVE_TO_WRAPPER_TYPE \n Map<Class<?>,Class<?>> WRAPPER_TO_PRIMITIVE_TYPE \n\n void add \n Set<Class<?>> allWrapperTypes \n Set<Class<?>> allPrimitiveTypes \n Class<T> wrap \n Class<T> unwrap", "output": ""}, {"instruction": "Generate java code\nnormalizes the matrix such that the frobenius norm is equal to one . ", "input": " PlaceHolder placeHolder \n\n double inducedP2 \n double inducedP1 \n double normF \n double fastNormP \n double fastNormP2 \n double normPInf \n double conditionP \n double elementP \n double inducedPInf \n double normP \n double normP2 \n double fastNormF \n double fastElementP \n double normP1 \n double conditionP2", "output": ""}, {"instruction": "Generate java code\nfunction to print tree ", "input": " TSTNode middle \n char data \n TSTNode left \n TSTNode root \n TSTNode right \n ArrayList<String> al \n boolean is_End_Of_String \n\n void traverse \n boolean search \n boolean search \n void makeEmpty \n boolean isEmpty \n void insert \n TSTNode insert \n void main \n void delete \n void delete", "output": ""}, {"instruction": "Generate java code\nreturns the exception call-back listener . ", "input": " String LOG_MSG \n String DISPATCH_ALL \n DataReader reader \n DataListener dataListener \n ConcurrentMap<String,List<SentenceListener>> listeners \n int pauseTimeout \n ExceptionListener exceptionListener \n Thread thread \n Logger LOGGER \n int DEFAULT_TIMEOUT \n\n void fireReadingPaused \n void fireDataEvent \n void setPauseTimeout \n void start \n void removeSentenceListener \n void fireReadingStopped \n void registerListener \n List<SentenceListener> getSentenceListeners \n void handleException \n void setDataListener \n void stop \n void setInputStream \n void fireReadingStarted \n void fireSentenceEvent \n void addSentenceListener \n void addSentenceListener \n void addSentenceListener \n int getPauseTimeout \n void setExceptionListener \n void setDatagramSocket", "output": ""}, {"instruction": "Generate java code\nsets hostname . ", "input": " UnderFileSystemCluster mUfsCluster \n int mNumWorkers \n String mWorkDirectory \n List<AlluxioWorkerService> mWorkers \n long DEFAULT_WORKER_MEMORY_BYTES \n Logger LOG \n int DEFAULT_BLOCK_SIZE_BYTES \n Random RANDOM_GENERATOR \n String mHostname \n\n void setAlluxioWorkDirectory \n void start \n FileSystem getClient \n void setupTest \n void stopUFS \n void initConfiguration \n void stop \n void startWorkers \n void runWorkers \n void startMaster \n void reset \n void stopFS \n LocalAlluxioMaster getMaster", "output": ""}, {"instruction": "Generate java code\nexecution of the card action . ", "input": " PlaceHolder placeHolder \n\n void read \n void update \n void update \n CardAction copy \n void write", "output": ""}, {"instruction": "Generate java code\nreturn a map of attributes for the launched task . the specific keys and values returned are dependent on the runtime where the task has been launched . this may include extra information such as execution location or specific error messages in the case of failure . ", "input": " Map<String,String> attributes \n String id \n LaunchState state \n\n String getTaskLaunchId \n LaunchState getState \n String toString", "output": ""}, {"instruction": "Generate java code\ngets the feed id . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n void setFileCount \n BigDecimal getDownloadSize \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\nreturns an eigenvalue as a complex number . for symmetric matrices the returned eigenvalue will always be a real number , which means the imaginary component will be equal to zero . note : the order of the eigenvalues is dependent upon the decomposition algorithm used . this means that they may or may not be ordered by magnitude . for example the qr algorithm will returns results that are partially ordered by magnitude , but this behavior should not be relied upon . ", "input": " DenseMatrix64F mat \n EigenDecomposition<DenseMatrix64F> eig \n\n T getEigenVector \n EigenDecomposition getEVD \n int getNumberOfEigenvalues \n int getIndexMax \n int getIndexMin \n double quality", "output": ""}, {"instruction": "Generate java code\nreturn a workflow store instance with a fresh transaction . the coordinator store has to be committed and then closed to commit changes , if only close it rolls back . ", "input": " String ACTIONS_TO_KILL \n String ACTIONS_TO_START \n String ACTION_ID \n String ACTIONS_TO_FAIL \n String TRANSIENT_VAR_PREFIX \n String WORKFLOW_BEAN \n\n Class<? extends Service> getInterface \n void init \n void destroy", "output": ""}, {"instruction": "Generate java code\nthe index of the output in transaction to which we refer ", "input": " ThreadLocal<Boolean> inTransaction \n TransactionalHashMap<StoredTransactionOutPoint,StoredTransactionOutput> transactionOutputMap \n TransactionalHashMap<UniqueKeyType,ValueType> mapValues \n boolean wasUndoable \n StoredBlock verifiedChainHead \n ThreadLocal<HashMap<KeyType,ValueType>> tempMap \n long index \n HashMap<MultiKeyType,Set<UniqueKeyType>> mapKeys \n StoredBlock chainHead \n TransactionalHashMap<Sha256Hash,StoredBlockAndWasUndoableFlag> blockMap \n ThreadLocal<HashSet<KeyType>> tempSetRemoved \n StoredBlock block \n TransactionalMultiKeyHashMap<Sha256Hash,Integer,StoredUndoableBlock> fullBlockMap \n long serialVersionUID \n HashMap<KeyType,ValueType> map \n Sha256Hash hash \n int fullStoreDepth \n\n Sha256Hash getHash \n StoredTransactionOutput getTransactionOutput \n void removeUnspentTransactionOutput \n void put \n void put \n void put \n void put \n ValueType remove \n boolean hasUnspentOutputs \n void BeginTransaction \n StoredBlock getVerifiedChainHead \n void CommitTransaction \n int hashCode \n ValueType get \n ValueType get \n StoredBlock get \n void abortDatabaseBatchWrite \n void abortDatabaseBatchWrite \n ValueType removeByUniqueKey \n void addUnspentTransactionOutput \n void beginDatabaseBatchWrite \n void beginDatabaseBatchWrite \n void close \n void setVerifiedChainHead \n void commitDatabaseBatchWrite \n void commitDatabaseBatchWrite \n StoredUndoableBlock getUndoBlock \n StoredBlock getChainHead \n void setChainHead \n boolean equals \n String toString \n void AbortTransaction \n void removeByMultiKey \n StoredBlock getOnceUndoableStoredBlock", "output": ""}, {"instruction": "Generate java code\ncreates a script of the form op_return data . this feature allows you to attach a small piece of data like a hash of something stored elsewhere to a zero valued output which can never be spent and thus does not pollute the ledger . ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder op \n Script updateScriptWithSignature \n ScriptBuilder data \n ScriptBuilder data \n Script createMultiSigInputScriptBytes \n Script createMultiSigInputScriptBytes \n ScriptBuilder smallNum \n ScriptBuilder smallNum \n Script createRedeemScript \n ScriptBuilder addChunk \n ScriptBuilder addChunk \n Script createInputScript \n Script createInputScript \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript \n Script createMultiSigOutputScript \n Script build \n Script createP2SHMultiSigInputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript", "output": ""}, {"instruction": "Generate java code\nreturn the public interface for scheduler service . ", "input": " ScheduledExecutorService scheduler \n String SCHEDULER_THREADS \n XLog log \n long millis \n String CONF_PREFIX \n\n void init \n void schedule \n void schedule \n void destroy \n ScheduledExecutorService getScheduler \n long getMillis", "output": ""}, {"instruction": "Generate java code\ndeletes an identity provider from a given tenant ", "input": " IdentityProviderMgtServiceStub idPMgtStub \n Log log \n UserAdminStub userAdminStub \n\n String[] getAllLocalClaimUris \n void addIdP \n String[] getUserStoreDomains \n IdentityProvider getResidentIdP \n Map<String,FederatedAuthenticatorConfig> getAllFederatedAuthenticators \n void updateResidentIdP \n List<IdentityProvider> getIdPs \n IdentityProvider getIdPByName \n List<IdentityProvider> getEnabledIdPs \n Map<String,ProvisioningConnectorConfig> getCustomProvisioningConnectors \n void updateIdP", "output": ""}, {"instruction": "Generate java code\nreturns whether the debugger gui frame is visible . ", "input": " Scriptable scope \n Dim dim \n int type \n SwingGui debugGui \n int EXIT_ACTION \n int SCOPE_PROVIDER \n\n InputStream getIn \n void setExitAction \n void doBreak \n void main \n void run \n void setBreakOnReturn \n PrintStream getOut \n void setSize \n void setSize \n void setBreakOnExceptions \n void contextCreated \n void setVisible \n void mainEmbedded \n void mainEmbedded \n void mainEmbedded \n void contextExited \n void setBreakOnEnter \n PrintStream getErr \n void mainEmbeddedImpl \n void go \n ScopeProvider newScopeProvider \n void setScopeProvider \n void pack \n void clearAllBreakpoints \n void contextReleased \n void setOptimizationLevel \n void detach \n void dispose \n void setScope \n void attachTo \n void contextEntered \n Scriptable getScope \n JFrame getDebugFrame", "output": ""}, {"instruction": "Generate java code\nconverts a string to a dom . sometimes , you might prefer dom to soapelement . no namespace prefixes are used by default . ", "input": " String SOAP_11_NAMESPACE_URL \n String SOAP_12_NAMESPACE_URL \n Logger log \n\n List<SOAPElement> getParents \n Map<String,String> allNamespaces \n void allNamespaces \n SOAPMessage stringToSoap \n String soapToString \n SOAPElement getRoot \n List<SOAPElement> getSoapChilds \n List<SOAPElement> getSoapChilds \n List<SOAPElement> inputNeeded \n void inputNeeded \n String domToString", "output": ""}, {"instruction": "Generate java code\nreturns the int value that , when treated as unsigned , is nearest in value to value . ", "input": " long INT_MASK \n\n int compare \n int compare \n long toLong \n int max \n int decode \n int parseUnsignedInt \n int parseUnsignedInt \n int min \n Comparator<int[]> lexicographicalComparator \n int checkedCast \n String toString \n String toString \n String toString \n int divide \n String join \n int flip \n int remainder", "output": ""}, {"instruction": "Generate java code\nreturns a string representation of the enumeration value . ", "input": " ParameterDirectionKindEnum PDK_INOUT \n java.util.List typeName \n ParameterDirectionKindEnum PDK_RETURN \n ParameterDirectionKindEnum PDK_OUT \n ParameterDirectionKindEnum PDK_IN \n java.lang.String literalName \n\n java.lang.Object readResolve \n ParameterDirectionKind forName \n java.util.List refTypeName \n int hashCode \n boolean equals", "output": ""}, {"instruction": "Generate java code\nchecks the behavior when the issuer is not known . ", "input": " ServerConfiguration mockServerConfig \n String issuer \n StaticServerConfigurationService service \n\n void prepare \n void getServerConfiguration_success", "output": ""}, {"instruction": "Generate java code\nupdates a given identity provider information ", "input": " IdentityProviderMgtServiceStub idPMgtStub \n Log log \n UserAdminStub userAdminStub \n\n String[] getAllLocalClaimUris \n void addIdP \n String[] getUserStoreDomains \n IdentityProvider getResidentIdP \n Map<String,FederatedAuthenticatorConfig> getAllFederatedAuthenticators \n void updateResidentIdP \n List<IdentityProvider> getIdPs \n void deleteIdP \n IdentityProvider getIdPByName \n List<IdentityProvider> getEnabledIdPs \n Map<String,ProvisioningConnectorConfig> getCustomProvisioningConnectors", "output": ""}, {"instruction": "Generate java code\nobtains the value of nioreactorpnames #interest_ops_queueing parameter.if not set , defaults to false . ", "input": " PlaceHolder placeHolder \n\n void setContentBufferSize \n void setSelectInterval \n void setGracePeriod \n int getContentBufferSize \n void setInterestOpsQueueing \n long getSelectInterval \n long getGracePeriod", "output": ""}, {"instruction": "Generate java code\nset policy combining algorithm globally ", "input": " Log log \n EntitlementAdminServiceStub stub \n\n String getDecision \n String getDecision \n PIPFinderDataHolder getPIPResourceFinderData \n void clearDecisionCache \n String getGlobalPolicyAlgorithm \n void handleException \n PolicyFinderDataHolder getPolicyFinderData \n PDPDataHolder getPDPData \n void clearAttributeCache \n void refreshAttributeFinder \n void refreshResourceFinder \n void refreshPolicyFinder \n PIPFinderDataHolder getPIPAttributeFinderData", "output": ""}, {"instruction": "Generate java code\nthe header bytes that identify the start of a packet on this network . ", "input": " int INTERVAL \n String ID_UNITTESTNET \n long MAX_COINS \n int p2shHeader \n int PROTOCOL_VERSION \n BigInteger maxTarget \n int TARGET_SPACING \n String[] dnsSeeds \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n String PAYMENT_PROTOCOL_ID_MAINNET \n int addressHeader \n Coin MAX_MONEY \n int bip32HeaderPriv \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n int bip32HeaderPub \n String ID_MAINNET \n long packetMagic \n byte[] SATOSHI_KEY \n Block genesisBlock \n String PAYMENT_PROTOCOL_ID_TESTNET \n int subsidyDecreaseBlockCount \n int port \n String ID_TESTNET \n Map<Integer,Sha256Hash> checkpoints \n int interval \n String ID_REGTEST \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n int getBip32HeaderPub \n int getBip32HeaderPriv \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n String getPaymentProtocolId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n BigInteger getMaxTarget \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n NetworkParameters fromPmtProtocolID", "output": ""}, {"instruction": "Generate java code\nreturns a map of strings from the current value . ", "input": " boolean spaceDelimited \n String SINCE \n String defaultValue \n boolean caseSensitive \n String SPACE_DELIMITED \n String description \n long serialVersionUID \n String RESTART_REQUIRED \n boolean restartRequired \n String name \n String CASE_SENSITIVE \n String currentValue \n String since \n\n char getChar \n boolean getBoolean \n int getInteger \n String getString \n boolean isDefaultValue \n List<String> getStrings \n List<String> getStrings", "output": ""}, {"instruction": "Generate java code\nalways returns the configured issuer url ", "input": " String issuer \n\n void afterPropertiesSet \n void setIssuer", "output": ""}, {"instruction": "Generate java code\ncrete new delegator instance . the default implementation calls this.getclass . newinstance . ", "input": " Scriptable obj \n\n Scriptable getDelegee \n void setDelegee \n boolean hasInstance \n void setParentScope \n Object[] getIds \n Scriptable construct \n void delete \n void delete \n void put \n void put \n Object getDefaultValue \n Scriptable getPrototype \n void setPrototype \n Object call \n Object get \n Object get \n String getClassName \n boolean has \n boolean has \n Scriptable getParentScope", "output": ""}, {"instruction": "Generate java code\nreturn the generated public value for this key agreement operation as a biginteger . ", "input": " BigInteger P1024 \n int PRIVATE_KEY_SIZE \n DHParameterSpec DH_PARAMETER_SPEC \n int DH_LEN \n KeyAgreement dh \n BigInteger G \n KeyPair keyPair \n TorPublicKey onionKey \n int DH_SEC_LEN \n\n byte[] getSharedSecret \n KeyAgreement createDH \n boolean deriveKeysFromHandshakeResponse \n boolean deriveKeysFromDHPublicAndHash \n boolean isValidPublicValue \n byte[] getPublicKeyBytes \n byte[] createOnionSkin \n KeyPair generateKeyPair", "output": ""}, {"instruction": "Generate java code\ngets entrez gene id for gene a. ", "input": " String interactionType \n String experimentTypes \n long geneB \n String pmids \n long geneA \n String source \n\n void setSource \n String toSif \n void setExperimentTypes \n void setGeneA \n void setGeneB \n String getInteractionType \n long getGeneB \n void setPmids \n String getSource \n String toString \n void setInteractionType \n String getExperimentTypes \n String getPmids", "output": ""}, {"instruction": "Generate java code\nreturns an html version of the commit message with any global or repository-specific regular expression substitution applied . this method assumes the commit message is plain text . ", "input": " IStoredSettings settings \n Logger logger \n StringBuilder sb \n\n String processCommitMessage \n String processTextRegex \n void appendLink \n void appendText \n String processText", "output": ""}, {"instruction": "Generate java code\nreturns the travel distance between the two specified locations if they are linked by a connection and null otherwise . ", "input": " Hashtable<String,Point2D> locationPositions \n LabeledGraph<String,Double> links \n\n void clear \n String randomlyGenerateDestination \n void clearLinks \n void setPosition \n void addBidirectionalLink \n void removeUnidirectionalLink \n Point2D getPosition \n void removeBidirectionalLink \n boolean isLocation \n List<String> getLocations \n void addUnidirectionalLink \n List<String> getLocationsLinkedTo \n void setDistAndDirToRefLocation", "output": ""}, {"instruction": "Generate java code\ntranslate a set of strings to a json array , optionally preserving the empty array . otherwise default empty array is returned as null . ", "input": " Gson gson \n Logger logger \n\n Map readMap \n Date getAsDate \n List<EncryptionMethod> getAsEncryptionMethodList \n Set readSet \n String getAsString \n EncryptionMethod getAsJweEncryptionMethod \n Set<String> getAsStringSet \n List<JWEAlgorithm> getAsJweAlgorithmList \n void writeNullSafeArray \n Long getAsLong \n Boolean getAsBoolean \n JWSAlgorithm getAsJwsAlgorithm \n JWEAlgorithm getAsJweAlgorithm \n List<JWSAlgorithm> getAsJwsAlgorithmList \n List<String> getAsStringList", "output": ""}, {"instruction": "Generate java code\nshow keyboard ", "input": " PlaceHolder placeHolder \n\n void hideSoftInput", "output": ""}, {"instruction": "Generate java code\ngets the receipt date . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\ngets the conduit selector ", "input": " ConduitSelector conduitSelector \n Map<String,Object> requestContext \n Bus bus \n List<Interceptor<? extends Message>> inInterceptors \n long synchronousTimeout \n List<Interceptor<? extends Message>> outInterceptors \n Logger LOG \n List<Interceptor<? extends Message>> inFault \n Map<String,Object> responseContext \n List<Interceptor<? extends Message>> outFault \n\n Bus getBus \n List<Interceptor<? extends Message>> getOutFaultInterceptors \n Endpoint getEndpoint \n long getSynchronousTimeout \n void setConduitSelector \n void setOutInterceptors \n List<Interceptor<? extends Message>> getInInterceptors \n Map<String,Object> getResponseContext \n boolean isResponseExpectedForOneway \n void setOutFaultInterceptors \n HTTPConduit getHttpConduit \n Conduit getConduit \n void setSynchronousTimeout \n List<Interceptor<? extends Message>> getInFaultInterceptors \n List<Interceptor<? extends Message>> getOutInterceptors \n void setInInterceptors \n Map<String,Object> getRequestContext \n void setInFaultInterceptors \n void setBus \n void prepareConduitSelector", "output": ""}, {"instruction": "Generate java code\nfactory method for creating a new springchain with the provided springconfig . ", "input": " int DEFAULT_ATTACHMENT_TENSION \n CopyOnWriteArrayList<SpringListener> mListeners \n SpringConfig mAttachmentSpringConfig \n int DEFAULT_ATTACHMENT_FRICTION \n int DEFAULT_MAIN_TENSION \n int mControlSpringIndex \n SpringConfigRegistry registry \n SpringConfig mMainSpringConfig \n SpringSystem mSpringSystem \n int DEFAULT_MAIN_FRICTION \n CopyOnWriteArrayList<Spring> mSprings \n int id \n\n SpringConfig getMainSpringConfig \n List<Spring> getAllSprings \n SpringChain setControlSpringIndex \n void onSpringActivate \n Spring getControlSpring \n void onSpringAtRest \n void onSpringUpdate \n SpringChain addSpring \n void onSpringEndStateChange \n SpringConfig getAttachmentSpringConfig", "output": ""}, {"instruction": "Generate java code\nnot required ", "input": " double lat \n String id_str \n String screen_name \n String place_name \n String image \n String user_name \n double lng \n Date created_at \n int loc_radius \n String user_id \n String text \n ArrayList<String> extras \n\n GenericJSONBuilder setIDstr \n GenericJSONBuilder setPlaceName \n GenericJSONBuilder addText \n GenericJSONBuilder addField \n void insert \n GenericJSONBuilder setAuthor \n GenericJSONBuilder builder \n GenericJSONBuilder setCoordinate \n GenericJSONBuilder setCreatedTime \n void persist \n String buildFieldJSON \n GenericJSONBuilder setUserid \n GenericJSONBuilder setImage", "output": ""}, {"instruction": "Generate java code\nreturns a map representing the substitution i.e. a set of variable/term pairs or null which is used to indicate a failure to unify . ", "input": " SubstVisitor _substVisitor \n\n List<? extends FOLNode> args \n String op \n Map<Variable,Term> cascadeSubstitution \n Map<Variable,Term> unifyOps \n boolean occurCheck \n boolean isCompound \n Map<Variable,Term> unifyVar", "output": ""}, {"instruction": "Generate java code\ncreate hash for a key , use default algorithm sha-256 ", "input": " Map<Path,String> map \n boolean initialized \n\n void init \n String readFile \n String readFileCached \n String getKeyAsString \n PublicKey decodePublicKey", "output": ""}, {"instruction": "Generate java code\nretrieves the tiledmap and the current layer using the mapname and tilelayer attributes . ", "input": " TiledMapTileLayer tileLayer \n String objectLayer \n String mapName \n boolean visited[][] \n TiledMap map \n String tileLayerString \n\n void read \n void pathFinderVisited \n TiledMap getMap \n EventInGame getTouchingEvent \n int getHeightInTiles \n TiledMapTileLayer getTileLayer \n boolean blocked \n boolean blocked \n boolean checkTileCollision \n String getMapName \n boolean triggerEvent \n boolean touchEvent \n float getCost \n int getWidthInTiles \n String getObjectLayer \n void write \n void runAutomaticEvents", "output": ""}, {"instruction": "Generate java code\ncreates a dom document from a trax source . if the source is a domsource holding a documentnode , this one will be returned . otherwise #toinputsource and a namespace aware documentbuilder createdby the default documentbuilderfactory will be used to read the source . this may involve an xslt identity transform in toinputsource . ", "input": " PlaceHolder placeHolder \n\n Node tryExtractNodeFromDOMSource \n InputSource toInputSource \n InputSource toInputSource \n Document tryExtractDocFromDOMSource \n NamespaceContext toNamespaceContext \n Node toNode \n Node toNode", "output": ""}, {"instruction": "Generate java code\nreturns a string that is used to start a subgraph . ", "input": " String TEMP_DIR \n StringBuilder graph \n String DOT \n\n void add \n void addln \n void addln \n byte[] getGraph \n int writeGraphToFile \n int writeGraphToFile \n String start_graph \n String end_graph \n void readSource \n String getDotSource \n File writeDotSourceToFile \n byte[] get_img_stream \n String end_subgraph", "output": ""}, {"instruction": "Generate java code\nimplements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . ", "input": " IEnvironments environments \n HashMap<String,CoAPConnectionFactory> factories \n AutoSIMCoAPConfig config \n\n void start", "output": ""}, {"instruction": "Generate java code\nremove a plugin from this container by its unique name ", "input": " SortedUniqueList<AbstractPlugin> plugins \n long serialVersionUID \n\n boolean add \n boolean removeByIndex \n boolean contains \n Iterator<AbstractPlugin> iterator \n int size \n AbstractPlugin getByIndex \n AbstractPlugin getByName \n void clear \n int indexOf \n boolean remove", "output": ""}, {"instruction": "Generate java code\nthe production for the item . ", "input": " production _the_production \n int _core_hash_cache \n symbol _symbol_after_dot \n int _dot_pos \n\n lr_item_core shift_core \n symbol symbol_after_dot \n int obj_hash \n String to_simple_string \n int dot_pos \n int hashCode \n boolean equals \n boolean equals \n String toString \n non_terminal dot_before_nt \n int core_hashCode \n boolean core_equals \n boolean dot_at_end", "output": ""}, {"instruction": "Generate java code\ntest of tostring method , of class device . ", "input": " Device dev \n\n void testGetType \n void setUpClass \n void testGetDeviceName_0args \n void testAddToPane \n void testGetAddress \n void tearDownClass \n void tearDown \n void testGetDeviceNames \n void testGetDeviceBlock \n void testAddCapabilities \n void testGetImgName \n void testAddCapability \n void testGetDeviceName_Locale \n void setUp \n void testGetImage \n void testGetDeviceID \n void testGetCapabilityBlock \n void testGetCapabilities \n void testRemoveCapability", "output": ""}, {"instruction": "Generate java code\nreturns the list of tags changed by the push . ", "input": " Date date \n int authorCount \n Map<String,String> refIdChanges \n Set<RepositoryCommit> commits \n long serialVersionUID \n String repository \n Map<String,ReceiveCommand.Type> refUpdates \n UserModel user \n\n String getOldId \n int getAuthorCount \n int getCommitCount \n boolean isDelete \n int compareTo \n ReceiveCommand.Type getChangeType \n RepositoryCommit addCommit \n RepositoryCommit addCommit \n List<String> getChangedRefs \n List<String> getChangedRefs \n List<String> getChangedBranches \n PersonIdent getAuthorIdent \n List<RepositoryCommit> getCommits \n List<RepositoryCommit> getCommits \n PersonIdent getCommitterIdent \n void addCommits \n boolean isNonFastForward \n boolean isNonFastForward \n String toString \n void updateRef \n void updateRef \n String getNewId", "output": ""}, {"instruction": "Generate java code\nget a value from the internal jsonobject ", "input": " JsonTray parent \n ClientCredential credential \n JSONObject json \n\n boolean checkExpireTime \n ClientIdentity getIdentity \n void setExpireTime \n boolean getBoolean \n boolean getBoolean \n Authentication setIdentity \n String getString \n String getString \n boolean has \n void delete \n void put \n void remove", "output": ""}, {"instruction": "Generate java code\nadd last movement ", "input": " int spinTime \n int[] recordedMovement \n int speed \n int cycleTime \n int MOVED_SPINRIGHT \n GeneralMotorConSchedule ourInstance \n int MOVED_RIGHT \n int MOVED_CYCLELEFT \n int MOVED_LOWERALT \n int cycleSpeed \n int cycleSpinSpeed \n int sideTime \n int runningThreads \n int altitudeSpeed \n int altitudeTime \n int batLvl \n int spinSpeed \n int hoverTime \n int MOVED_RAISEALT \n ARDrone drone \n int MOVED_CYCLERIGHT \n int runningID \n int MOVED_SPINLEFT \n int MOVED_BACKWARD \n int MOVED_FORWARD \n String TAG \n int MOVED_LEFT \n int spin90Time \n CommandManager cmd \n boolean printToConsole \n int spin90Speed \n\n GeneralMotorConSchedule spin90Left \n boolean isRunningThread \n GeneralMotorConSchedule lowerAltitude \n GeneralMotorConSchedule hover \n GeneralMotorConSchedule spin90Right \n GeneralMotorConSchedule cycleRight \n GeneralMotorConSchedule backward \n void pauseFor \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n GeneralMotorConSchedule raiseAltitude \n GeneralMotorConSchedule cycleLeft \n GeneralMotorConSchedule spinRight \n int getLastMovement \n int newRunningThread \n GeneralMotorConSchedule takeoff \n GeneralMotorConSchedule forward \n GeneralMotorConSchedule spinLeft \n GeneralMotorConSchedule right \n GeneralMotorConSchedule right \n void landing \n void setDrone \n GeneralMotorConSchedule left \n GeneralMotorConSchedule left \n GeneralMotorConSchedule getInstance", "output": ""}, {"instruction": "Generate java code\nrelease the netty bytebuf . ", "input": " long mLength \n ByteBuffer mBuffer \n ByteBuf mNettyBuf \n\n ByteBuffer getReadOnlyByteBuffer \n long getLength \n Object getNettyOutput", "output": ""}, {"instruction": "Generate java code\ntests the understoreblockinstream #skip long method for the first block of the file . ", "input": " long BLOCK_LENGTH \n String TEST_FILENAME \n UnderStoreBlockInStream mEOFBlockStream \n File mFile \n UnderStoreBlockInStream mBlockStream \n long FILE_LENGTH \n TemporaryFolder mFolder \n\n void singleByteReadInternal \n void skipEOF \n void seekEOF \n void seekInternal \n void before \n void arrayReadInternal \n void arrayFullRead \n void seek \n void singleByteReadEOF \n void arrayFullReadEOF \n void skipInternal \n void arrayReadEOF \n void arrayFullReadInternal \n InputStream create \n void after \n void singleByteRead \n void close \n void arrayRead", "output": ""}, {"instruction": "Generate java code\nfind the stored preview for the given book ", "input": " Book preview \n String QUILL_EXTENSION \n LinkedList<BookPreview> data \n Bookshelf instance \n String TAG \n String TAG \n Storage storage \n Book currentBook \n UUID uuid \n\n int compare \n void backup \n void backup \n void reloadPreview \n void backupDescription \n void setCurrentBook \n void setCurrentBook \n void assertNoCurrentBook \n void importBook \n Bitmap getThumbnail \n void deleteBook \n void exportBook \n String getTitle \n void reload \n UUID getUUID \n Bookshelf getBookshelf \n void newBook \n void sortBookPreviewList \n int getCount \n void importBookDirectory \n String getSummary \n BookPreview getCurrentBookPreview \n void deleteFromStorage \n Book getCurrentBook \n Time getLastModifiedTime \n LinkedList<BookPreview> getBookPreviewList \n void exportCurrentBook \n void createFirstNotebook \n void finalize \n void initialize", "output": ""}, {"instruction": "Generate java code\nreturns the iso 8601 representation of time hh : mm : ss + hh : mm . ", "input": " int offsetHours \n int offsetMinutes \n double seconds \n int minutes \n int hour \n String TIME_PATTERN \n\n int getOffsetHours \n Date toDate \n void setMinutes \n void setHour \n long getMilliseconds \n void setOffsetMinutes \n int getMinutes \n double getSeconds \n int hashCode \n void setSeconds \n boolean equals \n int getOffsetMinutes \n int getHour \n String toString \n void setOffsetHours \n void setTime", "output": ""}, {"instruction": "Generate java code\nsets the feed id . ", "input": " String feedId \n Long testId \n Long runId \n Long batchId \n\n Long getBatchId \n String toString \n Long getRunId \n String getFeedId \n void setBatchId \n void setTestId \n Long getTestId \n void setRunId", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #equals java.lang.object . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nreturn a new instance of appstatus based onthe provided individual app instances via #with appinstancestatus . ", "input": " Map<String,AppInstanceStatus> instances \n String deploymentId \n AppStatus status \n\n Map<String,AppInstanceStatus> getInstances \n Builder with \n void addInstance \n DeploymentState getState \n Builder of \n String toString \n String getDeploymentId", "output": ""}, {"instruction": "Generate java code\nverifies that two violations nodes with different filename arenot equal . ", "input": " PlaceHolder placeHolder \n\n void testEqualsNodeWithTwoDifferentViolationsDifferentBeginColumn \n void testEqualsNodeWithTwoDifferentViolationsDifferentEndColumn \n ViolationNode createViolationNode \n void testEqualsNodeWithTwoDifferentViolationsDifferentVariableName \n void testEqualsNodeWithTwoDifferentViolationsDifferentEndLine \n void testEqualsNodeWithTwoDifferentViolationsDifferentBeginLine \n void testEqualsNodeWithTwoEqualViolations", "output": ""}, {"instruction": "Generate java code\nthe component we are decorating . ", "input": " DataTypesHelper impl \n\n String getLanguage \n boolean equalsCHOICEKind \n String getBody \n boolean equalsDeepHistoryKind \n boolean equalsShallowHistoryKind \n Object setBody \n boolean equalsFORKKind \n boolean equalsJOINKind \n boolean equalsINITIALKind \n String multiplicityToString \n void copyTaggedValues \n boolean equalsJUNCTIONKind \n Object setLanguage", "output": ""}, {"instruction": "Generate java code\nsets the number of rows . ", "input": " long serialVersionUID \n int numRows \n int numCols \n\n int getNumRows \n MatrixIterator iterator \n int getNumCols \n void set \n void setNumCols \n void reshape \n void reshape", "output": ""}, {"instruction": "Generate java code\nsets the exp msg . ", "input": " Timestamp lastModifiedTimeStamp \n Timestamp fetcherStartTimestamp \n Timestamp createTimeStamp \n long serialVersionUID \n BigDecimal batchId \n String errorMsg \n OutcomeType outcomeType \n String createdBy \n BigDecimal feedId \n long testId \n BigDecimal runId \n Timestamp fetcherEndTimeStamp \n List<RegPCLTestResultDetailsEntity> regPclTestResultDetails \n RunStatusType runStatus \n\n void setLastModifiedTimeStamp \n void setFeedId \n void setFetcherStartTimestamp \n OutcomeType getOutcomeType \n void updateLastModifiedTimeStamp \n void updateCreateTimeStamp \n BigDecimal getRunId \n void setBatchId \n List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails \n void setTestId \n long getTestId \n RegPCLTestResultDetailsEntity removeRegPclTestResultDetail \n void setRegPclTestResultDetails \n RunStatusType getRunStatus \n RegPCLTestResultDetailsEntity addRegPclTestResultDetail \n String getErrorMsg \n void setRunStatus \n Timestamp getFetcherEndTimeStamp \n Timestamp getLastModifiedTimeStamp \n BigDecimal getFeedId \n void setRunId \n Timestamp getFetcherStartTimestamp \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n Timestamp getCreateTimeStamp \n BigDecimal getBatchId \n void setOutcomeType \n String getCreatedBy", "output": ""}, {"instruction": "Generate java code\ncommon empty loop utility that serves the purpose of warming up the jvm before performance microbenchmarks . ", "input": " String ALPHANUM \n Random RANDOM \n Logger LOG \n\n T createNewClassInstance \n boolean isUfsObjectStorage \n String listToString \n String randomString \n String argsToString \n void sleepMs \n void sleepMs \n String stripPrefixIfPresent \n String[] toStringArray \n List<String> getUnixGroups \n long getCurrentMs \n String getPrimaryGroupName \n String stripSuffixIfPresent \n String getValueFromStaticMapping \n void waitFor \n List<String> getGroups \n byte[] randomBytes", "output": ""}, {"instruction": "Generate java code\nfor locale selection . todo : detect the available locales from the available files . ", "input": " Logger LOG \n Locale systemDefaultLocale \n String BUNDLES_PATH \n Map<String,ResourceBundle> bundles \n List<ClassLoader> classLoaders \n boolean initialized \n\n void initInternal \n void init \n void init \n String localize \n String localize \n String getName \n void initForEclipse \n void initForEclipse \n void addClassLoader \n void loadBundle \n String messageFormat \n Locale getSystemDefaultLocale \n void setLocale \n void setLocale", "output": ""}, {"instruction": "Generate java code\nreturn the instrumentation instance in use . ", "input": " String DEFAULT_LOCK_TIMEOUT \n XLog LOG \n boolean dryrun \n XLog.Info logInfo \n int priority \n String type \n Map<Long,List<XCommand<?>>> commandQueue \n boolean used \n String name \n long createdTime \n MemoryLocks.LockToken lock \n String INSTRUMENTATION_GROUP \n Instrumentation instrumentation \n\n void loadState \n String getName \n long getLockTimeOut \n void releaseLock \n void eagerVerifyPrecondition \n T execute \n void resetUsed \n String getEntityKey \n T call \n void verifyPrecondition \n boolean isLockRequired \n String getType \n void acquireLock \n int getPriority \n void eagerLoadState \n long getCreatedTime \n void queue \n void queue", "output": ""}, {"instruction": "Generate java code\nreturns the amount of milliseconds that have elapsed since mark was last called . this timer runs irrespective of greenfoot 's act cycle , so if you call it many times during the same greenfoot frame , you may well get different answers . ", "input": " long lastMark \n\n void mark", "output": ""}, {"instruction": "Generate java code\ngets the pcl feed id . ", "input": " String pclFeedId \n String errorCode \n String regFeedId \n String errorMsg \n\n void setErrorMsg \n String getErrorCode \n String getRegFeedId \n void setPclFeedId \n String toString \n void setErrorCode \n void setRegFeedId \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\ngets the value of the elem3 property . ", "input": " String elem2 \n String elem1 \n int elem3 \n\n String getElem2 \n String getElem1 \n void setElem2 \n void setElem1 \n void setElem3", "output": ""}, {"instruction": "Generate java code\ngets the elementstylingorder attribute of the selector class ", "input": " int CHILD_AXIS \n int HOVER_PSEUDOCLASS \n int selectorID \n Selector siblingSelector \n String _name \n int _axis \n int FOCUS_PSEUDOCLASS \n int _pc \n int ACTIVE_PSEUDOCLASS \n int selectorCount \n int DESCENDANT_AXIS \n int VISITED_PSEUDOCLASS \n Ruleset _parent \n int IMMEDIATE_SIBLING_AXIS \n int _specificityD \n String _pe \n int _specificityC \n int _specificityB \n Selector chainedSelector \n int _pos \n String _namespaceURI \n java.util.List conditions \n\n void setName \n void addClassCondition \n void addAttributeSubstringCondition \n void addNthChildCondition \n void setPseudoElement \n void addAttributeMatchesListCondition \n void addAttributeEqualsCondition \n void addCondition \n void addEvenChildCondition \n void addIDCondition \n void addAttributePrefixCondition \n void setPos \n void addLinkCondition \n void addLastChildCondition \n boolean matchesDynamic \n void addLangCondition \n void setChainedSelector \n void setNamespaceURI \n int getSpecificityD \n void addUnsupportedCondition \n int getSpecificityC \n Selector getChainedSelector \n int getSpecificityB \n void setParent \n void addAttributeExistsCondition \n void addFirstChildCondition \n void setSiblingSelector \n void addAttributeSuffixCondition \n int getSelectorID \n int getAxis \n void setAxis \n void addAttributeMatchesFirstPartCondition \n String getPseudoElement \n Ruleset getRuleset \n boolean matches \n void addOddChildCondition \n void setPseudoClass \n boolean isPseudoClass \n String getOrder \n Object getAppropriateSibling \n void setSpecificityB \n void setSpecificityC \n void setSpecificityD", "output": ""}, {"instruction": "Generate java code\nreverse linked list recursive ", "input": " Node head \n\n void add \n void removeAllNodes \n void print \n Node getHead \n void printKthFromLast \n int printKthFromLast \n void initialize \n void removeDuplicate \n void reverse \n Node reverse \n void arrangeEvenOddPosition \n void remove \n void removeNode \n void swapeParis", "output": ""}, {"instruction": "Generate java code\nconverts a createfileoptions object to an openfileoptions object with amatching alluxio storage type . ", "input": " PlaceHolder placeHolder \n\n void createByteFile \n void createByteFile \n void createByteFile \n void createByteFile \n void createByteFile \n List<String> listFiles", "output": ""}, {"instruction": "Generate java code\nget keyinfo element of an encrypted element . ", "input": " EncryptedKeyElement m_EncryptedKeyElement \n Element m_KeyInfoEl \n Logger LOG \n\n EncryptedKeyElement getEncryptedKeyElement", "output": ""}, {"instruction": "Generate java code\nstore maps in the message . ", "input": " PlaceHolder placeHolder \n\n RMProperties retrieveRMProperties \n void storeRMProperties \n boolean isServerSide \n ProtocolVariation getProtocolVariation \n void setProtocolVariation \n String getRMPropertiesKey \n AddressingProperties retrieveMAPs \n boolean isRMProtocolMessage \n String generateUUID", "output": ""}, {"instruction": "Generate java code\nintent action for reloading the js ", "input": " String WEBSOCKET_PROXY_URL_FORMAT \n String RELOAD_APP_ACTION_SUFFIX \n String BUNDLE_URL_FORMAT \n String RELOAD_APP_EXTRA_JS_PROXY \n OkHttpClient mClient \n String GENYMOTION_LOCALHOST \n String EMULATOR_LOCALHOST \n String DEVICE_LOCALHOST \n OkHttpClient mOnChangePollingClient \n String PACKAGER_OK_STATUS \n int LONG_POLL_KEEP_ALIVE_DURATION_MS \n Handler mRestartOnChangePollingHandler \n DevInternalSettings mSettings \n int HTTP_CONNECT_TIMEOUT_MS \n boolean mOnChangePollingEnabled \n int LONG_POLL_FAILURE_DELAY_MS \n OnServerContentChangeListener mOnServerContentChangeListener \n String LAUNCH_CHROME_DEVTOOLS_COMMAND_URL_FORMAT \n String PACKAGER_STATUS_URL_FORMAT \n String ONCHANGE_ENDPOINT_URL_FORMAT \n String SOURCE_MAP_URL_FORMAT \n\n void launchChromeDevtools \n String getDebugServerHost \n boolean isRunningOnStockEmulator \n String createLaunchChromeDevtoolsCommandUrl \n void onFailure \n String getSourceMapUrl \n String createBundleURL \n boolean isRunningOnGenymotion \n void stopPollingOnChangeEndpoint \n String getSourceUrl \n void downloadBundleFromURL \n void isPackagerRunning \n void handleOnChangePollingResponse \n void onPackagerStatusFetched \n void onServerContentChanged \n String getHostForJSProxy \n boolean getDevMode \n String createOnChangeEndpointUrl \n String getWebsocketProxyURL \n void startPollingOnChangeEndpoint \n String createPackagerStatusURL \n String getJSBundleURLForRemoteDebugging \n void onSuccess \n void enqueueOnChangeEndpointLongPolling", "output": ""}, {"instruction": "Generate java code\ntest method for com.sqa.em.util.helper.requestinput #getstring java.lang.string , java.lang.string . ", "input": " PlaceHolder placeHolder \n\n void testGetCharString \n void testAddStringElement \n void testGetCharStringCharArray \n void testGetDouble \n void testGetBoolean \n void testGetIntStringIntInt \n void testGetIntString", "output": ""}, {"instruction": "Generate java code\nreturn the job owner group name . ", "input": " String WORKFLOW \n String ACTION_TRACKER_URI \n String LAST_ACTION_IN_ERROR \n String ACTION_PROTO_CONF \n String ACTION_DATA \n String ACTION_EXTERNAL_STATUS \n String ACTION_ERROR_CODE \n String ACTION_EXTERNAL_ID \n String ACTION \n String ACTION_ERROR_MESSAGE \n\n int wf_run \n WorkflowJobBean getWorkflow \n String getActionVar \n String wf_callback \n void setActionInfo \n String wf_conf \n String wf_actionExternalStatus \n WorkflowActionBean getAction \n String wf_actionExternalId \n Configuration getProtoActionConf \n String wf_transition \n String wf_lastErrorNode \n String wf_appPath \n String wf_errorCode \n void configureEvaluator \n String wf_id \n String wf_actionTrackerUri \n Map<String,String> wf_actionData \n String wf_name \n String wf_errorMessage \n String wf_user", "output": ""}, {"instruction": "Generate java code\nsets the value of the modulename property . ", "input": " String fail \n String pass \n String moduleName \n String noRun \n int ID \n String value \n String totalTC \n\n String getPass \n void setNoRun \n String getTotalTC \n int getID \n void setFail \n String getFail \n String getNoRun \n int compareTo \n String getModuleName \n String getValue \n void setValue \n void setID \n void setTotalTC \n void setPass", "output": ""}, {"instruction": "Generate java code\nfrees the object . if the free list is full , the object will be garbage collected . ", "input": " AtomicReferenceArray<T> _freeStack \n AtomicInteger _top \n\n boolean allowFree \n T allocate \n boolean checkDuplicate \n boolean free", "output": ""}, {"instruction": "Generate java code\nset correlation id of the message ", "input": " Map<String,Object> headers \n byte body[] \n long deliveryTag \n String replyTo \n String contentEncoding \n String messageId \n String correlationId \n String soapAction \n String contentType \n\n String getCorrelationId \n String getContentEncoding \n void setHeaders \n Map<String,Object> getHeaders \n byte[] getBody \n String getReplyTo \n void setContentEncoding \n long getDeliveryTag \n void setMessageId \n void setSoapAction \n void setBody \n String getMessageId \n void setReplyTo \n void setDeliveryTag \n String getContentType \n void setContentType \n String getSoapAction", "output": ""}, {"instruction": "Generate java code\ntests the plainsaslserver #getauthorizationid to retrieve the correct user . ", "input": " byte sSEPARATOR \n ExpectedException mThrown \n PlainSaslServer mPlainSaslServer \n\n void authenticationNotComplete \n void unauthorizedCallback \n void before \n void passwordIsNotSet \n void userIsNotSet \n void handle \n void handle \n byte[] getUserInfo", "output": ""}, {"instruction": "Generate java code\nhandle event from the rawrtfparser . ", "input": " IParserEventHandler handler \n IParserEvent GROUP_END \n IParserEvent GROUP_START \n IParserEvent DOCUMENT_START \n Deque<IParserEventHandler> handlerStack \n Map<Integer,String> m_fontEncodings \n Deque<ParserState> stack \n IParserEvent DOCUMENT_END \n ParserState state \n int skipBytes \n\n void processCharacter \n void processUpr \n void handleEvent \n void processDocumentEnd \n void processCommand \n void parse \n void processCharacterBytes \n void processString \n void processDocumentStart \n void processUnicodeAlternateSkipCount \n void handleCommand \n void processGroupStart \n void processFont \n void processEncoding \n void processUnicode \n String currentEncoding \n void processBinaryBytes \n void processFontCharset", "output": ""}, {"instruction": "Generate java code\nthis method is where most of the action is . up to 2 sorted temporary tables are created , and are passed into sortscan for final merging . ", "input": " Plan p \n RecordComparator comp \n Transaction tx \n Schema sch \n\n Schema schema \n List<TempTable> splitIntoRuns \n int blocksAccessed \n int distinctValues \n int recordsOutput \n boolean copy \n List<TempTable> doAMergeIteration \n TempTable mergeTwoRuns", "output": ""}, {"instruction": "Generate java code\nlogs out the user the implementation removes the user associated with the subject . ", "input": " User mUser \n CallbackHandler mCallbackHandler \n String mUserName \n Subject mSubject \n\n boolean abort \n boolean commit \n void handle \n void initialize \n boolean login", "output": ""}, {"instruction": "Generate java code\nreturns the post id , if available . ", "input": " String postId \n\n void setShouldFailOnDataError \n boolean getShouldFailOnDataError", "output": ""}, {"instruction": "Generate java code\ncheck if a given address version is valid given the networkparameters . ", "input": " int addressHeader \n int INTERVAL \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n long packetMagic \n int p2shHeader \n List<NetworkParameters> paramSet \n int PROTOCOL_VERSION \n Block genesisBlock \n BigInteger proofOfWorkLimit \n int subsidyDecreaseBlockCount \n int port \n BigInteger MAX_MONEY \n int TARGET_SPACING \n String[] dnsSeeds \n Map<Integer,Sha256Hash> checkpoints \n byte[] SATOSHI_KEY \n int interval \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n Sha256Hash calculateBlockPoWHash \n BigInteger getMaxMoney \n NetworkParameters getParamsFromAddressByte \n void registerParams \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n int getRetargetBlockCount \n int getRetargetBlockCount \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n String getURIScheme \n BigInteger getProofOfWorkLimit", "output": ""}, {"instruction": "Generate java code\nset a flag indicating whether to print a ' ; ' after certain statements . this is used when pretty-printing for loops . ", "input": " boolean printType \n boolean appendSemicolon \n Lang lang \n\n void print \n boolean printType \n boolean printType \n Lang lang \n void printAst", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #setfaamode . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetCourse \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nsets the current record to be the record having the specified id . ", "input": " Block blk \n int EMPTY \n int INUSE \n Transaction tx \n TableInfo ti \n int slotsize \n int currentslot \n\n boolean next \n boolean isValidSlot \n int currentId \n boolean insert \n String getString \n int currentpos \n void delete \n void setInt \n int getInt \n void setString \n int fieldpos \n void close \n boolean searchFor", "output": ""}, {"instruction": "Generate java code\ndetermines if this term is of the form `` f1 = f2 '' where f1 is the specified field and f2 is another field . if so , the method returns the name of that field . if not , the method returns null . ", "input": " Expression lhs \n Expression rhs \n\n Constant equatesWithConstant \n int reductionFactor \n boolean appliesTo \n boolean isSatisfied \n String toString", "output": ""}, {"instruction": "Generate java code\nsets the act value . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n void setSrcFileName \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n void setFailedAttrib \n BigDecimal getExpDataSetId \n String getErrorMsg \n String getActValue \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n BigDecimal getExpDataUnitId \n Timestamp getCreateTimeStamp \n String getFailedAttrib \n void setExpDataSetId \n void setDataSetId \n void setExpDataUnitId", "output": ""}, {"instruction": "Generate java code\nnormalize text-elements by removing all empty text nodes and normalizing the non-empty ones . `` normalized '' in this context means all whitespace characters are replaced by space characters and consecutive whitespace characters are collapsed . ", "input": " DifferenceEvaluator differenceEvaluator \n ComparisonResult[] comparisonResultsToCheck \n ComparisonResult[] CHECK_FOR_IDENTICAL \n Source controlSource \n ComparisonResult[] CHECK_FOR_SIMILAR \n Map<String,String> namespaceContext \n Predicate<Node> nodeFilter \n List<ComparisonListener> differenceListeners \n Predicate<Attr> attributeFilter \n boolean ignoreWhitespace \n List<ComparisonListener> comparisonListeners \n boolean ignoreComments \n boolean normalizeWhitespace \n NodeMatcher nodeMatcher \n ComparisonController comparisonController \n Source testSource \n List<Difference> results \n EnumSet<ComparisonResult> comparisonResultsToCheck \n\n DiffBuilder checkForIdentical \n DiffBuilder withNamespaceContext \n DiffBuilder compare \n DiffBuilder withNodeFilter \n void comparisonPerformed \n DiffBuilder withNodeMatcher \n List<Difference> getDifferences \n DiffBuilder withComparisonController \n DiffBuilder ignoreWhitespace \n DiffBuilder withDifferenceEvaluator \n DiffBuilder ignoreComments \n DiffBuilder withDifferenceListeners \n DiffBuilder checkForSimilar \n DiffBuilder withTest \n Diff build \n Source getSource \n DiffBuilder withComparisonListeners \n Source wrap \n DiffBuilder withAttributeFilter", "output": ""}, {"instruction": "Generate java code\nget default claims for given trusted service ", "input": " Log log \n\n void removeTrustedService \n SOAPFault genFaultResponse \n ResponseToken getResponse \n ClaimDTO[] getAllTrustedServices \n void setReplyToURL \n void addTrustedService", "output": ""}, {"instruction": "Generate java code\ngets a boolean value out of the object . ", "input": " Bundle bundle \n Bundle bundle \n\n E putStringArrayList \n SharePhoto getPhoto \n E putPhotoArrayList \n E putDoubleArray \n double getDouble \n E putDouble \n E putLong \n Bundle getBundle \n double[] getDoubleArray \n Object get \n ArrayList<ShareOpenGraphObject> getObjectArrayList \n E putIntArray \n E putLongArray \n Set<String> keySet \n E putBoolean \n boolean[] getBooleanArray \n ArrayList<SharePhoto> getPhotoArrayList \n ShareOpenGraphObject getObject \n E putPhoto \n E readFrom \n E putInt \n E putString \n ArrayList<String> getStringArrayList \n String getString \n int describeContents \n long[] getLongArray \n long getLong \n int getInt \n E putObjectArrayList \n E putBooleanArray \n E putObject \n void writeToParcel \n int[] getIntArray", "output": ""}, {"instruction": "Generate java code\nchecks if the loglevel and logmessage goes through the logfilter . ", "input": " String fileName \n String DEFAULT_REGEX \n Writer logWriter \n String WHITE_SPACE_REGEX \n Map<String,Integer> logLevels \n String LOG_LEVEL_REGEX \n Filter logFilter \n long logRotation \n String ALLOW_ALL_REGEX \n String PREFIX_REGEX \n Pattern filterPattern \n String logPath \n long modTime \n String logFile \n String TIMESTAMP_REGEX \n List<String> parameters \n boolean noFilter \n Map<String,String> filterParams \n Pattern SPLITTER_PATTERN \n\n boolean isFilterPresent \n void setLogLevel \n void constructPattern \n void setParameter \n void defineParameter \n void reset \n void streamLog \n int compareTo \n String getFileName \n ArrayList<String> splitLogMessage \n long getModTime \n ArrayList<FileInfo> getFileList", "output": ""}, {"instruction": "Generate java code\nwrite the given int value 32-bit in big-endian order to the buffer ", "input": " ByteBuffer mWriter \n byte[] mBuffer \n\n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter putLen8 \n BufferedByteWriter put16 \n BufferedByteWriter put16 \n BufferedByteWriter putLen16 \n byte[] toByteArray \n void ensureCapacity \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put \n BufferedByteWriter put", "output": ""}, {"instruction": "Generate java code\nthe authentication in place when this token was created . ", "input": " String PARAM_REFERSH_TOKEN \n String QUERY_BY_RESOURCE_SET \n String PARAM_DATE \n AuthenticationHolderEntity authenticationHolder \n String tokenType \n String ID_TOKEN_FIELD_NAME \n String QUERY_EXPIRED_BY_DATE \n String PARAM_CLIENT \n String QUERY_BY_REFRESH_TOKEN \n String PARAM_TOKEN_VALUE \n Set<Permission> permissions \n JWT jwtValue \n Set<String> scope \n OAuth2AccessTokenEntity idToken \n ClientDetailsEntity client \n String QUERY_BY_CLIENT \n Date expiration \n String QUERY_BY_TOKEN_VALUE \n String PARAM_ID_TOKEN \n Long id \n String QUERY_BY_ID_TOKEN \n String QUERY_ALL \n String PARAM_RESOURCE_SET_ID \n OAuth2RefreshTokenEntity refreshToken \n\n OAuth2RefreshTokenEntity getRefreshToken \n String getTokenType \n void setTokenType \n String getIdTokenString \n void setJwt \n Set<Permission> getPermissions \n Long getId \n void setAuthenticationHolder \n void setExpiration \n ClientDetailsEntity getClient \n void setPermissions \n String getValue \n void setClient \n Date getExpiration \n int getExpiresIn \n void setId \n JWT getJwt \n void setIdToken \n OAuth2AccessTokenEntity getIdToken \n void setScope \n boolean isExpired \n void setRefreshToken \n void setRefreshToken \n Set<String> getScope \n Map<String,Object> getAdditionalInformation", "output": ""}, {"instruction": "Generate java code\nremove all available plugins ", "input": " PluginContainer activePlugins \n List<PluginManagerListener> listeners \n Logger LOG \n PluginManager singleton \n PluginContainer allPlugins \n\n void removePlugin \n void notifyContainerChanged \n void addPlugin \n void loadPlugins \n boolean isActive \n Iterator<AbstractPlugin> iterator \n int countActivePlugins \n AbstractPlugin getByName \n void loadAvailablePlugins \n int indexOf \n void addListener \n Iterator<AbstractPlugin> getActivePluginIterator \n void setAllActive \n AbstractPlugin getByIndex \n void notifyActiveChanged \n void addToClasspath \n void removeListener \n void pluginStateChanged \n int indexOfActive \n int countPlugins \n void savePlugins \n void setActive \n void loadAvailableJars \n AbstractPlugin getActive \n PluginManager getInstance \n void currentPointsChanged", "output": ""}, {"instruction": "Generate java code\nset the weight for this node . ", "input": " int edgeOffset \n FigNode figure \n float UPLINK_FACTOR \n List<ClassdiagramNode> uplinks \n int rank \n List<ClassdiagramNode> downlinks \n int NORANK \n int column \n int placementHint \n float weight \n int NOCOLUMN \n int NOWEIGHT \n\n Vector<ClassdiagramNode> getUplinks \n Point getLocation \n boolean isComment \n List<ClassdiagramNode> getUpNodes \n float getWeight \n FigNode getFigure \n Vector<ClassdiagramNode> getDownlinks \n int compareTo \n void setColumn \n void addDownlink \n void setLocation \n void setEdgeOffset \n boolean isStandalone \n int getColumn \n float getSubtreeWeight \n float calculateWeight \n void setRank \n void addRank \n int getTypeOrderNumer \n int getEdgeOffset \n int getRank \n boolean isPackage \n void addUplink \n int getLevel \n Dimension getSize \n void setPlacementHint \n int getPlacementHint \n void setFigure \n List<ClassdiagramNode> getDownNodes", "output": ""}, {"instruction": "Generate java code\nreleases a netty channel to the channel pools . ", "input": " ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_HEARTBEAT_POOL \n BlockMasterClientPool mBlockMasterClientPool \n Boolean mHasLocalWorker \n ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_POOL \n ConcurrentHashMapV8<InetSocketAddress,NettyChannelPool> NETTY_CHANNEL_POOL_MAP \n Map<InetSocketAddress,BlockStoreContext> CACHED_CONTEXTS \n\n BlockWorkerClient acquireWorkerClient \n void releaseBlockWorkerThriftClient \n void initializeGauges \n boolean hasLocalWorker \n void releaseBlockWorkerThriftClientHeartbeat \n void releaseWorkerClient \n BlockStoreContext get \n BlockStoreContext get \n CloseableResource<BlockMasterClient> acquireMasterClientResource \n BlockWorkerClientService.Client acquireBlockWorkerThriftClient \n List<WorkerNetAddress> getWorkerAddresses \n Channel acquireNettyChannel \n BlockWorkerClientService.Client acquireBlockWorkerThriftClientHeartbeat", "output": ""}, {"instruction": "Generate java code\nreturn the system id , the value defined in the #conf_system_id configuration property . ", "input": " String OOZIE_HOME_DIR \n String CONF_SYSTEM_ID \n String systemId \n Services SERVICES \n String CONF_SERVICE_CLASSES \n String CONF_SYSTEM_MODE \n Configuration conf \n Map<Class<? extends Service>,Service> services \n String oozieHome \n String CONF_DELETE_RUNTIME_DIR \n String CONF_SERVICE_EXT_CLASSES \n SYSTEM_MODE systemMode \n String runtimeDir \n int MAX_SYSTEM_ID_LEN \n\n String getRuntimeDir \n void init \n void setService \n void setServiceInternal \n Configuration getConf \n void setOozieHome \n SYSTEM_MODE getSystemMode \n void setSystemMode \n T get \n Services get \n void destroy \n String createRuntimeDir \n String getOozieHome", "output": ""}, {"instruction": "Generate java code\nsets an array of object values in the object . ", "input": " Bundle bundle \n Bundle bundle \n\n E putStringArrayList \n SharePhoto getPhoto \n E putPhotoArrayList \n E putDoubleArray \n double getDouble \n E putDouble \n E putLong \n Bundle getBundle \n double[] getDoubleArray \n Object get \n ArrayList<ShareOpenGraphObject> getObjectArrayList \n E putIntArray \n boolean getBoolean \n E putLongArray \n Set<String> keySet \n E putBoolean \n boolean[] getBooleanArray \n ArrayList<SharePhoto> getPhotoArrayList \n ShareOpenGraphObject getObject \n E putPhoto \n E readFrom \n E putInt \n E putString \n ArrayList<String> getStringArrayList \n String getString \n int describeContents \n long[] getLongArray \n long getLong \n int getInt \n E putBooleanArray \n E putObject \n void writeToParcel \n int[] getIntArray", "output": ""}, {"instruction": "Generate java code\nsets uri fragment . the value is expected to be unescaped and may contain non ascii characters . ", "input": " String userInfo \n String encodedPath \n String scheme \n List<NameValuePair> queryParams \n String encodedSchemeSpecificPart \n String encodedFragment \n String encodedUserInfo \n String encodedAuthority \n String path \n String fragment \n String encodedQuery \n int port \n String host \n\n URIBuilder setHost \n String encodeUserInfo \n String getScheme \n String encodeQuery \n String buildString \n URIBuilder setPath \n URIBuilder setScheme \n URIBuilder setPort \n URIBuilder addParameter \n URIBuilder setUserInfo \n URIBuilder setUserInfo \n String encodeFragment \n List<NameValuePair> parseQuery \n int getPort \n void digestURI \n URI build \n URIBuilder setParameter \n String getPath \n String encodePath \n List<NameValuePair> getQueryParams \n String getFragment \n URIBuilder setQuery \n String getUserInfo \n String normalizePath \n String getHost", "output": ""}, {"instruction": "Generate java code\nset the key size to use when generating a symmetric key . the default is 256 bits . ", "input": " List<String> acceptedC14nAlgorithms \n String signatureAlgorithm \n long maximumKeySize \n long keySize \n List<String> acceptedSignatureAlgorithms \n String c14nAlgorithm \n String digestAlgorithm \n long minimumKeySize \n boolean useKeyValue \n\n String getC14nAlgorithm \n boolean isUseKeyValue \n List<String> getAcceptedC14nAlgorithms \n void setUseKeyValue \n long getMinimumKeySize \n void setAcceptedC14nAlgorithms \n void setC14nAlgorithm \n void setDigestAlgorithm \n void setMinimumKeySize \n void setAcceptedSignatureAlgorithms \n String getDigestAlgorithm \n List<String> getAcceptedSignatureAlgorithms \n String getSignatureAlgorithm \n void setSignatureAlgorithm \n long getKeySize \n void setMaximumKeySize \n long getMaximumKeySize", "output": ""}, {"instruction": "Generate java code\nsets up the configuration for alluxio before a test runs . ", "input": " int MIN_LEN \n int MAX_LEN \n int mSessionTimeoutMs \n int DELTA \n\n void constructor \n void constructorWithException \n void getSessionId \n void timeout", "output": ""}, {"instruction": "Generate java code\nretrieve all springconfig in the registry ", "input": " SpringConfigRegistry INSTANCE \n Map<SpringConfig,String> mSpringConfigMap \n\n void removeAllSpringConfig \n boolean addSpringConfig \n boolean removeSpringConfig \n SpringConfigRegistry getInstance", "output": ""}, {"instruction": "Generate java code\nreturn the utc current date and time in w3c format down to second yyyy-mm-ddthh : mm : ssz . i.e. : 1997-07-16t19:20:30z ", "input": " int SUBMIT_MINUTES \n long KB \n long MB \n int SUBMIT_DAYS \n int SUBMIT_HOURS \n long PB \n long TB \n long GB \n\n String trim \n String concat \n Object firstNotNull \n String urlEncode", "output": ""}, {"instruction": "Generate java code\nlets this know the application has been updated with what 's on disk , and this should synchronize with the last disk check . ", "input": " Collection<File> m_newDirectoryContents \n Collection<File> m_storedDirectoryContents \n Logger m_log \n boolean m_removed \n File m_directory \n boolean m_markedForRemoval \n\n boolean removed \n int hashCode \n boolean equals \n boolean markedForRemoval \n File getDirectory \n void markForRemoval \n boolean shouldUpdate \n void setRemoved \n Collection<File> getFiles", "output": ""}, {"instruction": "Generate java code\nadd mapping between uri path and sql which represent one of more using inner join or left outer join tables . the base type and sub type will be guessed . ", "input": " List<E> mEntries \n Map<String,SQLiteUriMatcher> instances \n Uri mBaseContentUri \n String mAuthority \n UriMatcher mUriMatcher \n String TAG \n\n E createMatcherEntry \n E createMatcherEntry \n void addSQLBuilderCallback \n void addSQLBuilderCallback \n E getMatcherEntry \n String getType \n List<E> getEntries \n void addMatherEntry \n void addRawSQL \n void addRawSQL \n U getInstance \n void instantiate", "output": ""}, {"instruction": "Generate java code\nclear the individual model . ", "input": " HashMap<String,IndividualStructure> individualStructures \n\n void removeIndividualStructure \n void setIndividualStructures \n void addIndividualStructure \n HashMap<String,IndividualStructure> getIndividualStructures", "output": ""}, {"instruction": "Generate java code\nget the languageversion associated with the current source file . ", "input": " boolean ignoreExceptions \n File sourceCodeFile \n String sourceCodeFilename \n LanguageVersion languageVersion \n ConcurrentMap<String,Object> attributes \n Report report \n\n void setSourceCodeFile \n void setLanguageVersion \n boolean setAttribute \n Object getAttribute \n boolean isIgnoreExceptions \n void setSourceCodeFilename \n File getSourceCodeFile \n void setIgnoreExceptions \n Report getReport \n Object removeAttribute \n String getSourceCodeFilename \n void setReport", "output": ""}, {"instruction": "Generate java code\nget the signatureproperties to use . ", "input": " Object encryptionCryptoProperties \n Bus bus \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n Logger LOG \n String issuer \n EncryptionProperties encryptionProperties \n CallbackHandler callbackHandler \n List<Relationship> relationships \n boolean validateUseKey \n RelationshipResolver relationshipResolver \n String callbackHandlerClass \n String signatureUsername \n Crypto encryptionCrypto \n SAMLRealmCodec samlRealmCodec \n String encryptionUsername \n Object signatureCryptoProperties \n IdentityMapper identityMapper \n RealmParser realmParser \n\n RelationshipResolver getRelationshipResolver \n Bus getBus \n void setSamlRealmCodec \n ResourceManager getResourceManager \n void setSignaturePropertiesFile \n void setCallbackHandler \n void setEncryptionProperties \n EncryptionProperties getEncryptionProperties \n boolean isValidateUseKey \n void setSignatureUsername \n List<Relationship> getRelationships \n SAMLRealmCodec getSamlRealmCodec \n String getEncryptionUsername \n void setIdentityMapper \n void setEncryptionPropertiesFile \n void setEncryptionUsername \n void setCallbackHandlerClass \n Crypto getEncryptionCrypto \n void setRelationships \n void setSignatureProperties \n void setRealmParser \n String getIssuer \n void setSignatureCryptoProperties \n void setSignatureCrypto \n IdentityMapper getIdentityMapper \n void setValidateUseKey \n void configureProperties \n void setEncryptionCrypto \n RealmParser getRealmParser \n String getSignatureUsername \n Crypto getSignatureCrypto \n void setIssuer \n CallbackHandler getCallbackHandler \n void setEncryptionCryptoProperties \n void setBus", "output": ""}, {"instruction": "Generate java code\nreturns the predicate that describes which records should be modified . ", "input": " String fldname \n Predicate pred \n String tblname \n Expression newval \n\n Expression newValue \n String targetField \n String tableName", "output": ""}, {"instruction": "Generate java code\nthis is a fairly light weight check to see of a covariance matrix is valid . it checks to see if the diagonal elements are all positive , which they should be if it is valid . not all invalid covariance matrices will be caught by this method . ", "input": " double TOL \n\n void randomVector \n boolean invert \n boolean invert \n int isValid", "output": ""}, {"instruction": "Generate java code\nputs an unsigned byte into the buffer . ", "input": " CharsetDecoder DECODER \n Logger LOG \n\n Collection<byte[]> splitToByteArrays \n Collection<ByteBuffer> split \n byte[] toByteArray \n void putUnsignedByte \n void putUnsignedByte \n String toAsciiString \n void putUnsignedShort \n void putUnsignedShort \n boolean isUdp \n String getString \n ByteBuffer createBuffer \n ByteBuffer toBuf", "output": ""}, {"instruction": "Generate java code\nsets a subject capturing the login name the end user used to login to the resource server when authorizing a given client request ", "input": " long issuedAt \n List<OAuthPermission> scopes \n UserSubject subject \n Client client \n boolean preAuthorized \n String tokenString \n long lifetime \n String tokenSecret \n\n void setScopes \n UserSubject getSubject \n void setPreAuthorized \n String getTokenKey \n boolean isPreAuthorized \n long getLifetime \n Client getClient \n long getIssuedAt \n String getTokenSecret \n List<OAuthPermission> getScopes", "output": ""}, {"instruction": "Generate java code\nsets whether execution should break when a script exception is thrown . ", "input": " Scriptable scope \n Dim dim \n int type \n SwingGui debugGui \n int EXIT_ACTION \n int SCOPE_PROVIDER \n\n InputStream getIn \n void setExitAction \n void doBreak \n void main \n void run \n void setBreakOnReturn \n PrintStream getOut \n void setSize \n void setSize \n void contextCreated \n void setVisible \n void mainEmbedded \n void mainEmbedded \n void mainEmbedded \n void contextExited \n void setBreakOnEnter \n PrintStream getErr \n void mainEmbeddedImpl \n void go \n boolean isVisible \n ScopeProvider newScopeProvider \n void setScopeProvider \n void pack \n void clearAllBreakpoints \n void contextReleased \n void setOptimizationLevel \n void detach \n void dispose \n void setScope \n void attachTo \n void contextEntered \n Scriptable getScope \n JFrame getDebugFrame", "output": ""}, {"instruction": "Generate java code\ncomputes the corresponding latitude for a given view y coordinate . ", "input": " float unitsPerInch \n float dotsPerInch \n float originLat \n float dotsPerDeg \n float originLon \n float lonCorr \n\n float getDotsPerDeg \n void adjustTransformation \n void setScreenResolution \n void adjust \n int x \n int y \n float getDotsPerUnit \n void zoom \n float lon \n float computeScale", "output": ""}, {"instruction": "Generate java code\ncreate an instance of usaddress ", "input": " QName _PurchaseOrder_QNAME \n QName _Comment_QNAME \n\n JAXBElement<PurchaseOrderType> createPurchaseOrder \n Items.Item createItemsItem \n PurchaseOrderType createPurchaseOrderType \n Items createItems \n PurchaseOrders createPurchaseOrders \n JAXBElement<String> createComment", "output": ""}, {"instruction": "Generate java code\nstart the service . this method is invoked on the execution thread . by default this method does nothing . ", "input": " Logger logger \n Service delegate \n\n void doStop \n void run \n Throwable failureCause \n String serviceName \n void triggerShutdown \n Service startAsync \n void shutDown \n boolean isRunning \n Executor executor \n void doStart \n void awaitTerminated \n void awaitTerminated \n Service stopAsync \n String toString \n String toString \n State state \n void awaitRunning \n void awaitRunning \n void addListener", "output": ""}, {"instruction": "Generate java code\nget jsonobject value . ", "input": " List<Object> mArray \n\n void add \n long getLong \n int getInt \n void addAll \n void addAll \n Object get \n int length \n double getDouble \n JSONArray getArray \n boolean getBoolean \n float getFloat \n String getString \n void writeJSON", "output": ""}, {"instruction": "Generate java code\ncomputes the determinant of the matrix using leibniz 's formula a direct implementation of leibniz determinant equation . this is of little practical use because of its slow runtime of o n ! where n is the width of the matrix . lu decomposition should be used instead . one advantage of leibniz 's equation is how simplistic it is . det a = sum & sigma ; in sn ; sgn & sigma ;-rrb- prod i = 1 to n ; ai , & sigma ; i sgn is the sign function of permutations . +1 or -1 for even and odd permutations a set of permutations . if n = 3 then the possible permutations are 1,2,3 1,3,2 , 3,2,1 , ... etc ", "input": " PlaceHolder placeHolder \n\n double recursive", "output": ""}, {"instruction": "Generate java code\nget a dish by site url ", "input": " CustomDishRepository customDishRepository \n SimpleDishRepository simpleDishRepository \n DishRepository dishRepository \n DishFilterService dishFilterService \n Logger log \n\n Page<SimpleDish> findAllSimpleDish \n SimpleDish findSimpleById \n Page<SimpleDish> findByHashes \n Dish save \n Dish findOne \n void deleteAll \n void deleteByHost \n Page<SimpleDish> searchIngredientFullText \n Page<Dish> findAll \n void delete \n Dish findBySiteUrlId \n Dish findOneById \n List<SimpleDish> findByHashesLimit \n List<SimpleDish> findByProcedureStepsLessThanLimit \n List<SimpleDish> findOnlyIdByProcedureStepsLessThan \n Dish findByTitleUrl \n Long countByTitleUrl \n List<SimpleDish> findByPreparationStepsLessThanLimit \n List<SimpleDish> findOnlyIdByPreparationStepsLessThan \n List<SimpleDish> findOnlyIdByHashes", "output": ""}, {"instruction": "Generate java code\ngenerates a new unique id and returns it as a string . the contents of the string is supposed to be unique with respect to all strings generated by other instances of this class . todo : we should consider using java.util.uuid for this instead . ", "input": " Logger LOG \n Class MYCLASS \n String id \n\n String readObjectID \n String createObjectID \n String toString \n String getIDOfObject", "output": ""}, {"instruction": "Generate java code\nthis method is called to flush the error queue . subclasses may want to print summary information in this method . ", "input": " int limit \n String name \n boolean flushed \n int errorCount \n\n void enqueue \n void enqueue \n void enqueue \n void displayError \n boolean hasErrors \n int errorCount \n void tooManyErrors", "output": ""}, {"instruction": "Generate java code\ncalled as a result of a previous service addition request . ", "input": " int RETVAL_MALFORMED \n int RETVAL_OK \n int RETVAL_ERROR \n int RETVAL_NOENTRY \n\n void onServiceRegistration \n void onServiceRemove \n void onServiceUnregistration \n void onServiceDelayed \n void onServiceModify \n void onFlowStatUpdate \n String getRetvalString \n void onServiceGet", "output": ""}, {"instruction": "Generate java code\nget the list of registered scopes ", "input": " String clientIpAddress \n String clientId \n List<String> allowedGrantTypes \n boolean isConfidential \n List<String> applicationCertificates \n UserSubject subject \n List<String> redirectUris \n List<String> registeredScopes \n String applicationLogoUri \n long serialVersionUID \n String applicationDescription \n List<String> registeredAudiences \n String applicationWebUri \n String clientSecret \n Map<String,String> properties \n String applicationName \n\n UserSubject getSubject \n String getApplicationName \n void setSubject \n String getClientId \n List<String> getAllowedGrantTypes \n void setApplicationDescription \n void setRegisteredScopes \n void setProperties \n String getClientIpAddress \n String getApplicationDescription \n void setApplicationCertificates \n String getApplicationWebUri \n void setApplicationLogoUri \n void setConfidential \n List<String> getRedirectUris \n void setApplicationWebUri \n void setClientIpAddress \n String getApplicationLogoUri \n void setClientSecret \n void setAllowedGrantTypes \n boolean isConfidential \n String getClientSecret \n void setApplicationName \n Map<String,String> getProperties \n void setRedirectUris \n List<String> getRegisteredAudiences \n void setRegisteredAudiences \n List<String> getApplicationCertificates \n void setClientId", "output": ""}, {"instruction": "Generate java code\ndeletes a directory and all of its contents . ", "input": " Logger LOG \n\n void act \n void traverseDir \n Collection<SourceUnit> readAllFiles \n File createTempDir \n Collection<String> readFileNames", "output": ""}, {"instruction": "Generate java code\nreturns the operation string . @return the operation string . ", "input": " Pattern FORMAT \n String[] packages \n String operation \n String[] classes \n\n QualifiedName makeOuterClassOf \n boolean isClass \n QualifiedName makeOperationOf \n QualifiedName makeOperationOf \n QualifiedName makeOperationOf \n QualifiedName parseName \n String getOperationName \n boolean isOperation \n QualifiedName makeNestedClassOf \n int hashCode \n boolean equals \n String[] getPackages \n String toString \n String[] getClasses \n QualifiedName makeClassOf", "output": ""}, {"instruction": "Generate java code\nargument will be declared valid . ", "input": " int TYPE_STRING \n boolean valueBoolean \n int TYPE_DOUBLE_UNSIGNED \n int TYPE_INTEGER_UNSIGNED \n boolean valid \n int TYPE_RADIO \n int TYPE_DOUBLE_SIGNED \n String description \n int type \n boolean[] valueCheck \n long serialVersionUID \n int TYPE_CHECK \n String invalidationMessage \n String valueString \n String[] options \n double valueDouble \n int valueInteger \n int TYPE_INTEGER_SIGNED \n int TYPE_BOOLEAN \n\n boolean isValid \n void setInvalidationMessage \n Double getDouble \n String getDefault \n Integer getInteger \n void setDescription \n String getString \n void invalidate \n boolean isInvalid \n String getDescription \n Integer getSelected \n int getType \n void setValue \n void setValue \n void setValue \n void setValue \n void setValue \n String getInvalidationMessage \n void setOptions \n Boolean getBoolean \n String[] getOptions \n boolean[] getChecked", "output": ""}, {"instruction": "Generate java code\nejecuta una ronda . ", "input": " AtomicLong rondas \n List<? extends Piloto> pilotos \n AtomicLong timeout \n List<Observador> observadores \n Partida partida \n Semaphore semaforo \n\n void rondaTerminada \n void exception \n void agregarObservador \n void notificarObservadoresException \n void run \n void setPartida \n void finalizacion \n void runTurno \n void setPilotos \n void setTimeout \n long getRondas \n void notificarObservadoresRondaTerminada \n Partida getPartida \n List<Observador> getObservadores \n void notificarObservadoresFinalizacion \n long getTimeout \n List<? extends Piloto> getPilotos \n Semaphore getSemaforo", "output": ""}, {"instruction": "Generate java code\nreturn the path originally requested by the client . ", "input": " int status \n int INFINITY \n HttpServletRequest request \n URI base \n HttpServletResponse response \n\n URI lookup \n int getDepth \n InputStream read \n URI getDestination \n String getMethod \n int getStatus \n boolean hasRequestBody \n void setStatus \n void setHeader \n boolean getOverwrite \n String getOriginalPath \n void setContentType \n OutputStream write \n PrintWriter write \n Date getIfModifiedSince", "output": ""}, {"instruction": "Generate java code\ntests if output of idutils #createfileid long is valid . ", "input": " PlaceHolder placeHolder \n\n void getRandomNonNegativeLong \n void createRpcId", "output": ""}, {"instruction": "Generate java code\ncreates a copied list of the property descriptors and returns it . ", "input": " List<PropertyDescriptor<?>> propertyDescriptors \n Map<PropertyDescriptor<?>,Object> propertyValuesByDescriptor \n\n Map<PropertyDescriptor<?>,Object> copyPropertyValues \n boolean usesDefaultValues \n String getName \n PropertyDescriptor<?> getPropertyDescriptor \n T getProperty \n void definePropertyDescriptor \n List<PropertyDescriptor<?>> getPropertyDescriptors \n String dysfunctionReason \n boolean hasDescriptor \n void useDefaultValueFor \n Set<PropertyDescriptor<?>> ignoredProperties \n void setProperty \n void checkValidPropertyDescriptor \n Map<PropertyDescriptor<?>,Object> getPropertiesByPropertyDescriptor", "output": ""}, {"instruction": "Generate java code\nconvert the reader into an inputstream . note : this uses the default encoding . ", "input": " Reader reader \n String dataSourceName \n\n String getDataSourceName \n String getNiceFileName \n String toString \n void setDataSourceName", "output": ""}, {"instruction": "Generate java code\nsets the failed attrib . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n void setActValue \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n void setSrcFileName \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n BigDecimal getExpDataSetId \n String getErrorMsg \n String getActValue \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n BigDecimal getExpDataUnitId \n Timestamp getCreateTimeStamp \n String getFailedAttrib \n void setExpDataSetId \n void setDataSetId \n void setExpDataUnitId", "output": ""}, {"instruction": "Generate java code\nregister a profile in the profilemanager . ", "input": " ProfileManager manager \n\n ProfileManager getManager \n void notInitialized \n boolean isInitiated \n void reset \n void setManager \n void remove", "output": ""}, {"instruction": "Generate java code\ndetermines whether or not the bridge method is the bridge for thesupplied candidate method . ", "input": " PlaceHolder placeHolder \n\n Method searchCandidates \n boolean isVisibilityBridgeMethodPair \n Method searchForMatch \n boolean isBridgedCandidateFor \n Method findBridgedMethod \n Method findGenericDeclaration \n boolean isResolvedTypeMatch", "output": ""}, {"instruction": "Generate java code\ndraw this ball at its current position onto the canvas . ", "input": " int xPosition \n boolean dirArriba \n Canvas canvas \n int ySpeed \n int ballDegradation \n Color color \n int diameter \n boolean dirIzquierda \n int yPosition \n int groundPosition \n int GRAVITY \n Ellipse2D.Double circle \n\n void erase \n void move \n int getXPosition \n int getYPosition", "output": ""}, {"instruction": "Generate java code\nresolve a variable name . used by the el evaluator implemenation . ", "input": " Map<String,Method> functions \n ThreadLocal<ELEvaluator> current \n Context context \n ExpressionEvaluator evaluator \n Map<String,Object> vars \n\n void setVariables \n Method resolveFunction \n void addFunction \n void setVariable \n void setVariable \n ELEvaluator getCurrent \n Object getVariable \n Object getVariable \n Context getContext \n T evaluate", "output": ""}, {"instruction": "Generate java code\nthis test does n't work the way you might expect . if you take the uri.create `` hdfs : / / localhost :1234 / foo/bar/baz ? please = dont & show = up '' . getpath it will return / foo/bar/baz . if you go through hadoop 's path using path #path string then hadoop injects the query params into the path , so when you call touri it gives a different response . ", "input": " PlaceHolder placeHolder \n\n void testGetPathWithoutSchemaFromHDFSURI \n void testGetPathWithoutSchema \n void testGetPathWithoutSchemaThatContainsSchema", "output": ""}, {"instruction": "Generate java code\nreturn the horizontal position of this ball ", "input": " int xPosition \n Canvas canvas \n int ySpeed \n int ballDegradation \n Color color \n int diameter \n int yPosition \n int groundPosition \n int GRAVITY \n Ellipse2D.Double circle \n\n void erase \n void move \n void draw \n int getYPosition", "output": ""}, {"instruction": "Generate java code\nthis method is used to get a float value in a specified unit . ", "input": " String _cssText \n RGBColor rgbColorValue \n float floatValue \n Rect rectValue \n Counter counter \n short primitiveType \n\n void setStringValue \n short getCssValueType \n String getStringValue \n FSCssValue getNewIdentValue \n String getCssText \n Rect getRectValue \n void setFloatValue \n short getPrimitiveType \n RGBColor getRGBColorValue \n String toString \n Counter getCounterValue \n void setCssText", "output": ""}, {"instruction": "Generate java code\nmarks a block to move into this dir view , which is used by the evictor . ", "input": " BlockMetadataManagerView mManagerView \n StorageDir mDir \n long mBlocksToMoveOutSize \n long mBlocksToMoveInSize \n StorageTierView mTierView \n Set<Long> mBlocksToMoveIn \n Set<Long> mBlocksToMoveOut \n\n long getEvitableBytes \n StorageTierView getParentTierView \n boolean isMarkedToMoveOut \n TempBlockMeta createTempBlockMeta \n void clearBlockMarks \n int getDirViewIndex \n long getCommittedBytes \n List<BlockMeta> getEvictableBlocks \n long getCapacityBytes \n long getAvailableBytes \n BlockStoreLocation toBlockStoreLocation \n void markBlockMoveOut", "output": ""}, {"instruction": "Generate java code\nget a new instance of a wsdlfactory . this method follows almost the same basic sequence of steps that jaxp follows to determine the fully-qualified class name of the class which implements wsdlfactory . the steps in order are : check the javax.wsdl.factory.wsdlfactory system property . check the lib/wsdl . properties file in the jre directory . the key will have the same name as the above system property . use the default value . once an instance of a wsdlfactory is obtained , invoke newdefinition , newwsdlreader , or newwsdlwriter , to create the desired instances . ", "input": " String PROPERTY_NAME \n String DEFAULT_FACTORY_IMPL_NAME \n String PROPERTY_FILE_NAME \n String fullPropertyFileName \n\n String findFactoryImplName \n String getFullPropertyFileName \n WSDLWriter newWSDLWriter \n WSDLReader newWSDLReader \n Definition newDefinition \n ExtensionRegistry newPopulatedExtensionRegistry", "output": ""}, {"instruction": "Generate java code\nget groups which i was mentioned ", "input": " List<String> toAtUserList \n Set<String> atMeGroupList \n EaseAtMessageHelper instance \n\n boolean isAtMeMsg \n void cleanToAtUserList \n boolean hasAtMeMsg \n boolean containsAtAll \n EaseAtMessageHelper get \n void addAtUser \n boolean containsAtUsername \n void parseMessages \n void removeAtMeGroup \n JSONArray atListToJsonArray \n List<String> getAtMessageUsernames", "output": ""}, {"instruction": "Generate java code\nreturns the description of the property with the provided name on the provided object 's interface . ", "input": " Object[] NO_ARGUMENTS \n\n PropertyDescriptor[] propertyDescriptorsFor", "output": ""}, {"instruction": "Generate java code\nset the minute of hour . ", "input": " int offsetHours \n int offsetMinutes \n double seconds \n int minutes \n int hour \n String TIME_PATTERN \n\n int getOffsetHours \n Date toDate \n String toISO8601 \n void setHour \n long getMilliseconds \n void setOffsetMinutes \n int getMinutes \n double getSeconds \n int hashCode \n void setSeconds \n boolean equals \n int getOffsetMinutes \n int getHour \n String toString \n void setOffsetHours \n void setTime", "output": ""}, {"instruction": "Generate java code\nreturns the value as a plain string denominated in btc . the result is unformatted with no trailing zeroes . for instance , a value of 150000 satoshis gives an output string of `` 0.0015 '' btc ", "input": " Coin MICROCOIN \n int SMALLEST_UNIT_EXPONENT \n long COIN_VALUE \n Coin SATOSHI \n MonetaryFormat FRIENDLY_FORMAT \n Coin COIN \n Coin CENT \n Coin FIFTY_COINS \n Coin NEGATIVE_SATOSHI \n Coin MILLICOIN \n long MAX_SATOSHIS \n Coin ZERO \n long value \n MonetaryFormat PLAIN_FORMAT \n\n Coin add \n int signum \n boolean isNegative \n boolean isLessThan \n Coin valueOf \n Coin valueOf \n Coin subtract \n boolean isGreaterThan \n boolean isPositive \n int smallestUnitExponent \n int compareTo \n long longValue \n Coin parseCoin \n String toFriendlyString \n long getValue \n Coin shiftLeft \n Coin shiftRight \n Coin[] divideAndRemainder \n int hashCode \n Coin negate \n boolean equals \n boolean isZero \n Coin divide \n long divide \n String toString \n Coin multiply", "output": ""}, {"instruction": "Generate java code\nadds a panel on the stack . ", "input": " UIStack uiStack \n\n JPanel getCurrentPanel \n JPanel restart \n void show \n JPanel back \n JPanel back", "output": ""}, {"instruction": "Generate java code\nabsent any annotations of xml mapping , the value of the nillable attribute on elements . ", "input": " boolean defaultNillable \n boolean defaultExtensibleElements \n boolean qualifyAttributes \n int defaultMinOccurs \n boolean defaultExtensibleAttributes \n boolean qualifyElements \n\n void setDefaultExtensibleElements \n void setQualifyAttributes \n int getDefaultMinOccurs \n void setDefaultExtensibleAttributes \n boolean isDefaultExtensibleAttributes \n void setQualifyElements \n void setDefaultMinOccurs \n boolean isQualifyAttributes \n boolean isQualifyElements \n boolean isDefaultExtensibleElements \n void setDefaultNillable", "output": ""}, {"instruction": "Generate java code\nobtain a list of all errors in the given instance . the list contains org.xml.sax.saxparseexception saxparseexception s. ", "input": " ArrayList<Source> sources \n JAXPValidator validator \n\n boolean isSchemaValid \n void addSchemaSource \n boolean isInstanceValid \n List<SAXParseException> problemToExceptionList \n List<SAXParseException> getSchemaErrors", "output": ""}, {"instruction": "Generate java code\nregisters a listener that is notified of each comparison with outcome other than comparisonresult #equal . ", "input": " DifferenceEvaluator differenceEvaluator \n ComparisonResult[] comparisonResultsToCheck \n ComparisonResult[] CHECK_FOR_IDENTICAL \n Source controlSource \n ComparisonResult[] CHECK_FOR_SIMILAR \n Map<String,String> namespaceContext \n Predicate<Node> nodeFilter \n List<ComparisonListener> differenceListeners \n Predicate<Attr> attributeFilter \n boolean ignoreWhitespace \n List<ComparisonListener> comparisonListeners \n boolean ignoreComments \n boolean normalizeWhitespace \n NodeMatcher nodeMatcher \n ComparisonController comparisonController \n Source testSource \n List<Difference> results \n EnumSet<ComparisonResult> comparisonResultsToCheck \n\n DiffBuilder checkForIdentical \n DiffBuilder withNamespaceContext \n DiffBuilder compare \n DiffBuilder withNodeFilter \n void comparisonPerformed \n DiffBuilder withNodeMatcher \n List<Difference> getDifferences \n DiffBuilder withComparisonController \n DiffBuilder ignoreWhitespace \n DiffBuilder withDifferenceEvaluator \n DiffBuilder ignoreComments \n DiffBuilder checkForSimilar \n DiffBuilder withTest \n DiffBuilder normalizeWhitespace \n Diff build \n Source getSource \n DiffBuilder withComparisonListeners \n Source wrap \n DiffBuilder withAttributeFilter", "output": ""}, {"instruction": "Generate java code\nsets the conduit selector ", "input": " ConduitSelector conduitSelector \n Map<String,Object> requestContext \n Bus bus \n List<Interceptor<? extends Message>> inInterceptors \n long synchronousTimeout \n List<Interceptor<? extends Message>> outInterceptors \n Logger LOG \n List<Interceptor<? extends Message>> inFault \n Map<String,Object> responseContext \n List<Interceptor<? extends Message>> outFault \n\n Bus getBus \n List<Interceptor<? extends Message>> getOutFaultInterceptors \n Endpoint getEndpoint \n long getSynchronousTimeout \n void setOutInterceptors \n List<Interceptor<? extends Message>> getInInterceptors \n Map<String,Object> getResponseContext \n boolean isResponseExpectedForOneway \n void setOutFaultInterceptors \n HTTPConduit getHttpConduit \n Conduit getConduit \n void setSynchronousTimeout \n ConduitSelector getConduitSelector \n List<Interceptor<? extends Message>> getInFaultInterceptors \n List<Interceptor<? extends Message>> getOutInterceptors \n void setInInterceptors \n Map<String,Object> getRequestContext \n void setInFaultInterceptors \n void setBus \n void prepareConduitSelector", "output": ""}, {"instruction": "Generate java code\ndetermine the fault mode for the underlying fault message for use on server side only . ", "input": " PlaceHolder placeHolder \n\n boolean isDOMPresent \n boolean isRequestor \n boolean isTrue \n boolean isOutbound \n boolean isEmptyPartialResponse \n boolean getContextualBoolean \n boolean isFault \n boolean isPartialResponse \n Object getContextualProperty", "output": ""}, {"instruction": "Generate java code\nhide keyboard ", "input": " PlaceHolder placeHolder \n\n void showSoftInput", "output": ""}, {"instruction": "Generate java code\ngets the run id . ", "input": " Timestamp lastModifiedTimeStamp \n Timestamp fetcherStartTimestamp \n Timestamp createTimeStamp \n long serialVersionUID \n BigDecimal batchId \n String errorMsg \n OutcomeType outcomeType \n String createdBy \n BigDecimal feedId \n long testId \n BigDecimal runId \n Timestamp fetcherEndTimeStamp \n List<RegPCLTestResultDetailsEntity> regPclTestResultDetails \n RunStatusType runStatus \n\n void setLastModifiedTimeStamp \n void setFeedId \n void setFetcherStartTimestamp \n OutcomeType getOutcomeType \n void updateLastModifiedTimeStamp \n void updateCreateTimeStamp \n void setBatchId \n List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails \n void setTestId \n long getTestId \n RegPCLTestResultDetailsEntity removeRegPclTestResultDetail \n void setRegPclTestResultDetails \n void setErrorMsg \n RunStatusType getRunStatus \n RegPCLTestResultDetailsEntity addRegPclTestResultDetail \n String getErrorMsg \n void setRunStatus \n Timestamp getFetcherEndTimeStamp \n Timestamp getLastModifiedTimeStamp \n BigDecimal getFeedId \n void setRunId \n Timestamp getFetcherStartTimestamp \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n Timestamp getCreateTimeStamp \n BigDecimal getBatchId \n void setOutcomeType \n String getCreatedBy", "output": ""}, {"instruction": "Generate java code\nget the tenant domain ", "input": " boolean passiveAuth \n Map<String,String[]> requestQueryParams \n long serialVersionUID \n String commonAuthCallerPath \n boolean forceAuth \n String type \n Map<String,String> requestHeaders \n String tenantDomain \n boolean isPost \n String relyingParty \n\n void setRelyingParty \n void addHeader \n String getRelyingParty \n boolean getForceAuth \n String getCommonAuthCallerPath \n Map<String,String[]> getRequestQueryParams \n void addRequestQueryParam \n void setPost \n void setType \n boolean isPost \n void setTenantDomain \n void appendRequestQueryParams \n boolean getPassiveAuth \n Map<String,String> getRequestHeaders \n String[] getRequestQueryParam \n String getType \n void setPassiveAuth \n void setCommonAuthCallerPath \n void setForceAuth \n void setRequestQueryParams", "output": ""}, {"instruction": "Generate java code\nnot supported . this method is used to get the rect value . ", "input": " String _cssText \n RGBColor rgbColorValue \n float floatValue \n Rect rectValue \n Counter counter \n short primitiveType \n\n void setStringValue \n short getCssValueType \n String getStringValue \n FSCssValue getNewIdentValue \n String getCssText \n void setFloatValue \n float getFloatValue \n short getPrimitiveType \n RGBColor getRGBColorValue \n String toString \n Counter getCounterValue \n void setCssText", "output": ""}, {"instruction": "Generate java code\nreturn playlists as a collection ", "input": " String appPath \n Keys keys \n Machine machine \n String logPath \n Options options \n HashMap<Integer,Playlist> playlists \n DefaultListModel genreListModel \n Logger logger \n DbConnJaMuz db \n ArrayList<String> tags \n\n void logConfig \n boolean getCurrentMachine \n boolean createLog \n Proxy getProxy \n void readTags \n List<Playlist> getPlaylistsVisible \n void readGenres \n boolean setProxy \n boolean connectDatabase \n Playlist getPlaylist \n boolean readPlaylists \n Logger getLogger \n ArrayList<String> getTags \n boolean configure \n Options getKeys \n File getFile \n DbConnJaMuz getDb \n Machine getMachine \n DefaultListModel getGenreListModel \n DefaultHttpClient getHttpClient \n String getLogPath \n Options getOptions \n List<String> getGenres", "output": ""}, {"instruction": "Generate java code\ninitializes our documents object and underlying database connection . ", "input": " Connection con \n PreparedStatement findByFileNameSQL \n PreparedStatement findByIDSQL \n PreparedStatement deleteItemSQL \n PreparedStatement newItemSQL \n PreparedStatement listSQL \n PreparedStatement updateItemSQL \n\n Document newItem \n void deleteItem \n void deleteItem \n Document findByID \n Document fromResultSet \n Document findByFileName \n boolean exists \n boolean exists \n void updateItem \n void createDb \n List<Document> list", "output": ""}, {"instruction": "Generate java code\nsets the value of the paramname property . ", "input": " List<DescriptionType> description \n CString paramName \n java.lang.String id \n XsdStringType paramValue \n\n CString getParamName \n XsdStringType getParamValue \n void setParamValue \n void setId \n java.lang.String getId \n List<DescriptionType> getDescription", "output": ""}, {"instruction": "Generate java code\nreturns true if the given uri was visited , meaning it was requested at some point since initialization . ", "input": " ImageResourceLoader _imageResourceLoader \n UriResolver _uriResolver \n\n void onLayoutException \n void onRenderException \n void shrinkImageCache \n ImageResource getImageResource \n String resolveURI \n void setImageResourceLoader \n byte[] getBinaryResource \n void documentStarted \n String getBaseURL \n CSSResource getCSSResource \n void clearImageCache \n XMLResource getXMLResource \n void setBaseURL \n InputStream resolveAndOpenStream \n void setRepaintListener \n void documentLoaded", "output": ""}, {"instruction": "Generate java code\nretrieve the key in the servletcontext where the instance ofthe davrepository associated with a named davservlet can be found . ", "input": " DAVProcessor processor \n ServletContext context \n DAVLogger logger \n DAVRepository repository \n ServletConfig config \n\n void init \n ServletConfig getServletConfig \n ServletContext getServletContext \n void service \n void destroy \n String getServletInfo \n void notify", "output": ""}, {"instruction": "Generate java code\nwrites any object to the output stream . ", "input": " Hessian2Output _out \n\n void flush \n Hessian2Output getHessian2Output \n void setCloseStreamOnClose \n boolean isCloseStreamOnClose \n void close", "output": ""}, {"instruction": "Generate java code\na file should be added only once - even if it was found twice , because of a sym link . ", "input": " CPD cpd \n String BASE_TEST_RESOURCE_PATH \n int files \n int expectedFilesCount \n boolean canTestSymLinks \n\n void addedFile \n void testFileAddedWithRelativePath \n void prepareSymLinks \n void testFileSectionWithBrokenSymlinks \n void phaseUpdate \n void setup \n void verify", "output": ""}, {"instruction": "Generate java code\ntests the blockcontaineridgenerator #setnextcontainerid long method . ", "input": " long TEST_ID \n BlockContainerIdGenerator mGenerator \n\n void getNewContainerId \n void before", "output": ""}, {"instruction": "Generate java code\ntests ranknupdate with various sized input matrices ", "input": " int N \n Random rand \n\n void symmRankNMinus_U \n void checkSymmRankNMinus_U \n void symmRankNMinus_L \n void checkRankNUpdate \n void checkSymmRankNMinus_L", "output": ""}, {"instruction": "Generate java code\ntest method for notificationcontroller #registerusersession serversession , servermessage . verifies that method throws nullpointerexception when serversession id is null . ", "input": " ServerMessage mockServerMessage \n ServerSession mockServerSession \n HashMap<String,Object> testEventProperties \n String MOCK_SESSION_ID \n NotificationController notificationController \n\n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication \n void testDeregisterUserSessionWithNullServerSessonThrowsException \n void testDeregisterUserSessionWithNullServerSessionIdThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle \n void testGetServerSessionByUserId \n void tearDown \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession \n void testDeregisterUserSessionRemovesUserFromKnownClients \n void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage \n void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication \n void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId \n void testRegisterUserSessionWithNullServerSessionThrowsException \n void testHandleEventThrowsIllegalArgumentExceptionOnNullUser \n void testRegisterUserSession \n void setUp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp \n void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "output": ""}, {"instruction": "Generate java code\nreturns the size image needed to render the document without anything going off the side . could be different than the dimensions passed into layout because of text that could n't break or a table that 's set to be too big . ", "input": " Dimension dim \n XHTMLPanel panel \n\n void layout \n BufferedImage renderToImageAutoSize \n BufferedImage renderToImageAutoSize \n void setDocument \n void setDocument \n void setSharedContext \n XHTMLPanel getPanel \n SharedContext getSharedContext \n void render \n BufferedImage renderToImage \n BufferedImage renderToImage", "output": ""}, {"instruction": "Generate java code\ninner matrix that stores the decomposition ", "input": " DenseMatrix64F QR \n int numRows \n int minLength \n double v[] \n double tau \n boolean error \n int numCols \n double gammas[] \n double gamma \n\n void applyTranQ \n void setExpectedMaxSize \n void householder \n double[] getGammas \n void applyQ \n boolean decompose \n DenseMatrix64F getQ \n DenseMatrix64F getR \n boolean inputModified \n void updateA", "output": ""}, {"instruction": "Generate java code\nmethod to find a file , first by finding it as a file either by the absolute or relative path , then as a url , and then finally seeing if it is on the classpath . caller is responsible for closing the inputstream . ", "input": " int TIMEOUT \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nreturns the quantity associated with a line item . ", "input": " OrderLineType lineItem \n java.util.Iterator iter \n\n String getItemDescription \n Object next \n java.util.Currency getItemPriceCurrency \n String getItemPartNumber \n double getItemPrice \n BasePriceType getTheItemPrice \n boolean hasNext \n void remove", "output": ""}, {"instruction": "Generate java code\nsets the cytoband of a gistic ", "input": " boolean AMPLIFIED \n boolean DELETED \n int gisticID \n int peakStart \n ArrayList<CanonicalGene> genes_in_ROI \n String cytoband \n boolean amp \n int NO_SUCH_GISTIC \n int cancerStudyId \n int chromosome \n int peakEnd \n double qValue \n\n void setPeakEnd \n void setAmp \n String getCytoband \n void setPeakStart \n int getPeakStart \n void setqValue \n boolean getAmp \n int getInternalId \n void setGenes_in_ROI \n int peakSize \n int getCancerStudyId \n int getChromosome \n int getPeakEnd \n void addGene \n void setInternalId \n void setCancerStudyId \n double getqValue \n String toString \n ArrayList<CanonicalGene> getGenes_in_ROI \n void setChromosome", "output": ""}, {"instruction": "Generate java code\ncreate an instance of validateaccess ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n RoleList createRoleList \n CheckServiceAccessRequest createCheckServiceAccessRequest \n JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n PasswordCredentials createPasswordCredentials \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n CertificateInfo createCertificateInfo \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n RegistrationRequest createRegistrationRequest \n JAXBElement<RegistrationRequest> createRegistrationRequest \n Access createAccess \n JAXBElement<Access> createAccess \n ProjectValidation createProjectValidation \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\nget the return format requested ", "input": " PlaceHolder placeHolder \n\n HashSet<String> getCancerStudyIDs \n String getCaseSetId \n ArrayList<String> getSampleIds \n String getCancerStudyId \n ArrayList<String> getGeneticProfileId", "output": ""}, {"instruction": "Generate java code\nsave a dishcollection . ", "input": " DishCollectionRepository dishCollectionRepository \n Logger log \n\n DishCollection findOneByName \n DishCollection findOne \n Page<DishCollection> findAll \n void delete", "output": ""}, {"instruction": "Generate java code\ncalculates the hash of the hash of the contents . this is a standard operation in bitcoin . ", "input": " Sha256Hash ZERO_HASH \n byte[] bytes \n\n Sha256Hash hashFileContents \n int hashCode \n boolean equals \n Sha256Hash create \n BigInteger toBigInteger \n String toString \n Sha256Hash duplicate \n int compareTo \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\ndestroy the workflow application service . ", "input": " String HADOOP_NN_KERBEROS_NAME \n String APP_LIB_PATH_LIST \n String HADOOP_USER \n String CONF_PREFIX \n String SYSTEM_LIB_PATH \n String HADOOP_UGI \n String HADOOP_JT_KERBEROS_NAME \n Path systemLibPath \n\n void init \n Class<? extends Service> getInterface \n XConfiguration createProtoActionConf \n List<String> getLibFiles \n String readDefinition \n WorkflowApp parseDef \n WorkflowApp parseDef \n boolean accept", "output": ""}, {"instruction": "Generate java code\nget current date and time formatted as iso 8601 string . ", "input": " String TIMEZONE_MODE \n String eventTimezone \n\n String get12HourTime \n String getTimeZoneDateString \n Date getDateObject \n String get24HourTime \n TimeZone getEventTimezone \n String dateFromCalendar \n Date getTimeZoneDate \n String fromCalendar \n void setEventTimezone", "output": ""}, {"instruction": "Generate java code\ncreate a diffbuilder from all kind of types supported by input #from object . ", "input": " DifferenceEvaluator differenceEvaluator \n ComparisonResult[] comparisonResultsToCheck \n ComparisonResult[] CHECK_FOR_IDENTICAL \n Source controlSource \n ComparisonResult[] CHECK_FOR_SIMILAR \n Map<String,String> namespaceContext \n Predicate<Node> nodeFilter \n List<ComparisonListener> differenceListeners \n Predicate<Attr> attributeFilter \n boolean ignoreWhitespace \n List<ComparisonListener> comparisonListeners \n boolean ignoreComments \n boolean normalizeWhitespace \n NodeMatcher nodeMatcher \n ComparisonController comparisonController \n Source testSource \n List<Difference> results \n EnumSet<ComparisonResult> comparisonResultsToCheck \n\n DiffBuilder checkForIdentical \n DiffBuilder withNamespaceContext \n DiffBuilder withNodeFilter \n void comparisonPerformed \n DiffBuilder withNodeMatcher \n List<Difference> getDifferences \n DiffBuilder withComparisonController \n DiffBuilder ignoreWhitespace \n DiffBuilder withDifferenceEvaluator \n DiffBuilder ignoreComments \n DiffBuilder withDifferenceListeners \n DiffBuilder checkForSimilar \n DiffBuilder withTest \n DiffBuilder normalizeWhitespace \n Diff build \n Source getSource \n DiffBuilder withComparisonListeners \n Source wrap \n DiffBuilder withAttributeFilter", "output": ""}, {"instruction": "Generate java code\nputs the specified name/value pair in the specified json object . ", "input": " Logger LOG \n\n int extractInt \n Collection<InetSocketAddress> getInetAddresses", "output": ""}, {"instruction": "Generate java code\nreturns the orthogonal ` v ' matrix . ", "input": " SingularValueDecomposition<DenseMatrix64F> svd \n DenseMatrix64F mat \n T U \n T V \n T W \n\n T getW \n SingularValueDecomposition getSVD \n double getSingleValue \n int rank \n SimpleMatrix nullSpace \n int nullity \n T getU \n double quality", "output": ""}, {"instruction": "Generate java code\nthe alias associated with this certificate . ", "input": " X509Certificate mCert \n String mAlias \n String mSubjectSecondary \n String mSubjectPrimary \n String mString \n\n String getSubjectPrimary \n X509Certificate getCertificate \n List<String> getSubjectAltNames \n String toString \n int compareTo \n String getSubjectSecondary", "output": ""}, {"instruction": "Generate java code\nlaunches the sip and turn servers . ", "input": " Logger LOG \n TurnServer m_turnServer \n\n void stop \n void start", "output": ""}, {"instruction": "Generate java code\nsets the value of the projectsecret property . ", "input": " byte[] projectSecret \n String csr \n String project \n\n void setCsr \n String getCsr \n byte[] getProjectSecret \n void setProject \n String getProject", "output": ""}, {"instruction": "Generate java code\nformat date . ", "input": " PlaceHolder placeHolder \n\n FetcherTesterExecCallable getExecutorCallable \n FetcherTesterWaitCallable getWaiterCallable", "output": ""}, {"instruction": "Generate java code\ncounts the number of times the specified eigenvalue appears . ", "input": " PlaceHolder placeHolder \n\n void hasOffDiagonal \n void shouldNotChange \n void zeroDiagonalNotZeroOff \n void multipleEigenvalues", "output": ""}, {"instruction": "Generate java code\nfactory that just takes a service . used in tools and unit tests . ", "input": " Map<String,String> nsPrefixMap \n\n String getJavascriptName \n String getJavascriptName \n String transformURI \n String defineFallbackPrefix \n void initialize \n JavascriptOptionsFeature getOptions", "output": ""}, {"instruction": "Generate java code\nreturns the customized configuration for the user . ", "input": " IConfigurationFactory SINGLETON \n ConfigurationHandler handler \n\n IConfigurationFactory getInstance", "output": ""}, {"instruction": "Generate java code\nreturns the proposal identified by the supplied token . ", "input": " Map<String,FederationModel> federationPullResults \n INotificationManager notificationManager \n IStoredSettings settings \n List<FederationModel> federationRegistrations \n IRuntimeManager runtimeManager \n Logger logger \n IRepositoryManager repositoryManager \n\n boolean deletePendingFederationProposal \n UserModel authenticate \n FederationModel getFederationRegistration \n UserModel getFederationUser \n boolean acknowledgeFederationStatus \n List<FederationProposal> getPendingFederationProposals \n List<FederationModel> getFederationResultRegistrations \n FederationManager start \n boolean canFederate \n Map<String,RepositoryModel> getRepositories \n FederationManager stop \n List<FederationSet> getFederationSets \n File getProposalsFolder \n boolean submitFederationProposal \n String getFederationToken \n String getFederationToken \n FederationProposal createFederationProposal \n List<FederationModel> getFederationRegistrations \n List<String> getFederationTokens \n boolean validateFederationRequest", "output": ""}, {"instruction": "Generate java code\nnot supported , class is immutable . sets the string representation of the current value . ", "input": " String _cssText \n RGBColor rgbColorValue \n float floatValue \n Rect rectValue \n Counter counter \n short primitiveType \n\n void setStringValue \n short getCssValueType \n String getStringValue \n FSCssValue getNewIdentValue \n String getCssText \n Rect getRectValue \n void setFloatValue \n float getFloatValue \n short getPrimitiveType \n RGBColor getRGBColorValue \n String toString \n Counter getCounterValue", "output": ""}, {"instruction": "Generate java code\nmoves to the next log block in reverse order , and positions it after the last record in that block . ", "input": " Block blk \n int currentrec \n Page pg \n\n BasicLogRecord next \n void add \n void set \n BasicLogRecord previous \n boolean hasPrevious \n boolean hasNext \n void moveToPreviousBlock \n int nextIndex \n void remove \n int previousIndex", "output": ""}, {"instruction": "Generate java code\nlooks up the target object by ejb local reference . ", "input": " long serialVersionUID \n\n void ejbCreate \n void setMessageDrivenContext \n void ejbRemove", "output": ""}, {"instruction": "Generate java code\nget the list of accepted encryption algorithms . a request can contain a wst : encryptionalgorithm uri to use to encrypt an issued token . the algorithm specified must be contained in this list . the default algorithms are 3-des , aes-128 , aes-128 gcm , aes-192 , aes-192 gcm , aes-256 and aes-256 gcm . ", "input": " String keyWrapAlgorithm \n int keyIdentifierType \n List<String> acceptedKeyWrapAlgorithms \n String encryptionName \n List<String> acceptedEncryptionAlgorithms \n String encryptionAlgorithm \n\n void setEncryptionName \n String getEncryptionAlgorithm \n void setAcceptedKeyWrapAlgorithms \n List<String> getAcceptedKeyWrapAlgorithms \n String getKeyWrapAlgorithm \n void setKeyWrapAlgorithm \n int getKeyIdentifierType \n void setAcceptedEncryptionAlgorithms \n void setKeyIdentifierType \n void setEncryptionAlgorithm \n String getEncryptionName", "output": ""}, {"instruction": "Generate java code\nimplements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . ", "input": " IEnvironments environments \n HashMap<String,RestConnectionFactory> factories \n AutoSIMRestConfig config \n\n void start", "output": ""}, {"instruction": "Generate java code\ncreate a new table with the specified headers and row data . ", "input": " int emptyWidth \n String[] headers \n String EMPTY \n Object[][] data \n Borders borders \n int columns \n int[] columnWidths \n int bitmask \n\n String pad \n boolean isset \n boolean columns \n void printDivider \n boolean header \n String toString \n void printData \n boolean body \n boolean rows", "output": ""}, {"instruction": "Generate java code\nthe actual target . ", "input": " String xpath \n Detail test \n Detail control \n ComparisonType type \n Object value \n Node target \n\n Object getValue \n Detail getTestDetails \n ComparisonType getType \n Detail getControlDetails \n String getXPath \n String toString \n String toString", "output": ""}, {"instruction": "Generate java code\nthe component we are decorating . ", "input": " ActivityGraphsHelper impl \n\n void setParameters \n void addInState \n void setSynch \n Object findStateByName \n boolean isAddingActivityGraphAllowed \n void setInStates \n Object findClassifierByName \n void addContent \n void removeContent \n void setContents \n void addParameter \n void removeParameter", "output": ""}, {"instruction": "Generate java code\ntests the webutils #convertmstoclocktime long method with one second . ", "input": " PlaceHolder placeHolder \n\n void convertToClockTimeWithOneMinute30Seconds \n void convertToClockTimeWithOneDay4Hours10Minutes45SecondsWithStopwatch \n void convertToClockTimeWithNegativeValue \n void convertToClockTimeWithShortValue \n void convertToClockTimeWithOneDay4Hours10Minutes45Seconds \n void convertToClockTimeWithOneHour10Minutes45Seconds \n void convertToClockTimeWithOneMinute \n void convertToClockTimeWithOneHour \n void convertToClockTimeWithOneDay", "output": ""}, {"instruction": "Generate java code\nreturns a string representation of the enumeration value . ", "input": " VisibilityKindEnum VK_PACKAGE \n java.util.List typeName \n VisibilityKindEnum VK_PRIVATE \n VisibilityKindEnum VK_PUBLIC \n java.lang.String literalName \n VisibilityKindEnum VK_PROTECTED \n\n java.lang.Object readResolve \n VisibilityKind forName \n java.util.List refTypeName \n int hashCode \n boolean equals", "output": ""}, {"instruction": "Generate java code\nget the downlinks of this node . ", "input": " int edgeOffset \n FigNode figure \n float UPLINK_FACTOR \n List<ClassdiagramNode> uplinks \n int rank \n List<ClassdiagramNode> downlinks \n int NORANK \n int column \n int placementHint \n float weight \n int NOCOLUMN \n int NOWEIGHT \n\n Vector<ClassdiagramNode> getUplinks \n Point getLocation \n boolean isComment \n List<ClassdiagramNode> getUpNodes \n float getWeight \n FigNode getFigure \n Vector<ClassdiagramNode> getDownlinks \n int compareTo \n void setColumn \n void addDownlink \n void setLocation \n void setEdgeOffset \n boolean isStandalone \n int getColumn \n float getSubtreeWeight \n float calculateWeight \n void setRank \n void addRank \n int getTypeOrderNumer \n int getEdgeOffset \n int getRank \n void setWeight \n boolean isPackage \n void addUplink \n int getLevel \n Dimension getSize \n void setPlacementHint \n int getPlacementHint \n void setFigure", "output": ""}, {"instruction": "Generate java code\nreturn the runtime directory of the oozie instance . the directory is created under tmp and it is always a new directory per services initialization . ", "input": " String OOZIE_HOME_DIR \n String CONF_SYSTEM_ID \n String systemId \n Services SERVICES \n String CONF_SERVICE_CLASSES \n String CONF_SYSTEM_MODE \n Configuration conf \n Map<Class<? extends Service>,Service> services \n String oozieHome \n String CONF_DELETE_RUNTIME_DIR \n String CONF_SERVICE_EXT_CLASSES \n SYSTEM_MODE systemMode \n String runtimeDir \n int MAX_SYSTEM_ID_LEN \n\n void init \n void setService \n String getSystemId \n void setServiceInternal \n Configuration getConf \n void setOozieHome \n SYSTEM_MODE getSystemMode \n void setSystemMode \n T get \n Services get \n void destroy \n String createRuntimeDir \n String getOozieHome", "output": ""}, {"instruction": "Generate java code\nreturns the boolean value for the currentvalue . if the currentvalue can not be interpreted as a boolean , the defaultvalue is returned . ", "input": " boolean spaceDelimited \n String SINCE \n String defaultValue \n boolean caseSensitive \n String SPACE_DELIMITED \n String description \n long serialVersionUID \n String RESTART_REQUIRED \n boolean restartRequired \n String name \n String CASE_SENSITIVE \n String currentValue \n String since \n\n char getChar \n int getInteger \n String getString \n Map<String,String> getMap \n boolean isDefaultValue \n List<String> getStrings \n List<String> getStrings", "output": ""}, {"instruction": "Generate java code\nputs the slider back in its original position , but makes it seem as if it has moved , allowing onprogresschanged to be called ", "input": " PlaceHolder placeHolder \n\n Bitmap StringToBitMap \n void erase \n Bitmap getMorph \n boolean isGood \n Bitmap rescaleImg \n Bitmap rescaleImg \n Intent shareImage \n Bitmap decodeSampledBitmapFromResource \n String BitMapToString \n Bitmap rescaleThumb \n Bitmap rescaleThumb \n boolean hasBackground \n TextView createMessage \n Intent getEmail \n Uri getImageUri \n void switchDims \n int calculateInSampleSize \n boolean hasForeground \n int[] getDims", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time #gethour . ", "input": " Time time \n\n void testDateRoundTrip \n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\nget date from datepicker ", "input": " String SHORT_FORMAT \n String FULL_FORMAT \n String NORMAL_DAY_OF_WEEK_FORMAT \n String NORMAL_FORMAT \n\n Date stringToDate \n String getDateTime \n String getStringTimeFromTime \n String getStringTimeFromTimePicker \n boolean isAfter \n String dateToString \n boolean isBefore", "output": ""}, {"instruction": "Generate java code\nsets the created date . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\ndetermine if one collection of assertions contains another collection of assertion , using the equal method from the assertion interface . ", "input": " org.apache.cxf.transport.Assertor obj \n String INDENT \n\n Assertor createAsserter \n boolean isEmptyPolicyOperator \n void logPolicy \n boolean isEmptyPolicy \n void indent \n org.apache.cxf.transport.Assertor getWrappedAssertor \n boolean canAssert \n void nl \n void assertMessage \n void printPolicyComponent \n void printPolicyComponent \n String typeToString", "output": ""}, {"instruction": "Generate java code\nbegin normal traversal of a subtree rooted at n . this gives the visitor the option of changing internal state or returning a new visitor which will be used to visit the children of n . this method is typically called by the method #enter node , node enter parent , n . if a subclass overrides the method #enter node , node enter parent , n then this methodmay not be called . ", "input": " Lang lang \n\n N visitEdgeNoOverride \n Node leave \n Node leave \n void finish \n void finish \n String toString \n Node override \n Node override \n N visitEdge \n NodeVisitor copy \n Lang lang \n NodeVisitor begin", "output": ""}, {"instruction": "Generate java code\ngets the value of the paramvalue property . ", "input": " List<DescriptionType> description \n CString paramName \n java.lang.String id \n XsdStringType paramValue \n\n CString getParamName \n void setParamName \n void setParamValue \n void setId \n java.lang.String getId \n List<DescriptionType> getDescription", "output": ""}, {"instruction": "Generate java code\nfrom string . ", "input": " PlaceHolder placeHolder \n\n ConfigSetUpDTO configSetUp \n PubFilesOperationResp destFileExists \n ItemList<FeedConfigResponse> runFeeds \n RestCallStatus runFeed \n PubFilesOperationResp execShellCommand \n AppVersionDTO getAppVersion \n PubFilesOperationResp seedFilesSetUp", "output": ""}, {"instruction": "Generate java code\ncall viewconfiguration #getscaledpagingtouchslop . if running on a pre - @android . os.build.version _ codes #froyo device , returns viewconfiguration #getscaledtouchslop . ", "input": " ViewConfigurationVersionImpl IMPL \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nparse a string into a typenode ast node , applying substitutions . ", "input": " ExtensionInfo ext \n int EXPR \n int DECL \n Position pos \n int MEMB \n int STMT \n int TYPE \n int FILE \n\n ClassMember parseMember \n ClassMember parseMember \n QQParser parser \n Stmt parseStmt \n Stmt parseStmt \n ClassDecl parseDecl \n ClassDecl parseDecl \n SourceFile parseFile \n SourceFile parseFile \n Position type_position \n Node parse \n Lexer lexer \n Expr parseExpr \n Expr parseExpr", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmbparser #setsteerto compasspoint . ", "input": " String EXAMPLE \n RMBSentence rmb \n RMBSentence empty \n\n void testGetVelocity \n void testGetCrossTrackError \n void testArrivalStatus \n void testSetDestination \n void testSetBearing \n void testSetOriginId \n void testSetStatus \n void testConstructor \n void testGetBearing \n void testSetBearingWithNegativeValue \n void testSetSteerTo \n void testGetSteerTo \n void testSetVelocity \n void testGetOriginId \n void testSetVelocityWithNegativeValue \n void setUp \n void testGetStatus \n void testSetBearingWithValueGreaterThanAllowed \n void testGetRange \n void testSetRange \n void testGetDestination \n void testSetCrossTrackError", "output": ""}, {"instruction": "Generate java code\nif a handler is connected , call its org.bitcoinj.protocols.channels.paymentchannelserver #close method thus disconnecting the tcp connection . ", "input": " Coin bestValueToMe \n long refundTransactionUnlockTimeSecs \n PaymentChannelServer connectedHandler \n Transaction contract \n TransactionOutput clientOutput \n ECKey myKey \n byte[] bestValueSignature \n PaymentChannelServerState state \n\n PaymentChannelServer setConnectedHandler \n String toString \n void updateValueToMe \n void clearConnectedHandler \n PaymentChannelServerState getOrCreateState", "output": ""}, {"instruction": "Generate java code\nadd propertychangelistener . ", "input": " Element m_SignedPart \n int m_SignMode \n String PROP_SIGNEDELEMENT \n Element m_WrappingPayloadElemnt \n String PROP_REFERRINGELEMENT \n WrappingAttackMode m_CurrWrappingMode \n String PROP_WRAPPINGELMENT \n PropertyChangeSupport m_PropertyChangeSupport \n int m_CurrWrappingPayloadIdx \n Element m_AttackPayloadElemnt \n boolean m_IsAdditionalWrap \n String PROP_ATTACKELEMENT \n\n void setAttackPayloadElement \n void setCurrWrappingPayloadIdx \n void setWrappingPayloadElement \n boolean isSigned \n boolean isAdditionalWrap \n Element getWrappingPayloadElement \n void setCurrWrappingMode \n void setIsAdditionalWrap \n Element getAttackPayloadElement \n void setSignedPart \n int getCurrWrappingPayloadIdx \n void removePropertyChangeListener \n void removePropertyChangeListener \n WrappingAttackMode getCurrWrappingMode \n Element getSignedPart \n int getSignMode \n void setSignMode", "output": ""}, {"instruction": "Generate java code\nreturns the client instance ", "input": " List<String> approvedScope \n List<String> requestedScope \n String audience \n UserSubject subject \n Client client \n String grantType \n\n UserSubject getSubject \n void setClient \n void setSubject \n void setRequestedScope \n List<String> getApprovedScope \n void setGrantType \n String getGrantType \n List<String> getRequestedScope \n String getAudience \n void setApprovedScope \n void setAudience", "output": ""}, {"instruction": "Generate java code\ndescription of the accessibility service . statically set from accessibilityservice #service_meta_data meta-data . ", "input": " AccessibilityServiceInfoVersionImpl IMPL \n int FEEDBACK_ALL_MASK \n\n ResolveInfo getResolveInfo \n ResolveInfo getResolveInfo \n ResolveInfo getResolveInfo \n String flagToString \n String getId \n String getId \n String getId \n boolean getCanRetrieveWindowContent \n boolean getCanRetrieveWindowContent \n boolean getCanRetrieveWindowContent \n String getSettingsActivityName \n String getSettingsActivityName \n String getSettingsActivityName \n String feedbackTypeToString", "output": ""}, {"instruction": "Generate java code\nchange the current locale . only use this before the gui is initialized . ", "input": " Logger LOG \n Locale systemDefaultLocale \n String BUNDLES_PATH \n Map<String,ResourceBundle> bundles \n List<ClassLoader> classLoaders \n boolean initialized \n\n void initInternal \n void init \n void init \n String localize \n String localize \n String getName \n void initForEclipse \n void initForEclipse \n void addClassLoader \n void loadBundle \n String messageFormat \n Locale getSystemDefaultLocale \n Locale[] getLocales", "output": ""}, {"instruction": "Generate java code\ncreates a scriptsig that can redeem a pay-to-address output . if given signature is null , incomplete scriptsig will be created with op_0 instead of signature ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder op \n Script updateScriptWithSignature \n Script createOpReturnScript \n ScriptBuilder data \n ScriptBuilder data \n Script createMultiSigInputScriptBytes \n Script createMultiSigInputScriptBytes \n ScriptBuilder smallNum \n ScriptBuilder smallNum \n Script createRedeemScript \n ScriptBuilder addChunk \n ScriptBuilder addChunk \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript \n Script createMultiSigOutputScript \n Script build \n Script createP2SHMultiSigInputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript", "output": ""}, {"instruction": "Generate java code\ngets the receipt date . ", "input": " String comments \n String inactivationReasonType \n Timestamp receiptDate \n String isActive \n BigDecimal predecessorId \n String srcFileName \n long serialVersionUID \n String srcUniqueFileName \n BigDecimal successorId \n Timestamp createdDate \n List<PCLDataUnitEntity> pclDataUnits \n long dataSetId \n BigDecimal feedId \n BigDecimal fileSize \n String destFileName \n String checksum \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isUpdate \n String receiptDateType \n String status \n\n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n long getDataSetId \n void setReceiptDateType \n void setIsPrepopulated \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getStatus \n String getDestFileName \n String getIsUpdate \n BigDecimal getFileSize \n List<PCLDataUnitEntity> getPclDataUnits \n void setPclDataUnits \n void setInactivationReasonType \n String getComments \n Timestamp getCreatedDate \n void setComments \n PCLDataUnitEntity removePclDataUnit \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setFileSize \n BigDecimal getPredecessorId \n void setChecksum \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setRunId \n void setReceiptDate \n void setStatus \n Timestamp getModifiedDate \n String getIsActive \n void setSuccessorId \n void setDestFileName \n PCLDataUnitEntity addPclDataUnit \n void setModifiedDate \n void setCreatedDate \n void setDataSetId \n void setPredecessorId \n void setIsActive \n void setChecksumType", "output": ""}, {"instruction": "Generate java code\nenforce that the issuer of the received response/assertion is known . the default is true . ", "input": " String spIdentifier \n String assertionConsumerURL \n String requestId \n boolean enforceAssertionsSigned \n boolean enforceKnownIssuer \n String issuerIDP \n Logger LOG \n String clientAddress \n TokenReplayCache<String> replayCache \n\n SSOValidatorResponse validateSamlResponse \n void setReplayCache \n void validateAudienceRestrictionCondition \n boolean validateAuthenticationSubject \n void setIssuerIDP \n void setEnforceAssertionsSigned \n void validateSubjectConfirmation \n boolean matchSaml2AudienceRestriction \n String getSpIdentifier \n void setRequestId \n String getClientAddress \n void validateIssuer \n void setSpIdentifier \n String getIssuerIDP \n String getAssertionConsumerURL \n void setAssertionConsumerURL \n void setClientAddress \n String getRequestId", "output": ""}, {"instruction": "Generate java code\ngets the value of the access property . ", "input": " ValidateAccess access \n\n void setAccess", "output": ""}, {"instruction": "Generate java code\nmake the version of argouml public . ", "input": " String VERSION \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\npositions the current record as indicated by the specified rid . ", "input": " String filename \n Transaction tx \n TableInfo ti \n int currentblknum \n RecordPage rp \n\n boolean next \n boolean atLastBlock \n RID currentRid \n void appendBlock \n void beforeFirst \n void insert \n String getString \n void delete \n void setInt \n int getInt \n void setString \n void close \n void moveTo", "output": ""}, {"instruction": "Generate java code\nmethod called only from the model . it sends a command to the viewer to update the character sprite as the model 's character moves . ", "input": " RpgScreen viewer \n RpgPlatform model \n\n void updateModel \n RpgScreen getViewer \n RpgPlatform getModel \n void setModel \n void moveCharacter \n void moveCharacter \n void triggerEvent \n void setViewer \n TiledMap getMap \n void runAutomaticEvents", "output": ""}, {"instruction": "Generate java code\nobtains a client for a worker with the given address . ", "input": " ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_HEARTBEAT_POOL \n BlockMasterClientPool mBlockMasterClientPool \n Boolean mHasLocalWorker \n ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_POOL \n ConcurrentHashMapV8<InetSocketAddress,NettyChannelPool> NETTY_CHANNEL_POOL_MAP \n Map<InetSocketAddress,BlockStoreContext> CACHED_CONTEXTS \n\n void releaseBlockWorkerThriftClient \n void initializeGauges \n boolean hasLocalWorker \n void releaseBlockWorkerThriftClientHeartbeat \n void releaseWorkerClient \n BlockStoreContext get \n BlockStoreContext get \n CloseableResource<BlockMasterClient> acquireMasterClientResource \n void releaseNettyChannel \n BlockWorkerClientService.Client acquireBlockWorkerThriftClient \n List<WorkerNetAddress> getWorkerAddresses \n Channel acquireNettyChannel \n BlockWorkerClientService.Client acquireBlockWorkerThriftClientHeartbeat", "output": ""}, {"instruction": "Generate java code\ngets the failed attrib . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n void setActValue \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n void setSrcFileName \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n void setFailedAttrib \n BigDecimal getExpDataSetId \n String getErrorMsg \n String getActValue \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n BigDecimal getExpDataUnitId \n Timestamp getCreateTimeStamp \n void setExpDataSetId \n void setDataSetId \n void setExpDataUnitId", "output": ""}, {"instruction": "Generate java code\nset all headers for the message ", "input": " Map<String,Object> headers \n byte body[] \n long deliveryTag \n String replyTo \n String contentEncoding \n String messageId \n String correlationId \n String soapAction \n String contentType \n\n String getCorrelationId \n String getContentEncoding \n Map<String,Object> getHeaders \n byte[] getBody \n String getReplyTo \n void setCorrelationId \n void setContentEncoding \n long getDeliveryTag \n void setMessageId \n void setSoapAction \n void setBody \n String getMessageId \n void setReplyTo \n void setDeliveryTag \n String getContentType \n void setContentType \n String getSoapAction", "output": ""}, {"instruction": "Generate java code\nreturn the hash code that object would have provided for us so we have a nearly unique id for debugging . ", "input": " production _the_production \n int _core_hash_cache \n symbol _symbol_after_dot \n int _dot_pos \n\n lr_item_core shift_core \n symbol symbol_after_dot \n String to_simple_string \n int dot_pos \n int hashCode \n boolean equals \n boolean equals \n String toString \n non_terminal dot_before_nt \n production the_production \n int core_hashCode \n boolean core_equals \n boolean dot_at_end", "output": ""}, {"instruction": "Generate java code\nvalidate saml request ", "input": " Log log \n IdentitySAMLValidatorServiceStub stub \n\n GeneratedResponseDTO buildResponse \n String[] getIssuersOfSAMLServiceProviders", "output": ""}, {"instruction": "Generate java code\ngets the hash of the given block for the purpose of checking its pow ", "input": " int addressHeader \n int INTERVAL \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n long packetMagic \n int p2shHeader \n List<NetworkParameters> paramSet \n int PROTOCOL_VERSION \n Block genesisBlock \n BigInteger proofOfWorkLimit \n int subsidyDecreaseBlockCount \n int port \n BigInteger MAX_MONEY \n int TARGET_SPACING \n String[] dnsSeeds \n Map<Integer,Sha256Hash> checkpoints \n byte[] SATOSHI_KEY \n int interval \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n BigInteger getMaxMoney \n NetworkParameters getParamsFromAddressByte \n void registerParams \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n int getRetargetBlockCount \n int getRetargetBlockCount \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n boolean isAcceptableAddressVersion \n String getURIScheme \n BigInteger getProofOfWorkLimit", "output": ""}, {"instruction": "Generate java code\nmoves file from one place to another , can across storage devices e.g. , from memory to ssd when file #renameto may not work.current implementation uses com.google.common.io.files #move file , file , may change if there is a better solution . ", "input": " Logger LOG \n\n void setLocalDirStickyBit \n short getLocalFileMode \n void changeLocalFileUser \n void delete \n String getLocalFileOwner \n void createFile \n void createStorageDirPath \n void changeLocalFileToFullPermission \n void changeLocalFileGroup \n String getLocalFileGroup \n void createDir \n boolean exists \n void createBlockPath \n void changeLocalFilePermission \n void deletePathRecursively", "output": ""}, {"instruction": "Generate java code\nconvert a jsonarray into a nodes list . ", "input": " Date nominalTime \n String trackerUri \n Date lastModifiedTime \n String missingDependencies \n String createdConf \n String errorMessage \n String externalId \n String errorCode \n String type \n String actionXml \n String jobId \n String consoleUrl \n String runConf \n int actionNumber \n Date createdTime \n int timeOut \n String id \n String externalStatus \n Status status \n\n String getMissingDependencies \n String getConsoleUrl \n void setJobId \n void setActionNumber \n JSONArray toJSONArray \n String getId \n String getExternalId \n int getActionNumber \n Status getStatus \n void setTrackerUri \n void setErrorCode \n void setTimeOut \n void setErrorMessage \n String getErrorCode \n int hashCode \n void setRunConf \n JSONObject toJSONObject \n void setId \n void setCreatedTime \n void setExternalId \n void setNominalTime \n String getJobId \n void setCreatedConf \n void setLastModifiedTime \n Date getLastModifiedTime \n void setExternalStatus \n void setConsoleUrl \n void setType \n Date getNominalTime \n String getCreatedConf \n void setMissingDependencies \n String getExternalStatus \n void setActionXml \n void setStatus \n String getRunConf \n void setErrorInfo \n String getActionXml \n String getType \n int getTimeOut \n boolean equals \n String toString \n Date getCreatedTime \n String getTrackerUri \n String getErrorMessage", "output": ""}, {"instruction": "Generate java code\nclean the md5 cache ", "input": " Map<String,byte[]> md5Cache \n byte[] b \n BlockingQueue<filechunk> filed \n filechunk poison \n Queue<MessageDigest> digestPool \n MessageDigest digest \n int n \n BlockingQueue<filechunk> empty \n\n MessageDigest call \n byte[] longToBytes \n String encodeHex \n String encodeHex \n byte[] encodeMD5Raw \n byte[] encodeMD5Raw \n byte[] encodeMD5Raw \n String encodeOctal \n String encodeMD5Hex \n String encodeMD5Hex \n String encodeMD5Hex \n byte[] decodeHex \n byte[] fastFingerprintRaw \n void consume \n String fastFingerprintHex \n filechunk nextFree", "output": ""}, {"instruction": "Generate java code\ngets the inactivation reason type . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n void setFeedId \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\nlogs and wraps the given exception . ", "input": " Log log \n ClaimManagementServiceStub stub \n\n ClaimDialectDTO getAllClaimMappingsByDialect \n ClaimDialectDTO[] getAllClaimMappings \n void addNewClaimDialect \n ClaimDialectDTO getAllClaimMappingsByDialectWithRole \n void updateClaimMapping \n void removeClaimMapping \n void removeClaimDialect \n void addNewClaimMappping", "output": ""}, {"instruction": "Generate java code\ngets a bytebuffer containing an increasing sequence of integers starting at the givenvalue . ", "input": " Method sCleanerCleanMethod \n Method sByteBufferCleanerMethod \n Logger LOG \n\n boolean equalConstantByteArray \n ByteBuffer getIncreasingByteBuffer \n ByteBuffer getIncreasingByteBuffer \n void fastCopy \n void cleanDirectBuffer \n ByteBuffer sliceByteBuffer \n ByteBuffer sliceByteBuffer \n int byteToInt \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteBuffer \n byte[] getIncreasingByteArray \n byte[] getIncreasingByteArray \n void writeBufferToFile \n List<ByteBuffer> cloneByteBufferList \n ByteBuffer cloneByteBuffer \n byte[] newByteArrayFromByteBuffer \n void putIntByteBuffer \n ByteBuffer generateNewByteBufferFromThriftRPCResults", "output": ""}, {"instruction": "Generate java code\ngets the lane_id . ", "input": " int volume \n double occupancy \n Timestamp measurement_date \n int lane_id \n long id \n double speed \n int quality \n\n double getOccupancy \n void setOccupancy \n Timestamp getMeasurement_date \n long getId \n void setVolume \n void setLane_id \n void setSpeed \n int getVolume \n void setQuality \n int getQuality \n double getSpeed \n void setMeasurement_date \n void setId \n String toString", "output": ""}, {"instruction": "Generate java code\nreturns true if s is a legal java identifier . more info . ", "input": " Logger logger \n Pattern KVP_PATTERN \n Pattern INT_PATTERN \n String[] EMPTY_STRING_ARRAY \n\n String getQueryStringValue \n boolean isEmpty \n boolean isBlank \n boolean isContains \n boolean isContains \n String translat \n Map<String,String> parseQueryString \n boolean isInteger \n String getServiceKey \n String[] split \n boolean isNumeric \n Map<String,String> parseKeyValuePair \n boolean isNotEmpty \n String toString \n String toString \n String toQueryString \n String join \n String join \n String join \n String join \n boolean isEquals \n int parseInteger \n String camelToSplitName \n String toArgumentString", "output": ""}, {"instruction": "Generate java code\nload the configuration from the default location . the configuration will be automatically loaded from the default location the first time a value is queried or modified , if it had not been previously loaded . only the first load request will be honored , so if the configuration is to be loaded from a non-default location , load name must be used prior to any other call . the configuration can be loaded only one time . implementations must ignore load requests once a load is already successful , and must return false for each of those ignored requests . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n String getString \n String getString \n void removeListener \n void removeListener \n IConfigurationFactory getFactory \n void setDouble \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n void setString \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nadd the utility values of an itemset to this sequence ", "input": " double exactUtility \n int id \n List<List<Integer>> itemsets \n List<List<Double>> profits \n\n List<List<Double>> getUtilities \n void print \n int size \n List<Integer> get \n String toString \n int getId \n List<List<Integer>> getItemsets \n void addItemset", "output": ""}, {"instruction": "Generate java code\nthe index of the output in transaction to which we refer ", "input": " ThreadLocal<Boolean> inTransaction \n TransactionalHashMap<StoredTransactionOutPoint,StoredTransactionOutput> transactionOutputMap \n TransactionalHashMap<UniqueKeyType,ValueType> mapValues \n boolean wasUndoable \n StoredBlock verifiedChainHead \n ThreadLocal<HashMap<KeyType,ValueType>> tempMap \n long index \n HashMap<MultiKeyType,Set<UniqueKeyType>> mapKeys \n StoredBlock chainHead \n TransactionalHashMap<Sha256Hash,StoredBlockAndWasUndoableFlag> blockMap \n ThreadLocal<HashSet<KeyType>> tempSetRemoved \n StoredBlock block \n TransactionalMultiKeyHashMap<Sha256Hash,Integer,StoredUndoableBlock> fullBlockMap \n long serialVersionUID \n HashMap<KeyType,ValueType> map \n Sha256Hash hash \n int fullStoreDepth \n\n Sha256Hash getHash \n StoredTransactionOutput getTransactionOutput \n void removeUnspentTransactionOutput \n void put \n void put \n void put \n void put \n ValueType remove \n boolean hasUnspentOutputs \n void BeginTransaction \n StoredBlock getVerifiedChainHead \n void CommitTransaction \n int hashCode \n ValueType get \n ValueType get \n StoredBlock get \n void abortDatabaseBatchWrite \n void abortDatabaseBatchWrite \n ValueType removeByUniqueKey \n void addUnspentTransactionOutput \n void beginDatabaseBatchWrite \n void beginDatabaseBatchWrite \n void close \n void setVerifiedChainHead \n void commitDatabaseBatchWrite \n void commitDatabaseBatchWrite \n StoredUndoableBlock getUndoBlock \n StoredBlock getChainHead \n void setChainHead \n boolean equals \n String toString \n void AbortTransaction \n void removeByMultiKey \n StoredBlock getOnceUndoableStoredBlock", "output": ""}, {"instruction": "Generate java code\nsets #mseekbuffersizebytes . ", "input": " boolean mCachePartiallyReadBlock \n ReadType mReadType \n long mSeekBufferSizeBytes \n FileWriteLocationPolicy mLocationPolicy \n\n FileWriteLocationPolicy getLocationPolicy \n InStreamOptions defaults \n boolean isCachePartiallyReadBlock \n int hashCode \n boolean equals \n long getSeekBufferSizeBytes \n String toString \n InStreamOptions setLocationPolicy \n AlluxioStorageType getAlluxioStorageType \n InStreamOptions setReadType \n InStreamOptions setCachePartiallyReadBlock", "output": ""}, {"instruction": "Generate java code\nget current utc datetime in sql format . ", "input": " String pattern \n\n String formatUTCtoSqlLocal \n String formatUTC \n String formatUTC \n String getCurrentLocal \n String getPattern \n Date parseSqlUtc \n Date parseUTC \n String formatUTCtoSqlUTC", "output": ""}, {"instruction": "Generate java code\nincrements the count to which the specified key is mapped in this frequency counter , or puts 1 if the map contains no mapping for this key . ", "input": " Map<T,Integer> counter \n\n Double probabilityOf \n String toString \n Set<T> getStates \n Integer getCount", "output": ""}, {"instruction": "Generate java code\nsets the test result lst . ", "input": " Long totalElapsedMinutes \n List<TestResultDTO> testResultLst \n String startTime \n String endTime \n Long batchId \n String batchStatus \n Long totalElapsedSeconds \n\n void setBatchStatus \n Long getTotalElapsedSeconds \n void setBatchId \n void setTotalElapsedMinutes \n String getEndTime \n Long getTotalElapsedMinutes \n void setEndTime \n Long getBatchId \n void setTotalElapsedSeconds \n String toString \n String getStartTime \n void setStartTime \n List<TestResultDTO> getTestResultLst \n String getBatchStatus", "output": ""}, {"instruction": "Generate java code\nwrap java object as scriptable instance to allow full access to its methods and fields from javascript . #wrap context , scriptable , object , class and #wrapnewobject context , scriptable , object call this methodwhen they can not convert javaobject to javascript primitive value or javascript array . subclasses can override the method to provide custom wrappers for java objects . ", "input": " boolean javaPrimitiveWrap \n\n void setJavaPrimitiveWrap \n boolean isJavaPrimitiveWrap \n Object wrap \n Scriptable wrapNewObject", "output": ""}, {"instruction": "Generate java code\ngets the storage tier alias of the location . ", "input": " int mDirIndex \n String ANY_TIER \n String mTierAlias \n int ANY_DIR \n\n int hashCode \n boolean equals \n BlockStoreLocation anyDirInTier \n String toString \n BlockStoreLocation anyTier \n int dir \n boolean belongsTo", "output": ""}, {"instruction": "Generate java code\ngets the canonical paymentchannelserverstate object for this channel , either by returning an existing oneor by creating a new one . ", "input": " BigInteger bestValueToMe \n long refundTransactionUnlockTimeSecs \n PaymentChannelServer connectedHandler \n Transaction contract \n TransactionOutput clientOutput \n ECKey myKey \n byte[] bestValueSignature \n PaymentChannelServerState state \n\n PaymentChannelServer setConnectedHandler \n void closeConnectedHandler \n String toString \n void updateValueToMe \n void clearConnectedHandler", "output": ""}, {"instruction": "Generate java code\nobtain a suitable name for use in javascript for an attribute . this function is purely a tribute to the awful modularity of xmlschema . ", "input": " SchemaCollection schemaCollection \n Set<String> prefixes \n Map<String,String> fallbackNamespacePrefixMap \n int nsCounter \n StringBuilder attributes \n\n String getAttributes \n String getPrefix \n String xmlElementString \n String xmlElementString \n void collect", "output": ""}, {"instruction": "Generate java code\na scan for this query is created and returned , as follows . first , the method materializes its rhs query . it then determines the optimal chunk size , based on the size of the materialized file and the number of available buffers . it creates a chunk plan for each chunk , saving them in a list . finally , it creates a multiscan for this list of plans , and returns that scan . ", "input": " Transaction tx \n Plan lhs \n Schema schema \n Plan rhs \n\n Schema schema \n TempTable copyRecordsFrom \n int blocksAccessed \n int distinctValues \n int recordsOutput", "output": ""}, {"instruction": "Generate java code\nsets whether the message should be trated as high priority or not . ", "input": " String _utf8 \n boolean _highPriority \n byte[] _messageBody \n String _encoding \n byte[] _correlationId \n String _label \n\n byte[] getCorrelationId \n String getBodyAsString \n String getLabel \n String getCorrelationIdAsString \n void setBodyAsString \n byte[] getBody \n void setCorrelationId \n void setLabel \n boolean getHighPriority \n void setBody \n void setCorrelationIdAsString", "output": ""}, {"instruction": "Generate java code\nobtains the serversession associated with a given user id . ", "input": " ServerSession controllerServerSession \n Logger LOGGER \n PersistentStore persistentStore \n EventAdmin eventAdmin \n Map<String,ServerSession> userSessionMap \n java.lang.String EVENT_TOPIC_CANCEL \n ExecutorService executorService \n\n void queuePersistedMessages \n String getControllerRootTopic \n List<Map<String,String>> getNotificationsForUser \n void deregisterUserSession \n void registerUserSession \n void adminCancelDownload \n String getUserId", "output": ""}, {"instruction": "Generate java code\ngets the description of the third-party application . ", "input": " String secretKey \n String applicationDescription \n AccessToken preAuthorizedToken \n String callbackURI \n String loginName \n String applicationURI \n String logoUri \n String consumerKey \n String applicationName \n\n String getSecretKey \n String getApplicationName \n void setApplicationDescription \n void setApplicationName \n void setCallbackURI \n void setApplicationURI \n void setPreAuthorizedToken \n String getApplicationURI \n String getLoginName \n void setLoginName \n int hashCode \n void setLogoUri \n boolean equals \n String getCallbackURI \n String getConsumerKey \n AccessToken getPreAuthorizedToken \n String getLogoUri", "output": ""}, {"instruction": "Generate java code\nreturns a list of all locations . ", "input": " Hashtable<String,Point2D> locationPositions \n LabeledGraph<String,Double> links \n\n Double getDistance \n void clear \n String randomlyGenerateDestination \n void clearLinks \n void setPosition \n void addBidirectionalLink \n void removeUnidirectionalLink \n Point2D getPosition \n void removeBidirectionalLink \n boolean isLocation \n void addUnidirectionalLink \n List<String> getLocationsLinkedTo \n void setDistAndDirToRefLocation", "output": ""}, {"instruction": "Generate java code\ngets the constant value of the specified field . if the field is a group field , then its value can be obtained from the saved group value . otherwise , the value is obtained from the appropriate aggregation function . ", "input": " Scan s \n boolean moregroups \n Collection<String> groupfields \n Collection<AggregationFn> aggfns \n GroupValue groupval \n\n boolean next \n int getInt \n void beforeFirst \n String getString \n void close \n boolean hasField", "output": ""}, {"instruction": "Generate java code\ngets the value of the testdata property . ", "input": " String testData \n String method \n String filepath \n String step \n String stepResult \n String time \n\n void setMethod \n void setStepResult \n void setFilepath \n String getTime \n String getStep \n String getFilepath \n String getMethod \n String getStepResult \n void setStep \n void setTestData \n void setTime", "output": ""}, {"instruction": "Generate java code\nadds a property to the cluster resource . ", "input": " int DEFAULT_USER_BLOCK_SIZE \n int mNumWorkers \n long DEFAULT_WORKER_CAPACITY_BYTES \n int mUserBlockSize \n Map<PropertyKey,String> mConfiguration \n boolean mStartCluster \n LocalAlluxioCluster mLocalAlluxioCluster \n Map<PropertyKey,String> mConfiguration \n long mWorkerCapacityBytes \n\n Statement apply \n LocalAlluxioClusterResource build \n LocalAlluxioCluster get \n void start \n Builder setStartCluster \n Builder setNumWorkers", "output": ""}, {"instruction": "Generate java code\nreturns the input if valid over the given black list patterns else throws an identityvalidationexception ", "input": " String msgSection1 \n String regex \n IdentityValidatorConfig validatorConfig \n String msgSection3 \n String msgSection4 \n String msgSection2 \n\n boolean isValidOverWhiteListPatterns \n String getRegex \n boolean isValidOverBlackListPatterns \n String getPatternString \n boolean patternExists \n void removePattern \n boolean isValid \n String getValidInput \n String getValidInputOverWhiteListPatterns \n void addPattern", "output": ""}, {"instruction": "Generate java code\nreturns the schema of the materialized table , which is the same as in the underlying plan . ", "input": " Plan srcplan \n Transaction tx \n\n int blocksAccessed \n int distinctValues \n int recordsOutput \n Scan open", "output": ""}, {"instruction": "Generate java code\ncomplementary operation to filteronly ", "input": " Result globalLog \n List<ResultEntry> log \n Map<ResultObserver,ResultObserverSettings> observers \n\n Result getGlobalResult \n Result filterOut \n Result filterOut \n Result filterOut \n boolean removeObserver \n void addObserverLogSource \n void setSources \n boolean remove \n Iterator<ResultEntry> iterator \n boolean removeAll \n ResultEntry get \n Object[] toArray \n T[] toArray \n boolean registerObserver \n boolean add \n void removeObserverLogSource \n boolean containsAll \n void clear \n boolean isEmpty \n void setObserverLevel \n boolean contains \n int size \n boolean addAll \n List<String> getSoures \n String toString \n void notifyObserversClear \n void notifyObserversAdd \n boolean retainAll", "output": ""}, {"instruction": "Generate java code\nbuilds a map of the supplied keys to random colors . each color is selected randomly and tinted with a fixed tint . ", "input": " double MAX_TINT_FACTOR \n double MIN_TINT_FACTOR \n double FIXED_TINT_FACTOR \n\n Map<T,String> getGraduatedColorMap \n Color tintColor \n Color getRandomColor \n int applyTint \n String getColorString", "output": ""}, {"instruction": "Generate java code\nsets the population size and number of iterations to zero . ", "input": " String ITERATIONS \n String POPULATION_SIZE \n int individualLength \n double mutationProbability \n Character[] finiteAlphabet \n Metrics metrics \n Random random \n\n String randomSelection \n String mutate \n String geneticAlgorithm \n String geneticAlgorithm \n void setIterations \n int randomOffset \n String retrieveBestIndividual \n Metrics getMetrics \n int getPopulationSize \n String reproduce \n void setPopulationSize \n int getIterations \n void validatePopulation \n String ga", "output": ""}, {"instruction": "Generate java code\nwrites out the domains assignments section of the rifl document ", "input": " RIFLDocument document \n\n void writeFlowPair \n void writeSourceSinkDomPair \n RIFLDocument getDocument \n void writeJavaFieldSpec \n void writeAttackerIO \n void writeDomains \n void writeDomainHierarchy \n void writeJavaParameterSpec \n void writeDomainSpec \n void writeFlowPolicy \n void writeDomainPair \n String write \n void writeSourceSinkSpec", "output": ""}, {"instruction": "Generate java code\nreturns number of top level result values . ", "input": " String NAME \n String FAULT \n String MEMBER \n TimeZone tz \n ArrayList<Object> values \n String VALUE \n\n String getStringValue \n ArrayList<Object> parseArray \n List getValues \n Map<String,Object> getStructValue \n Double getDoubleValue \n void parse \n Integer getIntegerValue \n Boolean getBooleanValue \n HashMap<String,Object> parseStruct \n List<Object> getArrayValue \n Object parseValue \n byte[] getBinaryValue \n Date getDateValue", "output": ""}, {"instruction": "Generate java code\nsupply the encoding to be used throughout the persistence mechanism . ", "input": " ConfigurationKey KEY_MOST_RECENT_PROJECT_FILE \n String DOCUMENTATION_TAG \n ConfigurationKey KEY_MOST_RECENT_EXPORT_DIRECTORY \n ConfigurationKey KEY_SCREEN_LEFT_X \n ConfigurationKey KEY_INPUT_SOURCE_ENCODING \n ConfigurationKey KEY_SCREEN_THEME \n String DEPRECATED_TAG \n ConfigurationKey KEY_SNAP \n String CONSOLE_LOG \n ConfigurationKey KEY_SCREEN_HEIGHT \n ConfigurationKey KEY_SPLASH \n ConfigurationKey KEY_EDEM \n ConfigurationKey KEY_NUMBER_LAST_RECENT_USED \n String RESOURCEDIR \n ConfigurationKey KEY_SCREEN_NORTHEAST_WIDTH \n ConfigurationKey KEY_USER_EMAIL \n String ARGO_CONSOLE_PREFIX \n int SCOPE_APPLICATION \n ConfigurationKey KEY_SCREEN_SOUTHEAST_WIDTH \n String SINCE_TAG \n ConfigurationKey KEY_LOCALE \n ConfigurationKey KEY_USER_FULLNAME \n ConfigurationKey KEY_IMPORT_GENERAL_SETTINGS_FLAGS \n ConfigurationKey KEY_SCREEN_SOUTH_HEIGHT \n ConfigurationKey KEY_SCREEN_EAST_WIDTH \n ConfigurationKey KEY_IMPORT_GENERAL_DETAIL_LEVEL \n ConfigurationKey KEY_USER_IMPORT_CLASSPATH \n String VERSION_TAG \n String SEE_TAG \n int SCOPE_PROJECT \n String ARGO_CONSOLE_SUPPRESS \n ConfigurationKey KEY_THEME_CLASS \n String DOCUMENTATION_TAG_ALT \n ConfigurationKey KEY_SMOOTH_EDGES \n ConfigurationKey KEY_XMI_STRIP_DIAGRAMS \n ConfigurationKey KEY_SCREEN_NORTH_HEIGHT \n ConfigurationKey KEY_SCREEN_WIDTH \n ConfigurationKey KEY_SCREEN_SOUTHWEST_WIDTH \n ConfigurationKey KEY_SCREEN_WEST_WIDTH \n ConfigurationKey KEY_SCREEN_TOP_Y \n ConfigurationKey KEY_DEFAULT_MODEL \n ConfigurationKey KEY_SCREEN_NORTHWEST_WIDTH \n ConfigurationKey KEY_USER_EXPLORER_PERSPECTIVES \n String ARGOINI \n String AUTHOR_TAG \n ConfigurationKey KEY_GRID \n ConfigurationKey KEY_RELOAD_RECENT_PROJECT \n ConfigurationKey KEY_LOOK_AND_FEEL_CLASS \n ConfigurationKey KEY_SCREEN_MAXIMIZED \n ConfigurationKey KEY_STARTUP_DIR \n\n void setDirectory \n String getDirectory", "output": ""}, {"instruction": "Generate java code\nlogs a new message with the specified color code . ", "input": " long timeElapsed \n HttpServletRequest request \n ArrayList messages \n Date startTime \n Date stopTime \n ArrayList parameters \n\n ArrayList getDebugMessages \n HttpServletRequest getRequest \n String getCompleteLog \n ArrayList getParameters \n void startTimer \n void stopTimer \n long getTimeElapsed \n void addParameter \n void addParameter \n void addParameter", "output": ""}, {"instruction": "Generate java code\nadds numerical information to be displayed . note that none of the information added after #apply has been called , will be displayed . ", "input": " boolean HAS_REMOTE_CONTROL_APIS \n Object mActualMetadataEditor \n int METADATA_KEY_ARTWORK \n Object mActualRemoteControlClient \n\n void setPlaybackState \n MetadataEditorCompat putBitmap \n void apply \n void removeFromMediaRouter \n MetadataEditorCompat putString \n void clear \n void addToMediaRouter \n Object getActualRemoteControlClientObject \n MetadataEditorCompat editMetadata \n void setTransportControlFlags", "output": ""}, {"instruction": "Generate java code\nspinleft spins the drone a little to the left ", "input": " GeneralMotorCon ourInstance \n int spin90Time \n String TAG \n int batLvl \n long threadTimer \n int spinSpeed \n CommandManager cmd \n int hoverTime \n int speed \n int spin90Speed \n ARDrone drone \n int spinTime \n\n void spin90Left \n void spinRight \n void takeoff \n void forward \n void right \n void lowerAltitude \n void spin90Right \n void landing \n void setDrone \n void left \n void backward \n GeneralMotorCon getInstance \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n void raiseAltitude", "output": ""}, {"instruction": "Generate java code\nget / ingredients / : id : get the `` id '' ingredient . ", "input": " IngredientService ingredientService \n Logger log \n\n ResponseEntity<Ingredient> updateIngredient \n ResponseEntity<List<String>> getAutoSuggest \n ResponseEntity<Void> deleteIngredient \n ResponseEntity<List<Ingredient>> getAllIngredients \n ResponseEntity<Ingredient> createIngredient", "output": ""}, {"instruction": "Generate java code\ntemplate delegator for testnode method . override to add custom logic ", "input": " PlaceHolder placeHolder \n\n void unhandled \n void testDocumentType \n void testComment \n void testNode \n void testEntity \n void noMoreNodes \n void testAttribute \n void testText \n void testEntityReference \n void testCDATASection \n void testNotation \n void testProcessingInstruction", "output": ""}, {"instruction": "Generate java code\nget string value from database , replacing empty string with empty ", "input": " Connection connection \n DbInfo info \n\n void disconnect \n DbInfo getInfo \n Connection getConnnection \n boolean connect", "output": ""}, {"instruction": "Generate java code\nreturns the package name of classfullname according to the java language specification section 6.7 . unlike class #getpackage , this method only parses the class name , without attempting to define the package and hence load files . ", "input": " PlaceHolder placeHolder \n\n T newProxy \n void initialize", "output": ""}, {"instruction": "Generate java code\nadditionally - two simpletypednamedeclaration are equal , if theycontain types , that can be cast into each other . ", "input": " SimpleTypedNameDeclaration next \n String typeImage \n Class<?> type \n Set<String> primitiveTypes \n\n String getTypeImage \n void addNext \n Class<?> getType \n int hashCode \n boolean internalEquals \n String toString \n boolean internalEqualsNext", "output": ""}, {"instruction": "Generate java code\nreturns the part number associated with a line item . ", "input": " OrderLineType lineItem \n java.util.Iterator iter \n\n String getItemDescription \n Object next \n java.util.Currency getItemPriceCurrency \n int getItemQuantity \n double getItemPrice \n BasePriceType getTheItemPrice \n boolean hasNext \n void remove", "output": ""}, {"instruction": "Generate java code\nset the number of bytes to skip after a unicode character . ", "input": " IParserEventHandler handler \n IParserEvent GROUP_END \n IParserEvent GROUP_START \n IParserEvent DOCUMENT_START \n Deque<IParserEventHandler> handlerStack \n Map<Integer,String> m_fontEncodings \n Deque<ParserState> stack \n IParserEvent DOCUMENT_END \n ParserState state \n int skipBytes \n\n void processCharacter \n void processUpr \n void handleEvent \n void processDocumentEnd \n void processGroupEnd \n void processCommand \n void parse \n void processCharacterBytes \n void processString \n void processDocumentStart \n void handleCommand \n void processGroupStart \n void processFont \n void processEncoding \n void processUnicode \n String currentEncoding \n void processBinaryBytes \n void processFontCharset", "output": ""}, {"instruction": "Generate java code\nyou 'd probably want to call tmxtile #setglobaltileid tmxtiledmap , int instead . ", "input": " int mGlobalTileID \n int mTileWidth \n int mTileColumn \n int mTileRow \n int mTileHeight \n TextureRegion mTextureRegion \n\n int getTileHeight \n void setGlobalTileID \n int getTileWidth \n TMXProperties<TMXTileProperty> getTMXTileProperties \n int getGlobalTileID \n int getTileY \n int getTileX \n TextureRegion getTextureRegion \n int getTileRow \n int getTileColumn", "output": ""}, {"instruction": "Generate java code\ntests the blockstoremeta #getcapacitybytes method . ", "input": " long COMMITTED_BLOCKS_NUM \n long TEST_SESSION_ID \n BlockStoreMeta mBlockStoreMeta \n BlockStoreMeta mBlockStoreMetaFull \n long TEST_BLOCK_SIZE \n BlockMetadataManager mMetadataManager \n TemporaryFolder mTestFolder \n\n void getUsedBytesOnTiers \n void before \n void getCapacityBytesOnDirs \n void getUsedBytes \n void getNumberOfBlocks \n void getCapacityBytesOnTiers \n void getUsedBytesOnDirs \n void getBlockList", "output": ""}, {"instruction": "Generate java code\nreads a line of text . a line is considered to be terminated by any one of a line feed ' \\ n ' , a carriage return ' \\ r ' , or a carriage return followed immediately by a linefeed '' \\ r \\ n '' . ", "input": " Readable readable \n CharBuffer cbuf \n Queue<String> lines \n Reader reader \n LineBuffer lineBuf \n char[] buf \n\n void handleLine", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gsvparser #setsentencecount int . ", "input": " GSVSentence gsv \n String EXAMPLE \n GSVSentence empty \n\n void testSetSatelliteCount \n void testIsFirst \n void testSetSatelliteInfo \n void testGetSentenceIndex \n void testGetSatelliteCount \n void testConstructor \n void testGetSatelliteInfo \n void testParserGlonassGSV \n void testGetSentenceCount \n void testGetSatelliteInfoWithEmptyFields \n void testGetSatelliteInfoWithShortSentence \n void setUp \n void testIsLast \n void testSatelliteInfo", "output": ""}, {"instruction": "Generate java code\nset icon path ", "input": " int bigIcon \n String emojiText \n int icon \n String name \n Type type \n String iconPath \n String identityCode \n String bigIconPath \n\n void setName \n String getName \n String getIconPath \n int getBigIcon \n void setBigIcon \n void setType \n void setIdentityCode \n int getIcon \n String getEmojiText \n String getBigIconPath \n void setIcon \n void setBigIconPath \n void setEmojiText \n Type getType \n String getIdentityCode \n String newEmojiText", "output": ""}, {"instruction": "Generate java code\ncheck if the proxy setting has username/password set . ", "input": " List<RemoteRepository> remoteRepositories \n Log log \n String DEFAULT_CONTENT_TYPE \n RepositorySystem repositorySystem \n MavenProperties properties \n Authentication authentication \n\n FileSystemResource toResource \n Artifact toArtifact \n Resource resolve \n RepositorySystem newRepositorySystem \n DefaultRepositorySystemSession newRepositorySystemSession \n void validateCoordinates \n boolean isProxyEnabled", "output": ""}, {"instruction": "Generate java code\nmain entry point : parse rtf data from the input stream , and pass events based on the rtf content to the listener . ", "input": " IParserEventHandler handler \n IParserEvent GROUP_END \n IParserEvent GROUP_START \n IParserEvent DOCUMENT_START \n Deque<IParserEventHandler> handlerStack \n Map<Integer,String> m_fontEncodings \n Deque<ParserState> stack \n IParserEvent DOCUMENT_END \n ParserState state \n int skipBytes \n\n void processCharacter \n void processUpr \n void handleEvent \n void processDocumentEnd \n void processGroupEnd \n void processCommand \n void processCharacterBytes \n void processString \n void processDocumentStart \n void processUnicodeAlternateSkipCount \n void handleCommand \n void processGroupStart \n void processFont \n void processEncoding \n void processUnicode \n String currentEncoding \n void processBinaryBytes \n void processFontCharset", "output": ""}, {"instruction": "Generate java code\ncomplementary operation to filteronly ", "input": " Result globalLog \n List<ResultEntry> log \n Map<ResultObserver,ResultObserverSettings> observers \n\n Result getGlobalResult \n Result filterOut \n Result filterOut \n Result filterOut \n boolean removeObserver \n void addObserverLogSource \n void setSources \n boolean remove \n Iterator<ResultEntry> iterator \n boolean removeAll \n ResultEntry get \n Object[] toArray \n T[] toArray \n boolean registerObserver \n boolean add \n void removeObserverLogSource \n boolean containsAll \n void clear \n boolean isEmpty \n void setObserverLevel \n boolean contains \n int size \n boolean addAll \n List<String> getSoures \n String toString \n void notifyObserversClear \n void notifyObserversAdd \n boolean retainAll", "output": ""}, {"instruction": "Generate java code\ntests against the condition number from octave . ", "input": " DenseMatrix64F unzeroVector \n Random rand \n DenseMatrix64F zeroMatrix \n DenseMatrix64F unzeroMatrix \n DenseMatrix64F squareMatrix \n\n void inducedP2 \n void checkUncountable \n void inducedP1 \n void normalizeF \n void normF \n void fastNormP2 \n void fastNormP \n void normPInf \n void conditionP \n void elementP \n void inducedPInf \n void normP \n void normP2 \n void fastElementP \n void fastNormF \n void normP1", "output": ""}, {"instruction": "Generate java code\ntest case for ossunderfilesystem #delete string , boolean . ", "input": " String BUCKET_PREFIX \n OSSClient mClient \n String DST \n String SRC \n OSSUnderFileSystem mOSSUnderFileSystem \n String PATH \n String BUCKET_NAME \n\n void before \n void renameOnServiceException \n void deleteRecursiveOnServiceException", "output": ""}, {"instruction": "Generate java code\nget the languages of a given source file . ", "input": " Map<Language,LanguageVersion> languageToLanguageVersion \n\n LanguageVersion getDefaultLanguageVersionForFile \n LanguageVersion getDefaultLanguageVersionForFile \n LanguageVersion getDefaultLanguageVersion \n String getExtension \n LanguageVersion setDefaultLanguageVersion", "output": ""}, {"instruction": "Generate java code\nprevents the given methods from being run as part of the test suite . note : in principle this should never need to be used , but it might be useful if the semantics of an implementation disagree in unforeseen ways with the semantics expected by a test , or to keep dependent builds clean in spite of an erroneous test . ", "input": " Set<Method> suppressedTests \n Logger logger \n G subjectGenerator \n String name \n Runnable setUp \n Runnable tearDown \n Set<Feature<?>> features \n\n B withSetUp \n B named \n String getName \n boolean intersect \n Runnable getSetUp \n TestSuite createTestSuite \n void checkCanCreate \n TestSuite filterSuite \n Set<Method> getSuppressedTests \n boolean matches \n Method extractMethod \n B withTearDown \n G getSubjectGenerator \n Set<Feature<?>> getFeatures \n String formatFeatureSet \n TestSuite makeSuiteForTesterClass \n B self \n List<Class<? extends AbstractTester>> getTesters \n B usingGenerator \n Runnable getTearDown \n B withFeatures \n B withFeatures", "output": ""}, {"instruction": "Generate java code\nregisters the instance of remotecontrolclient with the audiomanager . ", "input": " boolean sHasRemoteControlAPIs \n\n void unregisterRemoteControlClient", "output": ""}, {"instruction": "Generate java code\nget the number of messages sent . this metrics is incremented after a message has been completely and successfully put on the wire . ", "input": " long maxSizeSent \n int LEVEL_TRANSPORT \n long faultsSending \n long faultsReceiving \n int LEVEL_NONE \n long messagesSent \n long minSizeReceived \n long maxSizeReceived \n long timeoutsSending \n long bytesSent \n double avgSizeSent \n Map<Integer,Long> responseCodeTable \n long lastResetTime \n int LEVEL_FULL \n long timeoutsReceiving \n long bytesReceived \n Long ONE \n int level \n double avgSizeReceived \n long messagesReceived \n long minSizeSent \n\n void notifyReceivedMessageSize \n void notifyReceivedMessageSize \n double getAvgSizeSent \n void incrementBytesReceived \n void incrementBytesReceived \n long getBytesReceived \n void setLevel \n void incrementFaultsReceiving \n void incrementFaultsReceiving \n Map<Integer,Long> getResponseCodeTable \n long getTimeoutsSending \n long getFaultsSending \n long getBytesSent \n long getLastResetTime \n void incrementFaultsSending \n void incrementFaultsSending \n long getMaxSizeReceived \n void incrementTimeoutsSending \n void incrementTimeoutsSending \n long getMinSizeReceived \n MessageLevelMetricsCollector getMsgLevelMetrics \n long getMinSizeSent \n long getTimeoutsReceiving \n void incrementMessagesReceived \n void incrementMessagesReceived \n void incrementBytesSent \n void incrementBytesSent \n long getMessagesReceived \n int getLevel \n long getFaultsReceiving \n long getMaxSizeSent \n void incrementMessagesSent \n void incrementMessagesSent \n void reset \n void notifySentMessageSize \n void notifySentMessageSize \n void reportResponseCode \n void reportResponseCode \n double getAvgSizeReceived \n void incrementTimeoutsReceiving \n void incrementTimeoutsReceiving", "output": ""}, {"instruction": "Generate java code\nremove and return one item from the set done in hash order . return null if there are no items in the set . ", "input": " Integer hashcode_cache \n HashMap<lalr_item,lalr_item> _all \n\n lalr_item add \n void add \n void not_null \n boolean is_superset_of \n void remove \n void remove \n Iterator<lalr_item> iterator \n boolean contains \n int size \n lalr_item find \n int hashCode \n boolean equals \n boolean equals \n boolean is_subset_of \n void compute_closure \n String toString", "output": ""}, {"instruction": "Generate java code\nthis field returns the uri associated with the connection in question . ", "input": " URI theURI \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nlogs the message prepended by the filter name copy of genericservlet #log string ", "input": " String LESS_PATH \n String[] LESS_JS \n Map<String,Long> lastModified \n Scriptable scope \n Function parse \n String CLASSPATH_PREFIX \n Pattern PATTERN_THEME_REQUEST \n FilterConfig config \n Map<String,String> cache \n Pattern PATTERN_THEME_REQUEST_PARTS \n\n void init \n URL findResource \n void compile \n String load \n void doFilter \n void destroy \n Scriptable compileCSS \n long getMaxLastModified", "output": ""}, {"instruction": "Generate java code\noverride only if needed - if claims are controlled by the identity provider , this will return null . if it is connector specific this must return the corresponding claim dialect . ", "input": " long serialVersionUID \n boolean jitProvisioningEnabled \n String PROVISIONING_USER \n String PROVISIONING_DOMAIN \n String PROVISIONING_IDP \n String PROVISIONING_TENANT \n\n void init \n String getPassword \n Map<String,String> getSingleValuedClaims \n String getDomainFromUserName \n List<String> getUserNames \n String removeDomainFromUserName \n boolean isJitProvisioningEnabled \n List<String> getGroupNames \n ProvisionedIdentifier provision \n String buildUserId \n String getUserStoreDomainName \n String[] buildProvisioningEntries", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gsvparser #getsatelliteinfo . ", "input": " GSVSentence gsv \n String EXAMPLE \n GSVSentence empty \n\n void testSetSatelliteCount \n void testIsFirst \n void testSetSatelliteInfo \n void testGetSentenceIndex \n void testGetSatelliteCount \n void testConstructor \n void testGetSatelliteInfo \n void testParserGlonassGSV \n void testGetSentenceCount \n void testGetSatelliteInfoWithEmptyFields \n void testSetSentenceCount \n void setUp \n void testIsLast \n void testSatelliteInfo", "output": ""}, {"instruction": "Generate java code\ntests the databytebuffer #getnettyoutput method . ", "input": " ByteBuffer mBuffer \n int LENGTH \n\n void before \n void length \n void readOnlyByteBuffer", "output": ""}, {"instruction": "Generate java code\nwhether logging is on or off . ", "input": " String CONFIG \n String MATCH \n String RENDER \n String CSS_PARSE \n List LOGGER_NAMES \n String EXCEPTION \n boolean loggingEnabled \n String XML_ENTITIES \n String JUNIT \n String INIT \n XRLogger loggerImpl \n String LOAD \n String LAYOUT \n String GENERAL \n String CASCADE \n boolean initPending \n\n void exception \n void exception \n XRLogger getLoggerImpl \n void init \n void init \n void init \n void init \n void junit \n void junit \n void junit \n List listRegisteredLoggers \n void cssParse \n void cssParse \n void cssParse \n void log \n void log \n void cascade \n void cascade \n void cascade \n void match \n void match \n void match \n void main \n String registerLoggerByName \n void setLevel \n void layout \n void layout \n void layout \n void setLoggingEnabled \n void general \n void general \n void general \n void load \n void load \n void load \n void setLoggerImpl \n void render \n void render \n void render \n void xmlEntities \n void xmlEntities \n void xmlEntities", "output": ""}, {"instruction": "Generate java code\nget the client configured for this issuer ", "input": " Map<String,RegisteredClient> clients \n\n void afterPropertiesSet \n Map<String,RegisteredClient> getClients \n void setClients", "output": ""}, {"instruction": "Generate java code\nhelper method to get a filename without its extension ", "input": " PlaceHolder placeHolder \n\n boolean findPatternInFile \n String readFilelist \n String normalizeFilename \n List<DataSource> collectFiles \n List<DataSource> collect", "output": ""}, {"instruction": "Generate java code\nchecks whether the class declares a field by the name given which is covered by the signature mask . ", "input": " Map<FieldSignature,Set<String>> fields \n Map<String,ClassStats> nestedClasses \n Map<ClassMetricKey,Double> memo \n Map<OperationSignature,Map<String,OperationStats>> operations \n\n double compute \n double compute \n void addOperation \n void addField \n ClassStats getNestedClassStats", "output": ""}, {"instruction": "Generate java code\ncall when the path itself has changed , but no structure changes have occurred . ", "input": " EventListenerList listeners \n\n void fireChildAdded \n void fireChildRemoved \n int getIndexOfChild \n void fireTreeStructureChanged \n void addTreeModelListener \n void fireNewRoot \n void fireChildrenAdded \n void removeTreeModelListener \n void fireChildrenChanged \n void fireChildrenRemoved \n Object clone \n void fireStructureChanged \n void firePathLeafStateChanged \n void fireChildChanged", "output": ""}, {"instruction": "Generate java code\ncalled as a result of a previous service removal request . ", "input": " int RETVAL_MALFORMED \n int RETVAL_OK \n int RETVAL_ERROR \n int RETVAL_NOENTRY \n\n void onServiceRegistration \n void onServiceAdd \n void onServiceUnregistration \n void onServiceDelayed \n void onServiceModify \n void onFlowStatUpdate \n String getRetvalString \n void onServiceGet", "output": ""}, {"instruction": "Generate java code\nsets the test id . ", "input": " String reason \n String feedId \n String testId \n String batchId \n String runStatus \n\n void setFeedId \n boolean isFeedRunnable \n String getReason \n String getRunStatus \n void setReason \n String getBatchId \n String toString \n String getFeedId \n void setBatchId \n String getTestId \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\ncloses all connections to remote hosts associated with this turn client . ", "input": " IoSession m_ioSession \n InetAddress m_publicAddress \n Map<InetAddress,InetAddress> m_permittedAddresses \n Set<InetAddress> m_trackedRemoteHosts \n Logger LOG \n InetSocketAddress m_mappedAddress \n Map<InetSocketAddress,IoSession> m_connections \n TcpAllocatedTurnServer m_allocatedTurnServer \n\n boolean hasActiveDestination \n void updateConnectionStatus \n void handleConnect \n InetSocketAddress getMappedAddress \n InetSocketAddress getRelayAddress \n void addConnection \n IoSession getIoSession \n boolean hasIncomingPermission \n void startServer \n void removeConnection \n int getNumConnections \n boolean write \n void close", "output": ""}, {"instruction": "Generate java code\nconvert a workflows list into a jsonarray . ", "input": " String user \n int run \n String appName \n Date lastModifiedTime \n String conf \n Status status \n String appPath \n String consoleUrl \n String externalId \n Date createdTime \n Date startTime \n String id \n Date endTime \n List<? extends JsonWorkflowAction> actions \n String group \n\n String getConsoleUrl \n void setActions \n String getUser \n String getAppPath \n String getId \n List<WorkflowAction> getActions \n void setRun \n String getExternalId \n Status getStatus \n void setAppPath \n Date getEndTime \n JSONObject toJSONObject \n void setId \n void setCreatedTime \n Date getStartTime \n void setStartTime \n void setExternalId \n void setUser \n int getRun \n List<WorkflowJob> fromJSONArray \n String getAppName \n void setAppName \n String getConf \n Date getLastModifiedTime \n void setLastModifiedTime \n void setConsoleUrl \n void setConf \n void setStatus \n void setGroup \n void setEndTime \n String getGroup \n String toString \n Date getCreatedTime", "output": ""}, {"instruction": "Generate java code\nis the gene mrna down-regulated ? ", "input": " RPPA rppaValue \n mutations isMutated \n String gene \n String mutationType \n String caseId \n CNA cnaValue \n GeneticEventComparator geneticEventComparator \n MRNA mrnaValue \n\n RPPA getRPPAValue \n boolean isMutated \n boolean isRPPADownRegulated \n String caseCaseId \n mutations getMutationValue \n MRNA getMrnaValue \n boolean isCnaAmplified \n void setGeneticEventComparator \n String getGene \n boolean isCnaHeterozygousDeleted \n boolean equals \n CNA getCnaValue \n String toString \n boolean isRPPAUpRegulated \n String getMutationType \n boolean isCnaHomozygouslyDeleted \n boolean isMRNAUpRegulated", "output": ""}, {"instruction": "Generate java code\nreturns the verb for the access token endpoint defaults to post ", "input": " PlaceHolder placeHolder \n\n TimestampService getTimestampService \n AccessTokenExtractor getAccessTokenExtractor \n String getAccessTokenEndpoint \n OAuthService createService \n String getAuthorizationUrl \n SignatureService getSignatureService \n BaseStringExtractor getBaseStringExtractor \n String getRequestTokenEndpoint \n RequestTokenExtractor getRequestTokenExtractor \n Verb getRequestTokenVerb \n HeaderExtractor getHeaderExtractor", "output": ""}, {"instruction": "Generate java code\nsets the cascade flag for this option . ", "input": " boolean mCascade \n\n DeleteLineageOptions defaults \n int hashCode \n boolean equals \n boolean isCascade \n String toString", "output": ""}, {"instruction": "Generate java code\nis the gene mrna upregulated ? ", "input": " RPPA rppaValue \n mutations isMutated \n String gene \n String mutationType \n String caseId \n CNA cnaValue \n GeneticEventComparator geneticEventComparator \n MRNA mrnaValue \n\n RPPA getRPPAValue \n boolean isMutated \n boolean isRPPADownRegulated \n String caseCaseId \n mutations getMutationValue \n MRNA getMrnaValue \n boolean isCnaAmplified \n void setGeneticEventComparator \n String getGene \n boolean isCnaHeterozygousDeleted \n boolean equals \n CNA getCnaValue \n boolean isMRNADownRegulated \n String toString \n boolean isRPPAUpRegulated \n String getMutationType \n boolean isCnaHomozygouslyDeleted", "output": ""}, {"instruction": "Generate java code\nreturn the workflow run number , unless a rerun it is always 1 . ", "input": " String WORKFLOW \n String ACTION_TRACKER_URI \n String LAST_ACTION_IN_ERROR \n String ACTION_PROTO_CONF \n String ACTION_DATA \n String ACTION_EXTERNAL_STATUS \n String ACTION_ERROR_CODE \n String ACTION_EXTERNAL_ID \n String ACTION \n String ACTION_ERROR_MESSAGE \n\n WorkflowJobBean getWorkflow \n String getActionVar \n String wf_callback \n void setActionInfo \n String wf_conf \n String wf_actionExternalStatus \n WorkflowActionBean getAction \n String wf_actionExternalId \n Configuration getProtoActionConf \n String wf_group \n String wf_transition \n String wf_lastErrorNode \n String wf_appPath \n String wf_errorCode \n void configureEvaluator \n String wf_id \n String wf_actionTrackerUri \n Map<String,String> wf_actionData \n String wf_name \n String wf_errorMessage \n String wf_user", "output": ""}, {"instruction": "Generate java code\ninserts a key into the heirarchy . used during deserialization : you normally do n't need this . keys must be inserted in order . ", "input": " int BIP32_STANDARDISATION_TIME_SECS \n Map<ImmutableList<ChildNumber>,DeterministicKey> keys \n ImmutableList<ChildNumber> rootPath \n Map<ImmutableList<ChildNumber>,ChildNumber> lastChildNumbers \n\n ChildNumber getNextChildNumberToDerive \n DeterministicKey get \n DeterministicKey getRootKey \n DeterministicKey deriveChild \n DeterministicKey deriveChild \n int getNumChildren \n DeterministicKey deriveNextChild", "output": ""}, {"instruction": "Generate java code\ngets the test result lst . ", "input": " Long totalElapsedMinutes \n List<TestResultDTO> testResultLst \n String startTime \n String endTime \n Long batchId \n String batchStatus \n Long totalElapsedSeconds \n\n void setBatchStatus \n Long getTotalElapsedSeconds \n void setBatchId \n void setTotalElapsedMinutes \n void setTestResultLst \n String getEndTime \n Long getTotalElapsedMinutes \n void setEndTime \n Long getBatchId \n void setTotalElapsedSeconds \n String toString \n String getStartTime \n void setStartTime \n String getBatchStatus", "output": ""}, {"instruction": "Generate java code\nget the encryptedkeyelement object of the keyinfoelement object ", "input": " EncryptedKeyElement m_EncryptedKeyElement \n Element m_KeyInfoEl \n Logger LOG \n\n Element getKeyInfoElement", "output": ""}, {"instruction": "Generate java code\nadd an image url that failed loading to be tracked ", "input": " HashSet<String> failedImages \n\n boolean failed", "output": ""}, {"instruction": "Generate java code\nsetter for property ` currentscenario ' . ", "input": " String summary \n boolean isCurrentScenario \n List<String> services \n String wsuId \n List<String> modules \n String description \n boolean isGeneralPolicy \n String category \n String type \n String scenarioId \n\n void setSummary \n String getSummary \n boolean isCurrentScenario \n List<String> getModules \n String getCategory \n void setCurrentScenario \n void setDescription \n void setType \n String getDescription \n void addModule \n boolean getGeneralPolicy \n void addService \n void setCategory \n String getType \n String getScenarioId \n void setScenarioId \n boolean getIsCurrentScenario \n void setGeneralPolicy \n List<String> getServices \n void setWsuId \n String getWsuId", "output": ""}, {"instruction": "Generate java code\nreads file of words to ignore . ignore words are added to a set . the ioexception is passed to caller because we certinaly do n't know what the user interface issue is . ", "input": " Comparator<Map.Entry<String,Int>> SORT_ALPHABETICALLY \n int _totalWords \n Set<String> _ignoreWords \n Comparator<Map.Entry<String,Int>> SORT_BY_FREQUENCY \n Map<String,Int> _wordFrequency \n\n void countWords \n void countWords \n int getWordCount \n void getWordFrequency \n int[] getFrequencies \n int getEntryCount \n String[] getWords", "output": ""}, {"instruction": "Generate java code\nsets the checksum . ", "input": " String comments \n String inactivationReasonType \n Timestamp receiptDate \n String isActive \n BigDecimal predecessorId \n String srcFileName \n long serialVersionUID \n String srcUniqueFileName \n BigDecimal successorId \n Timestamp createdDate \n List<PCLDataUnitEntity> pclDataUnits \n long dataSetId \n BigDecimal feedId \n BigDecimal fileSize \n String destFileName \n String checksum \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isUpdate \n String receiptDateType \n String status \n\n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n long getDataSetId \n void setReceiptDateType \n void setIsPrepopulated \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getStatus \n String getDestFileName \n String getIsUpdate \n BigDecimal getFileSize \n List<PCLDataUnitEntity> getPclDataUnits \n void setPclDataUnits \n void setInactivationReasonType \n Timestamp getReceiptDate \n String getComments \n Timestamp getCreatedDate \n void setComments \n PCLDataUnitEntity removePclDataUnit \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setRunId \n void setReceiptDate \n void setStatus \n Timestamp getModifiedDate \n String getIsActive \n void setSuccessorId \n void setDestFileName \n PCLDataUnitEntity addPclDataUnit \n void setModifiedDate \n void setCreatedDate \n void setDataSetId \n void setPredecessorId \n void setIsActive \n void setChecksumType", "output": ""}, {"instruction": "Generate java code\nperform the actual transformation ", "input": " File PWD \n Map<String,Object> parameters \n Transformation transformation \n\n R withExceptionHandling \n void setOutputProperties \n R transform \n String getDefaultSystemId \n void setParameter \n void setErrorListener \n void setOutputProperty \n void clearParameters \n Document getResultDocument \n String getResultString \n void setURIResolver \n void provideSystemIdIfRequired \n Object getParameter", "output": ""}, {"instruction": "Generate java code\nremove a node ", "input": " Map<String,Node> nodesByIds \n Graph<Node,Edge> graph \n\n Collection<Node> getNodes \n Node[] getNodes \n void addNode \n Collection findEdgeSet \n Node getNodeById \n Collection<Node> getNeighbors \n boolean removeEdge \n int countNodes \n int countNodes \n int getDegree \n Node getOpposite \n Collection<Edge> getEdges \n void addEdge \n int coundEdges \n Collection<Edge> getIncidentEdges", "output": ""}, {"instruction": "Generate java code\nadd a ruleset for a language . only one ruleset can be added for a specific language . if ruleset.getlanguage is null , it is assumed to be a ruleset of java rules . ", "input": " List<RuleSet> ruleSets \n RuleChain ruleChain \n\n boolean usesTypeResolution \n void apply \n void start \n boolean usesDFA \n Rule getRuleByName \n RuleSet[] getAllRuleSets \n boolean usesMetrics \n long getChecksum \n int ruleCount \n boolean applies \n Iterator<RuleSet> getRuleSetsIterator \n void end \n void removeDysfunctionalRules \n Set<Rule> getAllRules", "output": ""}, {"instruction": "Generate java code\nupdates the internal state of this namespacehelper to reflect the existance of the xml token pointed to by the cursor . ", "input": " XMLLibImpl lib \n Set undeclared \n Map prefixToURI \n Map uriToPrefix \n\n Namespace getNamespace \n Object[] namespaceDeclarations \n void getNamespaces \n Map getAllNamespaces \n void removeNamespace \n void update \n Object[] inScopeNamespaces \n void declareNamespace", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getofferdetailsresponse.return.detailofferdata ", "input": " PlaceHolder placeHolder \n\n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos \n GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia \n GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue \n GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity \n GetOfferDetailsResponse createGetOfferDetailsResponse \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem \n GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses \n GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "output": ""}, {"instruction": "Generate java code\nreturns a supplier whose get method synchronizes on delegate before callingit , making it thread-safe . ", "input": " long serialVersionUID \n Supplier<T> delegate \n long expirationNanos \n long durationNanos \n T instance \n Function<? super F,T> function \n Supplier<F> supplier \n boolean initialized \n T value \n\n Supplier<T> ofInstance \n Function<Supplier<T>,T> supplierFunction \n Supplier<T> compose \n Object apply \n int hashCode \n int hashCode \n T get \n T get \n T get \n T get \n T get \n T get \n boolean equals \n boolean equals \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n Supplier<T> memoizeWithExpiration \n Supplier<T> memoize", "output": ""}, {"instruction": "Generate java code\nconvert a categorical distribution into a column vector in matrix form . ", "input": " Map<Object,Matrix> sensorModel \n FiniteDomain stateVariableDomain \n Matrix prior \n RandomVariable stateVariable \n Matrix transitionModel \n\n Matrix getEvidence \n Matrix getTransitionModel \n Map<Object,Matrix> getSensorModel \n Matrix createUnitMessage \n Matrix normalize \n Matrix getPrior \n RandomVariable getStateVariable", "output": ""}, {"instruction": "Generate java code\nretrieves the results of last evaluation . ", "input": " List<Node> evaluationResults \n List<ViewerModelListener> listeners \n Logger LOGGER \n Node rootNode \n\n void fireViewerModelEvent \n void removeViewerModelListener \n void appendToXPathExpression \n void selectNode \n void addViewerModelListener \n void commitSource \n boolean hasCompiledTree \n void evaluateXPathExpression \n Node getRootNode", "output": ""}, {"instruction": "Generate java code\ncheck whether the tracker is started . ", "input": " AxisServiceFilter filter \n AxisServiceTrackerListener listener \n Queue<Runnable> pendingActions \n Set<AxisService> services \n AxisConfiguration config \n Object lock \n AxisObserver observer \n\n void deserializeParameters \n void init \n boolean isParameterLocked \n void serviceAdded \n void serviceGroupUpdate \n void moduleUpdate \n void start \n void addParameter \n void stop \n ArrayList<Parameter> getParameters \n void serviceRemoved \n void serviceUpdate \n void removeParameter \n Parameter getParameter", "output": ""}, {"instruction": "Generate java code\nensure that there is enough space available to write the requested number of bytes . if necessary the internal buffer is resized . ", "input": " ByteBuffer mWriter \n byte[] mBuffer \n\n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter putLen8 \n BufferedByteWriter put16 \n BufferedByteWriter put16 \n BufferedByteWriter putLen16 \n byte[] toByteArray \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put \n BufferedByteWriter put \n BufferedByteWriter put32 \n BufferedByteWriter put32 \n BufferedByteWriter put32", "output": ""}, {"instruction": "Generate java code\nthrows an exception if the current token is not a string . otherwise , returns that string and moves to the next token . ", "input": " StreamTokenizer tok \n Collection<String> keywords \n\n boolean matchDelim \n boolean matchIntConstant \n void eatDelim \n int eatIntConstant \n boolean matchKeyword \n void nextToken \n void initKeywords \n boolean matchStringConstant \n void eatKeyword \n boolean matchId \n String eatId", "output": ""}, {"instruction": "Generate java code\na proxy method that adds the node n to the graph being tested . in case of immutablegraph implementations , this method should add n to the graph builder and build a newgraph with the current builder state . ", "input": " String ERROR_ELEMENT_NOT_IN_GRAPH \n MutableGraph<Integer> graph \n String ERROR_SELF_LOOP \n String ERROR_ADDED_SELF_LOOP \n Integer N1 \n String ERROR_MODIFIABLE_SET \n Integer N4 \n String ERROR_NODE_NOT_IN_GRAPH \n Integer N5 \n Integer NODE_NOT_IN_GRAPH \n Integer N2 \n String NODE_STRING \n Integer N3 \n\n void degree_isolatedNode \n void removeEdge_existingEdge \n void adjacentNodes_checkReturnedSetMutability \n boolean putEdge \n void successors_checkReturnedSetMutability \n void removeNode_queryAfterRemoval \n void predecessors_noPredecessors \n void removeNode_existingNode \n void validateGraphState \n void nodes_oneNode \n void outDegree_isolatedNode \n void successors_noSuccessors \n void adjacentNodes_oneEdge \n void inDegree_isolatedNode \n void removeNode_nodeNotPresent \n void assertNodeNotInGraphErrorMessage \n void init \n void nodes_noNodes \n void removeEdge_oneOfMany \n void removeEdge_edgeNotPresent \n void predecessors_checkReturnedSetMutability \n void predecessors_nodeNotInGraph \n void outDegree_nodeNotInGraph \n void successors_nodeNotInGraph \n void degree_nodeNotInGraph \n void adjacentNodes_nodeNotInGraph \n void addNode_newNode \n void inDegree_nodeNotInGraph \n MutableGraph<Integer> createGraph \n void adjacentNodes_noAdjacentNodes \n void nodes_checkReturnedSetMutability \n void degree_oneEdge \n void removeEdge_nodeNotPresent \n void removeNode_antiparallelEdges \n void validateGraph \n void addNode_existingNode", "output": ""}, {"instruction": "Generate java code\ngets the custom produces media types ", "input": " List<String> produceMediaTypes \n Bus bus \n List<String> consumeMediaTypes \n boolean enableStreaming \n ResourceBundle BUNDLE \n boolean enableBuffering \n Logger LOG \n\n void init \n Bus getBus \n void setConsumeMediaTypes \n void setEnableBuffering \n boolean getEnableStreaming \n void setEnableStreaming \n void setBus \n void setProduceMediaTypes \n List<String> getConsumeMediaTypes \n boolean getEnableBuffering \n boolean isPayloadEmpty \n boolean isPayloadEmpty \n void reportEmptyContentLength", "output": ""}, {"instruction": "Generate java code\nparses an entire json object in the format described by json communication structure ", "input": " Collection<Command> NULL_PLAYERID_COMMANDS \n Collection<Command> NO_PLAYERID_COMMANDS \n\n Message parseJSONValueToMessage \n void validateObjectField \n void validateType \n boolean validateType \n Message parseOuterJSONObjectToMessage \n void validatePayloadType \n Payload parsePayload \n Payload singleIntegerPayload \n Message parseOuterMesage \n String stringifyMessage", "output": ""}, {"instruction": "Generate java code\nsets up internal data structures and creates a copy of the input matrix . ", "input": " double gammasV[] \n int min \n double gammasU[] \n double b[] \n double u[] \n DenseMatrix64F UBV \n int m \n int n \n\n DenseMatrix64F handleV \n DenseMatrix64F handleU \n boolean decompose \n void getDiagonal \n boolean _decompose \n boolean inputModified \n DenseMatrix64F getU \n DenseMatrix64F getV \n DenseMatrix64F handleB \n void computeV \n void computeU \n DenseMatrix64F getUBV \n double[] getGammasU \n DenseMatrix64F getB \n double[] getGammasV", "output": ""}, {"instruction": "Generate java code\nconvert to a string . ", "input": " String _label \n\n boolean is_action \n int hashCode \n boolean equals \n boolean equals \n String label", "output": ""}, {"instruction": "Generate java code\nreturns the url of an image for the mediainfo at the given index . index should be anumber between 0 and n-1 where n is the number of images for that given item . ", "input": " String KEY_CONTENT_TYPE \n String KEY_TRACK_ID \n String KEY_TRACKS_DATA \n String KEY_CUSTOM_DATA \n String KEY_TRACK_LANGUAGE \n String KEY_STREAM_TYPE \n String KEY_TRACK_CONTENT_ID \n String KEY_IMAGES \n String TAG \n String KEY_TRACK_TYPE \n String KEY_TRACK_NAME \n String KEY_URL \n String KEY_TRACK_SUBTYPE \n String KEY_TRACK_CUSTOM_DATA \n String KEY_STREAM_DURATION \n boolean IS_KITKAT_OR_ABOVE \n\n String formatMillis \n Bundle mediaInfoToBundle \n String getWifiSsid \n MediaInfo bundleToMediaInfo \n void showToast \n Uri getImageUri \n boolean checkGooglePlayServices \n int convertDpToPixel \n Bitmap scaleAndCenterCropBitmap", "output": ""}, {"instruction": "Generate java code\nget total elapsed . ", "input": " AtomicInteger failed \n AtomicLong totalElapsed \n AtomicInteger active \n AtomicLong succeededMaxElapsed \n ConcurrentMap<String,RpcStatus> SERVICE_STATISTICS \n ConcurrentMap<String,ConcurrentMap<String,RpcStatus>> METHOD_STATISTICS \n ConcurrentMap<String,Object> values \n AtomicLong total \n AtomicLong failedElapsed \n AtomicLong maxElapsed \n AtomicLong failedMaxElapsed \n\n long getFailedAverageElapsed \n long getSucceededMaxElapsed \n void set \n long getSucceededElapsed \n long getSucceeded \n long getSucceededAverageElapsed \n long getMaxElapsed \n RpcStatus getStatus \n RpcStatus getStatus \n void removeStatus \n void removeStatus \n long getAverageTps \n long getFailedElapsed \n long getFailedMaxElapsed \n Object get \n void endCount \n void endCount \n long getAverageElapsed \n int getActive \n long getTotal \n void beginCount \n void beginCount \n int getFailed", "output": ""}, {"instruction": "Generate java code\nskips any comment lines and retrieves a data line from the unmapped file created by liftover . ", "input": " PlaceHolder placeHolder \n\n boolean sizeMismatch \n void main \n void updatePositions \n boolean isUnmapped \n Integer getNextModRow", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.vtgparser #setmagneticcourse double . ", "input": " String EXAMPLE \n VTGSentence vtg \n VTGSentence empty \n\n void testGetMagneticCourse \n void testGetSpeedKmh \n void testGetSpeedKnots \n void testSetMagneticCourseWithNegativeValue \n void testSetMagneticCourseWithValueGreaterThanAllowed \n void testSetSpeedKmhWithNegativeValue \n void testSetSpeedKnotsWithNegativeValue \n void testConstructor \n void testGetTrueCourse \n void testSetSpeedKmh \n void testSetMode \n void testSetModeWhenOmitted \n void testSetTrueCourseWithNegativeValue \n void setUp \n void testSetSpeedKnots \n void testSetTrueCourse \n void testGetMode \n void testSetTrueCourseWithValueGreaterThanAllowed", "output": ""}, {"instruction": "Generate java code\nsets messagecontext ", "input": " MessageContext mc \n\n String getUpdated \n String getTitle \n Map<String,String> getLinks \n String getAuthor \n List<String> getCategories \n MessageContext getMessageContext \n String getId \n String getBaseUri", "output": ""}, {"instruction": "Generate java code\nreturns the hash code for the ttlbucket . ", "input": " Set<InodeFile> mFiles \n long sTtlIntervalMs \n long mTtlIntervalStartTimeMs \n\n void removeFile \n long getTtlIntervalMs \n boolean equals \n int compareTo \n Set<InodeFile> getFiles \n long getTtlIntervalStartTimeMs \n long getTtlIntervalEndTimeMs \n void addFile", "output": ""}, {"instruction": "Generate java code\nreturns the specified singular value . ", "input": " SingularValueDecomposition<DenseMatrix64F> svd \n DenseMatrix64F mat \n T U \n T V \n T W \n\n T getV \n T getW \n SingularValueDecomposition getSVD \n int rank \n SimpleMatrix nullSpace \n int nullity \n T getU \n double quality", "output": ""}, {"instruction": "Generate java code\nget all the rulesets . ", "input": " List<RuleSet> ruleSets \n RuleChain ruleChain \n\n boolean usesTypeResolution \n void apply \n void start \n boolean usesDFA \n Rule getRuleByName \n boolean usesMetrics \n long getChecksum \n void addRuleSet \n int ruleCount \n boolean applies \n Iterator<RuleSet> getRuleSetsIterator \n void end \n void removeDysfunctionalRules \n Set<Rule> getAllRules", "output": ""}, {"instruction": "Generate java code\ngets the value of the given parameter as an integer ", "input": " String rawParameters \n boolean hasArgs \n HashMap<String,String> params \n String command \n String rawCommand \n\n String[] getExternalArgs \n long getLong \n boolean hasArguments \n boolean isSet \n String getCommand \n boolean isValid \n String[] getExternalCommand \n String toString \n String getString \n String parameters \n boolean getBool \n void parseCommand", "output": ""}, {"instruction": "Generate java code\nchecks whether these bits imply the given bits . ", "input": " Bits mOwnerBits \n Bits mGroupBits \n Bits[] SVALS \n Bits mOtherBits \n String mString \n\n Bits extractOtherBits \n boolean tryParseInt \n Bits or \n void set \n Bits extractOwnerBits \n Mode applyUMask \n Mode applyUMask \n void setOtherBits \n Bits getOtherBits \n Mode getDefault \n Mode createFullAccess \n Bits getGroupBits \n Bits extractGroupBits \n Bits getOwnerBits \n void setOwnerBits \n Bits not \n void fromShort \n Bits and \n int hashCode \n void setGroupBits \n boolean equals \n Mode getUMask \n String toString \n String toString \n short toShort \n Mode createNoAccess", "output": ""}, {"instruction": "Generate java code\nthis method is called before the connection is disconnected . implementations should add any additional operations before the connection is disconnected . ", "input": " Pattern FRAME_SIZE_EXCEPTION_PATTERN \n boolean mConnected \n TProtocol mProtocol \n String mMode \n long mServiceVersion \n InetSocketAddress mAddress \n TransportProvider mTransportProvider \n Logger LOG \n int RPC_MAX_NUM_RETRY \n boolean mClosed \n\n void disconnect \n void afterDisconnect \n void afterConnect \n void checkVersion \n String getServiceName \n boolean isConnected \n AlluxioService.Client getClient \n V call \n V call \n V retryRPC \n V retryRPC \n long getServiceVersion \n void resetConnection \n InetSocketAddress getAddress \n void close \n void connect", "output": ""}, {"instruction": "Generate java code\nsets the checks if is active . ", "input": " String comments \n String inactivationReasonType \n Timestamp receiptDate \n String isActive \n BigDecimal predecessorId \n String srcFileName \n long serialVersionUID \n String srcUniqueFileName \n BigDecimal successorId \n Timestamp createdDate \n List<PCLDataUnitEntity> pclDataUnits \n long dataSetId \n BigDecimal feedId \n BigDecimal fileSize \n String destFileName \n String checksum \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isUpdate \n String receiptDateType \n String status \n\n void setFeedId \n String getInactivationReasonType \n String getSrcUniqueFileName \n long getDataSetId \n void setReceiptDateType \n void setIsPrepopulated \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getStatus \n String getDestFileName \n String getIsUpdate \n BigDecimal getFileSize \n List<PCLDataUnitEntity> getPclDataUnits \n void setPclDataUnits \n void setInactivationReasonType \n Timestamp getReceiptDate \n String getComments \n Timestamp getCreatedDate \n void setComments \n PCLDataUnitEntity removePclDataUnit \n BigDecimal getSuccessorId \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setFileSize \n BigDecimal getPredecessorId \n void setChecksum \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setRunId \n void setReceiptDate \n void setStatus \n Timestamp getModifiedDate \n String getIsActive \n void setSuccessorId \n void setDestFileName \n PCLDataUnitEntity addPclDataUnit \n void setModifiedDate \n void setCreatedDate \n void setDataSetId \n void setPredecessorId \n void setChecksumType", "output": ""}, {"instruction": "Generate java code\nreturns the next value of the current log record , assuming it is a string . ", "input": " int pos \n Page pg \n\n int nextInt", "output": ""}, {"instruction": "Generate java code\ncreates a cascadedstyle , setting the display property to to the value of the display parameter . ", "input": " Map cascadedProperties \n String fingerprint \n CascadedStyle emptyCascadedStyle \n\n PropertyDeclaration createLayoutPropertyDeclaration \n java.util.Iterator getCascadedPropertyDeclarations \n PropertyDeclaration propertyByName \n CascadedStyle createLayoutStyle \n CascadedStyle createLayoutStyle \n CascadedStyle createLayoutStyle \n int countAssigned \n void addProperties \n boolean hasProperty \n String getFingerprint \n IdentValue getIdent", "output": ""}, {"instruction": "Generate java code\nreturns short message of the log record . ", "input": " String LEVEL_TAG \n String level \n String MESSAGE_TAG \n String throwable \n String THROWABLE_TAG \n String title \n String message \n LazyXmlParser xmlParser \n String EVENT_TIMESTAMP_TAG \n DateTimeFormat DATETIME_FORMATTER \n String TITLE_TAG \n Node entryNode \n Date eventTimestamp \n\n String getTextValue \n String getLevel \n String getLevel \n String avoidNull \n String getTagValue \n Date getEventTimestamp \n Date getEventTimestamp \n String getMessage \n String getMessage \n Node getUniqueElementByTagName \n String getThrowable \n String getThrowable", "output": ""}, {"instruction": "Generate java code\nputs a new value in the property table with the appropriate flags ", "input": " Object DELETED \n int _size \n int[] _values \n int _mask \n int NULL \n Object[] _keys \n\n int size \n void clear \n void resize \n String toString \n int put \n int remove", "output": ""}, {"instruction": "Generate java code\nget the current placement hint . ", "input": " int edgeOffset \n FigNode figure \n float UPLINK_FACTOR \n List<ClassdiagramNode> uplinks \n int rank \n List<ClassdiagramNode> downlinks \n int NORANK \n int column \n int placementHint \n float weight \n int NOCOLUMN \n int NOWEIGHT \n\n Vector<ClassdiagramNode> getUplinks \n Point getLocation \n boolean isComment \n List<ClassdiagramNode> getUpNodes \n float getWeight \n FigNode getFigure \n Vector<ClassdiagramNode> getDownlinks \n int compareTo \n void setColumn \n void addDownlink \n void setLocation \n void setEdgeOffset \n boolean isStandalone \n int getColumn \n float getSubtreeWeight \n float calculateWeight \n void setRank \n void addRank \n int getTypeOrderNumer \n int getEdgeOffset \n int getRank \n void setWeight \n boolean isPackage \n void addUplink \n int getLevel \n Dimension getSize \n void setPlacementHint \n void setFigure \n List<ClassdiagramNode> getDownNodes", "output": ""}, {"instruction": "Generate java code\ncalls each of the registered servicecontractresolver instances to resolve the location of the service 's contract . it returns the location from the first resolver that matches the qname to a location . ", "input": " Bus bus \n List<ServiceContractResolver> resolvers \n\n void unregister \n boolean isRegistered \n List<ServiceContractResolver> getResolvers \n void setBus \n void register", "output": ""}, {"instruction": "Generate java code\ntests if the game is finished . the game is finished if neither side has a legal move . ", "input": " BitSet taken \n BitSet black \n\n int countBlack \n void move \n void set \n boolean get \n boolean checkMove \n boolean onBoard \n OthelloBoard copy \n int countWhite \n boolean hasMoves \n boolean occupied", "output": ""}, {"instruction": "Generate java code\ntest of getresourcebundleasproperties method , of class dbtype . ", "input": " File absoluteFile \n Properties testProperties \n Properties includeProperties \n\n void testGetIncludeProperties \n void testGetProperties \n void testGetPropertiesFromFile \n void setUp \n void tearDown", "output": ""}, {"instruction": "Generate java code\nadds a task to the queue and makes sure a worker thread is running , unless the queue has been suspended . if this method throws , e.g. a rejectedexecutionexception from the delegate executor , execution of tasks will stop until a call to this method or to #resume is made . ", "input": " boolean isWorkerRunning \n Deque<Runnable> queue \n Executor executor \n Object internalLock \n int suspensions \n Logger log \n\n void suspend \n void resume \n void executeFirst \n void startQueueWorker \n void run \n void workOnQueue", "output": ""}, {"instruction": "Generate java code\nset the date that this token expires ", "input": " TokenReference unAttachedReference \n Date expires \n String tokenId \n Date created \n long lifetime \n TokenReference attachedReference \n Element token \n\n void setAttachedReference \n String getTokenId \n TokenReference getUnAttachedReference \n long getLifetime \n Date getCreated \n void setCreated \n void setUnattachedReference \n void setToken \n Element getToken \n void setLifetime \n void setTokenId \n Date getExpires \n TokenReference getAttachedReference", "output": ""}, {"instruction": "Generate java code\nideally this should be configurable . for the moment , hard code the priority . ", "input": " int DEFAULT_PRIORITY \n String BASIC_AUTH_HEADER \n Log log \n int priority \n Map<String,String> properties \n\n boolean canHandle \n void setProperties \n void setDefaultPriority \n boolean isAuthenticated \n void setPriority", "output": ""}, {"instruction": "Generate java code\nreturns dividend / divisor , where the dividend and divisor are treated as unsigned 32-bit quantities . ", "input": " long INT_MASK \n\n int compare \n int compare \n int saturatedCast \n long toLong \n int max \n int decode \n int parseUnsignedInt \n int parseUnsignedInt \n int min \n Comparator<int[]> lexicographicalComparator \n int checkedCast \n String toString \n String toString \n String toString \n String join \n int flip \n int remainder", "output": ""}, {"instruction": "Generate java code\ninsist that a type is a parameterized type of one parameter . this is used to decompose holders , for example . ", "input": " Logger LOG \n\n AegisType getReadType \n AegisType getReadTypeStandalone \n AegisType getWriteType \n Class<?> getTypeClass \n void setAttributeAttributes \n Class<?> getTypeRelatedClass \n AegisType getWriteTypeStandalone \n AegisType getWriteTypeStandalone", "output": ""}, {"instruction": "Generate java code\nallow writing of collections when the type of the collection object is known via an java.lang.reflect.type object . ", "input": " Logger LOG \n\n AegisType getReadType \n AegisType getReadTypeStandalone \n AegisType getWriteType \n Class<?> getTypeClass \n void setAttributeAttributes \n Type getSingleTypeParameter \n Type getSingleTypeParameter \n Class<?> getTypeRelatedClass", "output": ""}, {"instruction": "Generate java code\ngenerates and returns a new sequence identifier . ", "input": " RMEndpoint reliableEndpoint \n AtomicInteger completedSequenceCount \n AtomicInteger processingSequenceCount \n\n RMEndpoint getReliableEndpoint \n RMManager getManager \n Bus getBus \n String getName \n int getProcessingSequenceCount \n Endpoint getEndpoint \n int getCompletedSequenceCount", "output": ""}, {"instruction": "Generate java code\nreturns the number of distinct field values in the sorted table , which is the same as in the underlying query . ", "input": " Plan p \n RecordComparator comp \n Transaction tx \n Schema sch \n\n Schema schema \n List<TempTable> splitIntoRuns \n int blocksAccessed \n int recordsOutput \n boolean copy \n List<TempTable> doAMergeIteration \n TempTable mergeTwoRuns \n Scan open", "output": ""}, {"instruction": "Generate java code\nhashes a key in bytebuffer into a non-zero , one byte fingerprint . ", "input": " int mKeyCount \n int BUCKET_SIZE_BYTES \n ByteBuffer mBuf \n int INDEX_HASHER_SEED \n int FINGERPRINT_HASHER_SEED \n HashFunction FINGERPRINT_HASHER \n HashFunction INDEX_HASHER \n ByteBuffer mHashTableBuf \n int MAX_PROBES \n int mNumBuckets \n\n int keyCount \n Iterator<ByteBuffer> keyIterator \n int bucketOffset \n LinearProbingIndex createEmptyIndex \n LinearProbingIndex loadFromByteArray \n int byteCount \n ByteBuffer get \n int indexHash \n int indexHash \n ByteBuffer nextKey \n boolean put \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\ntests that block locks are not returned to the pool when they are still in use . ", "input": " BlockLockManager mLockManager \n long TEST_BLOCK_ID \n ExpectedException mThrown \n long TEST_SESSION_ID \n TemporaryFolder mFolder \n\n void lockAcrossSessions \n void stress \n void validateLockIdWithNoRecord \n void unlockNonExistingLock \n void before \n void reuseLock \n void readBlocksWrite \n void validateLockIdWithWrongBlockId \n void setMaxLocks \n void lockExpectingHang \n void lockBlock \n void grabManyLocks \n void validateLockIdWithWrongSessionId \n void cleanupSession \n void after", "output": ""}, {"instruction": "Generate java code\nreturns a string , of length at least minlength , consisting of string prependedwith as many copies of padchar as are necessary to reach that length . for example , padstart `` 7 '' , 3 , ' 0 ' returns `` 007 '' padstart `` 2010 '' , 3 , ' 0 ' returns `` 2010 '' see java.util.formatter for a richer set of formatting capabilities . ", "input": " PlaceHolder placeHolder \n\n String nullToEmpty \n String commonPrefix \n boolean isNullOrEmpty \n boolean validSurrogatePairAt \n String repeat \n String commonSuffix \n String emptyToNull \n String padEnd", "output": ""}, {"instruction": "Generate java code\ntest whether the device has a working pressure sensor ", "input": " PenEvent mPenEvent \n String TAG \n HardwareButtonListener buttonListener \n String KEY_OVERRIDE_PEN_TYPE \n String PEN_TYPE_ICS \n boolean mHasPenDigitizer \n String PEN_TYPE_THINKPAD_TABLET \n boolean mHasPressureSensor \n ArrayList<String> tabletMODELwithoutPressure \n String PEN_TYPE_SAMSUNG_NOTE \n String PEN_TYPE_HTC \n String PEN_TYPE_CAPACITIVE \n Hardware instance \n String PEN_TYPE_LEFT_ALT \n String model \n long serialVersionUID \n String PEN_TYPE_AUTO \n\n boolean onKeyDown \n boolean isPenEvent \n boolean onKeyUp \n boolean isPenButtonPressed \n void forceCapacitivePen \n void addViewHack \n void forceFromPreferences \n void forceSamsungNote \n boolean hasPenDigitizer \n void setOnHardwareButtonListener \n void forceLeftAlt \n void autodetect \n void forceThinkpadTablet \n void forceICS \n void callOnHardwareButtonListener \n void forceHTC \n Hardware getInstance", "output": ""}, {"instruction": "Generate java code\nregister item in the matrix ", "input": " int swu \n int matrixItemRemainingUtility[][] \n int matrixItemUtility[][] \n int[] itemNames \n\n String toString", "output": ""}, {"instruction": "Generate java code\nrestores errorlevel to folder one ", "input": " int errorLevelFolder \n String tooltip \n int errorLevel \n String value \n\n void setKO \n void setKO \n boolean isWarning \n void setErrorLevel \n int getErrorLevel \n String analyseTrack \n String analyseTrackYear \n String formatNumber \n String colorField \n String colorField \n String getValue \n String analyseTrackComment \n String analyseTrackBpm \n int hashCode \n void setValue \n boolean equals \n String getDisplayToolTip \n void setOK \n String toString \n boolean isNotValid \n Color getDisplayColor \n String analyseTrackNumber \n String getDisplayText \n void setWarning \n void setWarning \n String analyseTrackString \n boolean isKO", "output": ""}, {"instruction": "Generate java code\nif field is not found in header or data line , or is empty , it just returns empty field value `` na '' . ", "input": " long NA_LONG \n String NA_STRING \n int NA_INT \n float NA_FLOAT \n\n Float getPartPercentage \n Float getPartFloat \n String adjustDataLine \n Long getPartLong \n Float getPartFloat2 \n String getPartStringAllowEmpty \n Integer getPartInt", "output": ""}, {"instruction": "Generate java code\nsets the expected data unit id . ", "input": " Long expectedDataUnitId \n Long seqNo \n Long dataSetId \n Long dataUnitId \n String expectedValue \n String actualValue \n Long expectedDataSetId \n String errorCode \n Long testId \n String failedAttributeName \n String srcFileName \n String errorMsg \n\n void setExpectedValue \n String getExpectedValue \n Long getExpectedDataSetId \n void setExpectedDataSetId \n void setActualValue \n Long getDataSetId \n void setSrcFileName \n Long getExpectedDataUnitId \n String getSrcFileName \n Long getSeqNo \n String getFailedAttributeName \n void setTestId \n void setFailedAttributeName \n Long getTestId \n void setErrorCode \n String getActualValue \n Long getDataUnitId \n void setSeqNo \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setDataSetId \n String toString \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nhelper function for null test . throws an interal_error exception if its parameter is null . ", "input": " Integer hashcode_cache \n HashMap<lalr_item,lalr_item> _all \n\n lalr_item add \n void add \n boolean is_superset_of \n void remove \n void remove \n Iterator<lalr_item> iterator \n boolean contains \n int size \n lalr_item find \n int hashCode \n lalr_item get_one \n boolean equals \n boolean equals \n boolean is_subset_of \n void compute_closure \n String toString", "output": ""}, {"instruction": "Generate java code\nqueues up a save in the background . useful for not very important wallet changes . ", "input": " AtomicBoolean savePending \n TimeUnit delayTimeUnit \n Wallet wallet \n File file \n long delay \n ScheduledThreadPoolExecutor executor \n Callable<Void> saver \n Logger log \n Listener vListener \n\n void onAfterAutoSave \n void saveNowInternal \n void shutdownAndWait \n void setListener \n void saveNow \n void onBeforeAutoSave", "output": ""}, {"instruction": "Generate java code\ntests symmranknminus_u with various sized input matrices ", "input": " int N \n Random rand \n\n void checkSymmRankNMinus_U \n void rankNUpdate \n void symmRankNMinus_L \n void checkRankNUpdate \n void checkSymmRankNMinus_L", "output": ""}, {"instruction": "Generate java code\nreturn true if this goal conflicts with the other ; that is passes running over both goals could access the same data . ", "input": " Set<Goal> prerequisites \n Set<Goal> corequisites \n String name \n int state \n Job job \n\n Collection<Goal> corequisiteGoals \n void setUnreachable \n boolean isReachable \n void addPrerequisiteGoal \n void setUnreachableThisRun \n String stateString \n void addCorequisiteGoal \n int hashCode \n Pass createPass \n Collection<Goal> prerequisiteGoals \n void checkCycles \n boolean hasBeenReached \n boolean equals \n String name \n void setState \n String toString \n int state \n Job job", "output": ""}, {"instruction": "Generate java code\ngets the value of the workflowimplid property . ", "input": " MetaData.Template template \n MetaData.WorkflowImpl workflowImpl \n String workflowImplId \n ParametersMetaData parametersMetaData \n String templateName \n String templateDescription \n String templateId \n String workflowImplName \n String workflowImplDescription \n\n MetaData.WorkflowImpl getWorkflowImpl \n MetaData.Template getTemplate \n void setWorkflowImplId \n ParametersMetaData getParametersMetaData \n ParametersMetaData getParametersMetaData \n void setWorkflowImplName \n void setTemplateId \n void setTemplateId \n String getTemplateDescription \n void setTemplateDescription \n void setTemplateName \n void setParametersMetaData \n void setParametersMetaData \n String getWorkflowImplName \n void setTemplate \n String getTemplateId \n String getTemplateId \n String getWorkflowImplDescription \n String getTemplateName \n void setWorkflowImpl \n void setWorkflowImplDescription", "output": ""}, {"instruction": "Generate java code\nconfigure whether exceptions during applying a rule should be ignored or not . if set to true then such exceptions are logged as warnings and the processing is continued with the next rule - the failing rule is simply skipped . this is the default behavior . if set to false then the processing will be aborted with the exception . this is especially useful during unit tests , in order to not oversee any exceptions . ", "input": " boolean ignoreExceptions \n File sourceCodeFile \n String sourceCodeFilename \n LanguageVersion languageVersion \n ConcurrentMap<String,Object> attributes \n Report report \n\n void setSourceCodeFile \n void setLanguageVersion \n boolean setAttribute \n LanguageVersion getLanguageVersion \n Object getAttribute \n boolean isIgnoreExceptions \n void setSourceCodeFilename \n File getSourceCodeFile \n Report getReport \n Object removeAttribute \n String getSourceCodeFilename \n void setReport", "output": ""}, {"instruction": "Generate java code\nreturns the input if valid over the given white list patterns else throws an identityvalidationexception ", "input": " String msgSection1 \n String regex \n IdentityValidatorConfig validatorConfig \n String msgSection3 \n String msgSection4 \n String msgSection2 \n\n boolean isValidOverWhiteListPatterns \n String getRegex \n boolean isValidOverBlackListPatterns \n String getPatternString \n boolean patternExists \n void removePattern \n boolean isValid \n String getValidInputOverBlackListPatterns \n String getValidInput \n void addPattern", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.mwvparser #setspeed double . ", "input": " String EXAMPLE \n MWVSentence mwv \n\n void testSetNegativeSpeed \n void testSetInvalidSpeedUnit \n void testIsTrue \n void testMWVParserTalkerId \n void testSetStatus \n void testSetAngle \n void testSetSpeedUnit \n void testSetNegativeAngle \n void testGetAngle \n void testSetTrue \n void testSetAngleOutOfRange \n void setUp \n void testGetSpeed \n void testGetStatus \n void testGetSpeedUnit", "output": ""}, {"instruction": "Generate java code\ndelay processing for specified milliseconds . should be `` small '' to prevent the client from timing out . ", "input": " Map<String,String> responseHeaders \n int responseCode \n long delay \n String errorMessage \n\n ThrottleResponse addResponseHeader \n Map<String,String> getResponseHeaders \n int getResponseCode \n ThrottleResponse setResponseCode \n ThrottleResponse setResponseCode \n ThrottleResponse setDelay \n String getErrorMessage", "output": ""}, {"instruction": "Generate java code\ntest for setlongitude ", "input": " Position instance \n\n void testGetLatitude \n void testSetIllegalLatitudeSouth \n void testDistanceToSelf \n void testSetIllegalLongitudeWest \n void testGetDatum \n void testSetLatitudeSouth \n void testDistanceTo \n void testSetIllegalLongitudeEast \n void testToWaypoint \n void setUp \n void testGetLongitude \n void testSetLongitudeWest \n void testGetLatitudeHemisphere \n void testSetLatitudeNorth \n void testGetLongitudeHemisphere \n void testSetIllegalLatitudeNorth", "output": ""}, {"instruction": "Generate java code\nexclude all elements from an iterable that do n't match a given predicate . ", "input": " Predicate<? super T> filter \n boolean iterated \n Iterator<T> i \n Mapper<? super F,T> mapper \n T lookAhead \n E element \n\n Iterable<E> singleton \n Iterable<T> filter \n boolean all \n E next \n T next \n T next \n Iterable<E> cast \n int count \n boolean hasNext \n boolean hasNext \n boolean hasNext \n Iterable<T> map \n boolean any \n List<E> asList \n void remove \n void remove \n void remove", "output": ""}, {"instruction": "Generate java code\nreturn the coordiantor actions being returned . ", "input": " List<CoordinatorActionBean> actions \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\ncreate schedule ", "input": " ScheduleRepository repository \n\n void updateSchedule \n void removeSchedule", "output": ""}, {"instruction": "Generate java code\nruns the given runnable on the javafx application thread at some unspecified timein the future and waits for it long milliseconds to finish , otherwise times out with timeoutexception . ", "input": " ExecutorService executorService \n long CONDITION_SLEEP_IN_MILLIS \n int SEMAPHORE_LOOPS_COUNT \n long SEMAPHORE_SLEEP_IN_MILLIS \n\n boolean callConditionAndReturnResult \n void runOnFxThread \n void callCallableAndSetFuture \n void sleepWithException \n void sleep \n T waitForMillis \n Future<Void> async \n Future<T> async \n void runOnThread \n void waitForFxEvents \n void waitForFxEvents \n Future<Void> asyncFx \n Future<T> asyncFx \n void blockFxThreadWithSemaphore \n T waitFor \n T waitFor \n void waitFor \n void waitFor \n void waitForAsync \n T waitForAsync", "output": ""}, {"instruction": "Generate java code\nset the logger ", "input": " String appName \n Logger logger \n\n void popupError \n void warning \n void error \n void error \n void error \n void error \n void info", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time #setseconds int . ", "input": " Time time \n\n void testDateRoundTrip \n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\ngets a bytebuffer containing an increasing sequence of integers starting at zero . ", "input": " Method sCleanerCleanMethod \n Method sByteBufferCleanerMethod \n Logger LOG \n\n boolean equalConstantByteArray \n ByteBuffer getIncreasingByteBuffer \n ByteBuffer getIncreasingByteBuffer \n void fastCopy \n void cleanDirectBuffer \n ByteBuffer sliceByteBuffer \n ByteBuffer sliceByteBuffer \n int byteToInt \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteBuffer \n byte[] getIncreasingByteArray \n byte[] getIncreasingByteArray \n void writeBufferToFile \n List<ByteBuffer> cloneByteBufferList \n ByteBuffer cloneByteBuffer \n byte[] newByteArrayFromByteBuffer \n void putIntByteBuffer \n ByteBuffer generateNewByteBufferFromThriftRPCResults", "output": ""}, {"instruction": "Generate java code\ncreates a parser for specified talker and sentence type . this method is mainly intended to be used when custom parsers have been registered in the factory . the returned instance needs to be cast to corresponding sentence interface . ", "input": " SentenceFactory instance \n Map<String,Class<? extends SentenceParser>> parsers \n\n void unregisterParser \n boolean hasParser \n List<String> listParsers \n void reset \n void registerParser \n SentenceFactory getInstance \n Sentence createParserImpl", "output": ""}, {"instruction": "Generate java code\nsets the feed id . ", "input": " long serialVersionUID \n String isSystemDerived \n String isActive \n BigDecimal predecessorId \n String srcFileName \n BigDecimal successorId \n BigDecimal feedId \n String checksum \n String transmissionDatasetId \n String comments \n String inactivationReasonType \n String isFormatValid \n long dataUnitId \n Timestamp receiptDate \n String srcUniqueFileName \n Timestamp createdDate \n Long dataSetId \n BigDecimal fileSize \n String destFileName \n String loadedInCats \n String checksumType \n Timestamp modifiedDate \n BigDecimal runId \n String isPrepopulated \n String isBulk \n String isUpdate \n String receiptDateType \n String status \n\n void setIsSystemDerived \n void setIsPrepopulated \n String getStatus \n String getIsUpdate \n long getDataUnitId \n BigDecimal getFileSize \n void setInactivationReasonType \n void setDataUnitId \n String getComments \n Timestamp getCreatedDate \n void setFileSize \n BigDecimal getPredecessorId \n void setIsUpdate \n String getReceiptDateType \n BigDecimal getFeedId \n void setReceiptDate \n Timestamp getModifiedDate \n void setSuccessorId \n void setDestFileName \n void setIsBulk \n String getIsFormatValid \n void setDataSetId \n void setIsActive \n void setChecksumType \n String getInactivationReasonType \n String getSrcUniqueFileName \n Long getDataSetId \n void setReceiptDateType \n BigDecimal getRunId \n void setSrcFileName \n String getChecksumType \n String getSrcFileName \n String getChecksum \n String getDestFileName \n Timestamp getReceiptDate \n void setTransmissionDatasetId \n String getTransmissionDatasetId \n void setComments \n String getLoadedInCats \n BigDecimal getSuccessorId \n void setLoadedInCats \n String getIsPrepopulated \n void setSrcUniqueFileName \n void setChecksum \n void setIsFormatValid \n String getIsBulk \n void setRunId \n void setStatus \n String getIsActive \n void setModifiedDate \n void setCreatedDate \n void setPredecessorId \n String getIsSystemDerived", "output": ""}, {"instruction": "Generate java code\ntests the rpcblockreadresponse #encode bytebuf and rpcblockreadresponse #decode bytebuf methods . ", "input": " long SESSION_ID \n ByteBuf mBuffer \n long BLOCK_ID \n long LOCK_ID \n ExpectedException mThrown \n long LENGTH \n RPCResponse.Status STATUS \n long OFFSET \n\n void encodedLength \n void before \n void getPayloadDataBuffer \n void assertValid \n void assertValid \n void createErrorResponse \n void validate", "output": ""}, {"instruction": "Generate java code\nreturns the price associated with a line item . ", "input": " OrderLineType lineItem \n java.util.Iterator iter \n\n String getItemDescription \n Object next \n java.util.Currency getItemPriceCurrency \n int getItemQuantity \n String getItemPartNumber \n BasePriceType getTheItemPrice \n boolean hasNext \n void remove", "output": ""}, {"instruction": "Generate java code\ncreates an atomiclongmap . ", "input": " Map<K,Long> asMap \n ConcurrentHashMap<K,Long> map \n\n long getAndIncrement \n long incrementAndGet \n Map<K,Long> createAsMap \n Map<K,Long> asMap \n boolean removeIfZero \n boolean replace \n long decrementAndGet \n long updateAndGet \n long sum \n long put \n long remove \n boolean remove \n void removeAllZeros \n long get \n void putAll \n long getAndAdd \n long getAndAccumulate \n long accumulateAndGet \n boolean containsKey \n boolean isEmpty \n void clear \n int size \n long addAndGet \n String toString \n long getAndUpdate \n long getAndDecrement \n long putIfAbsent", "output": ""}, {"instruction": "Generate java code\nturns logging on or off , without affecting logging configuration . ", "input": " String CONFIG \n String MATCH \n String RENDER \n String CSS_PARSE \n List LOGGER_NAMES \n String EXCEPTION \n boolean loggingEnabled \n String XML_ENTITIES \n String JUNIT \n String INIT \n XRLogger loggerImpl \n String LOAD \n String LAYOUT \n String GENERAL \n String CASCADE \n boolean initPending \n\n void exception \n void exception \n XRLogger getLoggerImpl \n void init \n void init \n void init \n void init \n void junit \n void junit \n void junit \n List listRegisteredLoggers \n void cssParse \n void cssParse \n void cssParse \n void log \n void log \n void cascade \n void cascade \n void cascade \n void match \n void match \n void match \n void main \n String registerLoggerByName \n void setLevel \n void layout \n void layout \n void layout \n void general \n void general \n void general \n void load \n void load \n void load \n void setLoggerImpl \n void render \n void render \n void render \n void xmlEntities \n void xmlEntities \n void xmlEntities \n boolean isLoggingEnabled", "output": ""}, {"instruction": "Generate java code\nassume the plan is returned by a non-cascading evictor , check whether it is valid . a cascading evictor is an evictor that always tries to move from the target tier to the next tier and recursively move down 1 tier until finally blocks are evicted from the final tier . ", "input": " PlaceHolder placeHolder \n\n boolean requestSpaceSatisfied \n boolean validCascadingPlan \n boolean blocksInTheSameDir \n void assertEvictionPlanValid", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getofferdetailsresponse.return ", "input": " PlaceHolder placeHolder \n\n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos \n GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia \n GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue \n GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData \n GetOfferDetailsResponse createGetOfferDetailsResponse \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem \n GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "output": ""}, {"instruction": "Generate java code\nparse a inputstream assuming it is a valid xml document and return an jdom element for it . ", "input": " String str \n String SLA_NAME_SPACE_URI \n Element element \n\n String writePropToString \n PrettyPrint prettyPrint \n PrettyPrint prettyPrint \n PrettyPrint prettyPrint \n String removeComments \n void removeComments \n void removeComments \n InputSource resolveEntity \n String toString \n Schema createSchema \n void validateData \n SAXBuilder createSAXBuilder \n String getRootAttribute \n void validateXml", "output": ""}, {"instruction": "Generate java code\nprovides simplejoblauncher bean ", "input": " JobParametersIncrementer fetcherJobIncrementer \n Logger logger \n JobRegistry jobRegistry \n JobRepository jobRepository \n SimpleJobLauncher synchJobLauncher \n\n void printJobNames \n void launchJob", "output": ""}, {"instruction": "Generate java code\nassert that an array has elements ; that is , it must not be null and must have at least one element.assert.notempty array ; ", "input": " PlaceHolder placeHolder \n\n void isTrue \n void isTrue \n void isAssignable \n void isAssignable \n void notNull \n void notNull \n void isNull \n void isNull \n void noNullElements \n void noNullElements \n void isInstanceOf \n void isInstanceOf \n void state \n void state", "output": ""}, {"instruction": "Generate java code\nget whether to use a keyidentifier to refer to this token ", "input": " String identifier \n String wsseValueType \n boolean useKeyIdentifier \n boolean useDirectReference \n String wsse11TokenType \n\n void setWsse11TokenType \n void setWsseValueType \n String getWsse11TokenType \n String getIdentifier \n void setIdentifier \n void setUseDirectReference \n String getWsseValueType \n boolean isUseDirectReference \n void setUseKeyIdentifier", "output": ""}, {"instruction": "Generate java code\nreply a java.util.enumeration of the children of the given object ", "input": " Logger LOG \n\n Iterator gen2", "output": ""}, {"instruction": "Generate java code\nreturns true if inventory is full . ", "input": " int limit \n int count \n Map<Item,Integer> invMap \n\n void addItem \n void printInventory \n ItemStack[] getItemStacks \n void dumpAll", "output": ""}, {"instruction": "Generate java code\nreturns a string representation of the host specifier suitable for inclusion in a uri . if the host specifier is a domain name , the string will be normalized to all lower case . if the specifier was an ipv6 address without brackets , brackets are added so that the result will be usable in the host part of a uri . ", "input": " String canonicalForm \n\n HostSpecifier fromValid \n int hashCode \n boolean isValid \n boolean equals \n HostSpecifier from", "output": ""}, {"instruction": "Generate java code\nmakes an empty project . ", "input": " ClienteConecta clienteEnvia \n Logger LOG \n ProjectManager instance \n Action saveAction \n String SAVE_STATE_PROPERTY_NAME \n String NO_PROJECT \n boolean creatingCurrentProject \n EventListenerList listenerList \n String CURRENT_PROJECT_PROPERTY_NAME \n Project currentProject \n PropertyChangeEvent event \n\n void setSaveAction \n ProjectManager getManager \n Project getCurrentProject \n void firePropertyChanged \n void removeProject \n void createDefaultDiagrams \n boolean isSaveActionEnabled \n void setSaveEnabled \n void setCurrentProject \n void removePropertyChangeListener \n void addPropertyChangeListener \n Object execute", "output": ""}, {"instruction": "Generate java code\ngenerates the create table sql statement ", "input": " int length \n String OOZIE_VERSION \n Map<Table,List<Column>> TABLE_COLUMNS \n Column column \n boolean isPrimaryKey \n Class<?> type \n String oozieDbName \n Table table \n\n String generateInsertVersionScript \n String getOozieVersion \n void setOozieDbName \n String getName \n Column column \n boolean isPrimaryKey \n String asLabel \n Class<?> getType \n String getValidationQuery \n int getLength \n String toString \n String toString \n Table table \n String columnName", "output": ""}, {"instruction": "Generate java code\nreturns the current baseurl for this class . ", "input": " ImageResourceLoader _imageResourceLoader \n UriResolver _uriResolver \n\n boolean isVisited \n void onLayoutException \n void onRenderException \n void shrinkImageCache \n ImageResource getImageResource \n String resolveURI \n void setImageResourceLoader \n byte[] getBinaryResource \n void documentStarted \n CSSResource getCSSResource \n void clearImageCache \n XMLResource getXMLResource \n void setBaseURL \n InputStream resolveAndOpenStream \n void setRepaintListener \n void documentLoaded", "output": ""}, {"instruction": "Generate java code\nremoves the last last fish tagging . ", "input": " PlaceHolder placeHolder \n\n String getTransactionUniqueId \n void addFishTagging \n void removeFishTagging", "output": ""}, {"instruction": "Generate java code\ntests the mode #mode mode constructor . ", "input": " ExpectedException mThrown \n\n void umaskExceedLength \n void setOwnerBits \n void umask \n void fromShort \n void equals \n void setGroupBits \n void toStringTest \n void setOtherBits \n void after \n void umaskNotInteger \n void toShort \n void createNoAccess", "output": ""}, {"instruction": "Generate java code\ngets the value of the elem1 property . ", "input": " String elem2 \n String elem1 \n int elem3 \n\n int getElem3 \n String getElem2 \n void setElem2 \n void setElem1 \n void setElem3", "output": ""}, {"instruction": "Generate java code\nadd a repeat field . ", "input": " Vector repeatList \n TimeField timeImpl \n\n Time getTime \n void setRepeatTimes \n String toString \n Vector getRepeatTimes \n void setTime", "output": ""}, {"instruction": "Generate java code\nreturns the configuration factory instance . this is equivalent to configurationfactory.getinstance but using configuration.getfactory is shorter to type and allows us not to have to deal with configurationfactory at all if we do n't need to modify or configure it . ", "input": " String URL_SAVED \n String FILE_SAVED \n String URL_LOADED \n ConfigurationHandler config \n String FILE_LOADED \n\n boolean save \n boolean save \n void setInteger \n double getDouble \n double getDouble \n int getInteger \n int getInteger \n String getString \n String getString \n void removeListener \n void removeListener \n void setDouble \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n ConfigurationKey makeKey \n void setString \n boolean load \n boolean load \n boolean load \n void removeKey \n ConfigurationHandler getConfigurationHandler \n boolean getBoolean \n boolean getBoolean \n void setBoolean \n void addListener \n void addListener", "output": ""}, {"instruction": "Generate java code\nreturns whether the given byte array slice is a well-formed utf-8 byte sequence , as defined by #iswellformed byte . note that this can be false even when iswellformed bytes is true . ", "input": " PlaceHolder placeHolder \n\n int encodedLength \n boolean isWellFormedSlowPath \n String unpairedSurrogateMsg \n int encodedLengthGeneral", "output": ""}, {"instruction": "Generate java code\nset the callbackhandler to use with the logincontext . it can be null . ", "input": " String name \n CallbackHandler callbackHandler \n String contextName \n WSSConfig wssConfig \n boolean isUsernameServiceNameForm \n boolean requestCredentialDelegation \n boolean useDelegatedCredential \n Logger LOG \n String serviceName \n\n boolean isUseDelegatedCredential \n boolean isRequestCredentialDelegation \n String getServiceName \n void setRequestCredentialDelegation \n void setUseDelegatedCredential \n String getBeanName \n void setContextName \n void setJaasLoginModuleName \n boolean isUsernameServiceNameForm \n String getContextName \n void setServiceName \n CallbackHandler getCallbackHandler \n SecurityToken requestSecurityToken \n void setUsernameServiceNameForm \n String getJaasLoginModuleName", "output": ""}, {"instruction": "Generate java code\ngets the data matrix . ", "input": " GeneticProfile geneticProfile \n ArrayList<String> caseIdList \n ArrayList<String> geneList \n HashMap<String,String> mapFromGeneAndCaseToGeneProperties \n String[][] matrix \n\n String getValue \n void processMatrix \n ArrayList<String> getCaseIdList \n ArrayList<String> getGeneList \n String createKey \n ValueParser getValueParsed \n GeneticProfile getGeneticProfile", "output": ""}, {"instruction": "Generate java code\nsets alluxio work directory . ", "input": " UnderFileSystemCluster mUfsCluster \n int mNumWorkers \n String mWorkDirectory \n List<AlluxioWorkerService> mWorkers \n long DEFAULT_WORKER_MEMORY_BYTES \n Logger LOG \n int DEFAULT_BLOCK_SIZE_BYTES \n Random RANDOM_GENERATOR \n String mHostname \n\n void setHostname \n void start \n FileSystem getClient \n void setupTest \n void stopUFS \n void initConfiguration \n void stop \n void startWorkers \n void runWorkers \n void startMaster \n void reset \n void stopFS \n LocalAlluxioMaster getMaster", "output": ""}, {"instruction": "Generate java code\nis the user currently authenticated ? determined via session . ", "input": " String EMAIL \n\n void loginUser \n void logoutUser \n String getEmailId", "output": ""}, {"instruction": "Generate java code\nreads an ascii string from the buffer . reads from the buffer 's current position to its limit . ", "input": " CharsetDecoder DECODER \n Logger LOG \n\n Collection<byte[]> splitToByteArrays \n Collection<ByteBuffer> split \n byte[] toByteArray \n void putUnsignedByte \n void putUnsignedByte \n String toAsciiString \n void putUnsignedShort \n void putUnsignedShort \n boolean isUdp \n ByteBuffer createBuffer \n void putUnsignedInt \n void putUnsignedInt \n ByteBuffer toBuf", "output": ""}, {"instruction": "Generate java code\nnotifies all listeners that data reading has stopped . ", "input": " String LOG_MSG \n String DISPATCH_ALL \n DataReader reader \n DataListener dataListener \n ConcurrentMap<String,List<SentenceListener>> listeners \n int pauseTimeout \n ExceptionListener exceptionListener \n Thread thread \n Logger LOGGER \n int DEFAULT_TIMEOUT \n\n void fireReadingPaused \n void fireDataEvent \n ExceptionListener getExceptionListener \n void setPauseTimeout \n void start \n void removeSentenceListener \n void registerListener \n List<SentenceListener> getSentenceListeners \n void handleException \n void setDataListener \n void stop \n void setInputStream \n void fireReadingStarted \n void fireSentenceEvent \n void addSentenceListener \n void addSentenceListener \n void addSentenceListener \n int getPauseTimeout \n void setExceptionListener \n void setDatagramSocket", "output": ""}, {"instruction": "Generate java code\ncalls a method on the given object instance with the given argument . ", "input": " PlaceHolder placeHolder \n\n Object getValue \n Class getClass \n List getAllStaticMethods \n Constructor getConstructorImpl \n Method getMethodImpl \n Field getFieldImpl \n Class getClassImpl \n void setValue \n List invokeAllStaticMethods \n Method getMethod \n Object invokeConstructor \n Object invokeConstructor", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time #sethour int . ", "input": " Time time \n\n void testDateRoundTrip \n void testParseTimeWithOneDecimal \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\nget all the books . ", "input": " Logger log \n BookRepository bookRepository \n\n Book save \n Book findOne \n void delete", "output": ""}, {"instruction": "Generate java code\ncreates a new storedblock , calculating the additional fields by adding to the values in this block . ", "input": " int COMPACT_SERIALIZED_SIZE \n BigInteger chainWork \n int CHAIN_WORK_BYTES \n Block header \n long serialVersionUID \n byte[] EMPTY_BYTES \n int height \n\n int getHeight \n BigInteger getChainWork \n StoredBlock deserializeCompact \n void serializeCompact \n int hashCode \n boolean equals \n boolean moreWorkThan \n String toString \n StoredBlock getPrev \n Block getHeader", "output": ""}, {"instruction": "Generate java code\nget the current classifier . ", "input": " String classnamePrefix \n Logger LOG \n Collection obsoleteInnerClasses \n Object component \n int anonymousClassCounter \n Context context \n Object classifier \n Collection obsoleteFeatures \n\n void addClassifierContext \n void addPackageContext \n void removeObsoleteFeatures \n void innerClassifier \n void addComponent \n void outerClassifier \n Object getMethod \n Object getFeature \n void removeObsoleteInnerClasses \n Object getAttribute \n void feature \n Collection getFeatures \n String getClassnamePrefix \n Object getOperation \n Object getComponent \n String anonymousClass \n Context getContext", "output": ""}, {"instruction": "Generate java code\nreturns the list of repeat times r = fields specified in the sessiondescription . ", "input": " Vector repeatList \n TimeField timeImpl \n\n Time getTime \n void addRepeatField \n String toString \n Vector getRepeatTimes \n void setTime", "output": ""}, {"instruction": "Generate java code\ncalled when a line is complete . ", "input": " boolean sawReturn \n StringBuilder line \n\n void add \n void finish \n void handleLine", "output": ""}, {"instruction": "Generate java code\nresolves serialized instance of enumeration value . ", "input": " ScopeKindEnum SK_CLASSIFIER \n java.util.List typeName \n ScopeKindEnum SK_INSTANCE \n java.lang.String literalName \n\n ScopeKind forName \n java.util.List refTypeName \n int hashCode \n boolean equals \n java.lang.String toString", "output": ""}, {"instruction": "Generate java code\nsets the objecttype used to read and write the trailing block instances . ", "input": " ObjectType objectType \n\n List<Object> readBlocks \n ObjectType getObjectType \n List<Object> writeBlocks", "output": ""}, {"instruction": "Generate java code\nsets the fetcher start timestamp . ", "input": " Timestamp lastModifiedTimeStamp \n Timestamp fetcherStartTimestamp \n Timestamp createTimeStamp \n long serialVersionUID \n BigDecimal batchId \n String errorMsg \n OutcomeType outcomeType \n String createdBy \n BigDecimal feedId \n long testId \n BigDecimal runId \n Timestamp fetcherEndTimeStamp \n List<RegPCLTestResultDetailsEntity> regPclTestResultDetails \n RunStatusType runStatus \n\n void setLastModifiedTimeStamp \n void setFeedId \n OutcomeType getOutcomeType \n void updateLastModifiedTimeStamp \n void updateCreateTimeStamp \n BigDecimal getRunId \n void setBatchId \n List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails \n void setTestId \n long getTestId \n RegPCLTestResultDetailsEntity removeRegPclTestResultDetail \n void setRegPclTestResultDetails \n void setErrorMsg \n RunStatusType getRunStatus \n RegPCLTestResultDetailsEntity addRegPclTestResultDetail \n String getErrorMsg \n void setRunStatus \n Timestamp getFetcherEndTimeStamp \n Timestamp getLastModifiedTimeStamp \n BigDecimal getFeedId \n void setRunId \n Timestamp getFetcherStartTimestamp \n void setFetcherEndTimeStamp \n void setCreateTimeStamp \n void setCreatedBy \n Timestamp getCreateTimeStamp \n BigDecimal getBatchId \n void setOutcomeType \n String getCreatedBy", "output": ""}, {"instruction": "Generate java code\nsets the data source , where this interaction comes from , e.g. reactome . ", "input": " String interactionType \n String experimentTypes \n long geneB \n String pmids \n long geneA \n String source \n\n String toSif \n void setExperimentTypes \n void setGeneA \n void setGeneB \n String getInteractionType \n long getGeneA \n long getGeneB \n void setPmids \n String getSource \n String toString \n void setInteractionType \n String getExperimentTypes \n String getPmids", "output": ""}, {"instruction": "Generate java code\nchecks if is file down loaded to destination . ", "input": " String comments \n String feedId \n String testId \n String elapsedTime \n\n void setFeedId \n void setElapsedTime \n String getComments \n String toString \n String getFeedId \n void setComments \n void setTestId \n String getTestId \n String getElapsedTime", "output": ""}, {"instruction": "Generate java code\ncreates instance of builder . ", "input": " String FIQL \n String DEFAULT_LANGUAGE \n\n String query", "output": ""}, {"instruction": "Generate java code\nget the file associated with the current source file . ", "input": " boolean ignoreExceptions \n File sourceCodeFile \n String sourceCodeFilename \n LanguageVersion languageVersion \n ConcurrentMap<String,Object> attributes \n Report report \n\n void setSourceCodeFile \n void setLanguageVersion \n boolean setAttribute \n LanguageVersion getLanguageVersion \n Object getAttribute \n boolean isIgnoreExceptions \n void setSourceCodeFilename \n void setIgnoreExceptions \n Report getReport \n Object removeAttribute \n String getSourceCodeFilename \n void setReport", "output": ""}, {"instruction": "Generate java code\nsets the value of the attachinfo property . ", "input": " DataHandler attachinfo \n String name \n\n void setName \n String getName \n DataHandler getAttachinfo", "output": ""}, {"instruction": "Generate java code\nconvenience method for calling #waitforpersist localalluxioclusterresource , alluxiouri , int with a default timeout . ", "input": " PlaceHolder placeHolder \n\n String randomString \n void waitForBlocksToBeFreed", "output": ""}, {"instruction": "Generate java code\ntest of readfromgamefile method , of class filehandler . ", "input": " PlaceHolder placeHolder \n\n void testReadFromEditorFileForInvalidInput \n void setUpClass \n void testReadFromEditorFile \n void setUp \n void tearDownClass \n void tearDown", "output": ""}, {"instruction": "Generate java code\ncreate auto-merge query . ", "input": " String graphName \n String user \n Endpoint ep \n\n String createSelectQuery \n String createCommonMergeQuery \n void setUpBeforeClass \n void testCommonMerge \n String createMergeWithQuery \n void setUp \n void testManualMerge \n void testAutoMerge \n void testCreatedGraph \n String createManualMergeQuery", "output": ""}, {"instruction": "Generate java code\nreturn a workflow store instance with an existing transaction . the workflow store has to be committed and then closed to commit changes , if only close it rolls back . ", "input": " String ACTIONS_TO_KILL \n String ACTIONS_TO_START \n String ACTION_ID \n String TRANSIENT_VAR_PREFIX \n String WORKFLOW_BEAN \n String ACTIONS_TO_FAIL \n\n Class<? extends Service> getInterface \n List<WorkflowActionBean> getStartedActions \n List<String> getActionsToFail \n List<String> getActionsToKill \n WorkflowLib getWorkflowLibWithNoDB", "output": ""}, {"instruction": "Generate java code\nreturns the chain code associated with this key . see the specification to learn more about chain codes . ", "input": " Joiner PATH_JOINER \n DeterministicKey parent \n ImmutableList<ChildNumber> childNumberPath \n byte[] chainCode \n ECPoint publicAsPoint \n long serialVersionUID \n BigInteger privateAsFieldElement \n\n DeterministicKey getParent \n int getDepth \n ECPoint getPubPoint \n String serializePrivB58 \n String toBase58 \n String serializePubB58 \n byte[] serializePublic \n byte[] getPrivKeyBytes33 \n DeterministicKey getPubOnly \n boolean hasPrivate \n byte[] addChecksum \n ECKey toECKey \n byte[] serialize \n byte[] serializePrivate \n ChildNumber getChildNumber \n byte[] getIdentifier \n String getPath \n BigInteger getPrivAsFieldElement \n byte[] getPubKeyBytes \n String toString \n byte[] getFingerprint \n ImmutableList<ChildNumber> getChildNumberPath \n byte[] getPrivKeyBytes", "output": ""}, {"instruction": "Generate java code\nsuspends the running of tasks until #resume is called . this can be called multipletimes to increase the suspensions count and execution will not continue until #resume has been called the same number of times as suspend has been.any task that has already been pulled off the queue for execution will be completed before execution is suspended . ", "input": " boolean isWorkerRunning \n Deque<Runnable> queue \n Executor executor \n Object internalLock \n int suspensions \n Logger log \n\n void resume \n void executeFirst \n void startQueueWorker \n void run \n void workOnQueue \n void execute", "output": ""}, {"instruction": "Generate java code\nreturns the verb for the request token endpoint defaults to post ", "input": " PlaceHolder placeHolder \n\n TimestampService getTimestampService \n AccessTokenExtractor getAccessTokenExtractor \n String getAccessTokenEndpoint \n OAuthService createService \n String getAuthorizationUrl \n SignatureService getSignatureService \n BaseStringExtractor getBaseStringExtractor \n Verb getAccessTokenVerb \n String getRequestTokenEndpoint \n RequestTokenExtractor getRequestTokenExtractor \n HeaderExtractor getHeaderExtractor", "output": ""}, {"instruction": "Generate java code\nconvenience method for mocking the underfilesystem for any ufspath . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nthe number of previous blocks to look at when calculating the next block 's difficulty uses a storedblock cursor as input rather than just returning a constant value ", "input": " int addressHeader \n int INTERVAL \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n long packetMagic \n int p2shHeader \n List<NetworkParameters> paramSet \n int PROTOCOL_VERSION \n Block genesisBlock \n BigInteger proofOfWorkLimit \n int subsidyDecreaseBlockCount \n int port \n BigInteger MAX_MONEY \n int TARGET_SPACING \n String[] dnsSeeds \n Map<Integer,Sha256Hash> checkpoints \n byte[] SATOSHI_KEY \n int interval \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n String[] getDnsSeeds \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n Sha256Hash calculateBlockPoWHash \n BigInteger getMaxMoney \n NetworkParameters getParamsFromAddressByte \n void registerParams \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n boolean isAcceptableAddressVersion \n String getURIScheme \n BigInteger getProofOfWorkLimit", "output": ""}, {"instruction": "Generate java code\ncloses the connection to the server , triggering the streamparser #connectionclosed event on the network-handling thread where all callbacks occur . ", "input": " ByteBuffer dbuf \n int BUFFER_SIZE_LOWER_BOUND \n Socket socket \n org.slf4j.Logger log \n int BUFFER_SIZE_UPPER_BOUND \n boolean vCloseRequested \n\n void writeBytes", "output": ""}, {"instruction": "Generate java code\nhashes a key in byte array into a non-zero , one byte fingerprint . ", "input": " int mKeyCount \n int BUCKET_SIZE_BYTES \n ByteBuffer mBuf \n int INDEX_HASHER_SEED \n int FINGERPRINT_HASHER_SEED \n HashFunction FINGERPRINT_HASHER \n HashFunction INDEX_HASHER \n ByteBuffer mHashTableBuf \n int MAX_PROBES \n int mNumBuckets \n\n int keyCount \n Iterator<ByteBuffer> keyIterator \n int bucketOffset \n LinearProbingIndex createEmptyIndex \n LinearProbingIndex loadFromByteArray \n int byteCount \n ByteBuffer get \n int indexHash \n int indexHash \n ByteBuffer nextKey \n boolean put \n byte[] getBytes", "output": ""}, {"instruction": "Generate java code\nreturns the file object which may have it 's base-path determined by environment variables for running on a cloud hosting service . all gitblit file or folder retrievals are at least initially funneled through this method so it is the correct point to globally override/alter filesystem access based on environment or some other indicator . ", "input": " IStoredSettings settings \n ServerStatus serverStatus \n Logger logger \n File baseFolder \n TimeZone timezone \n ServerSettings settingsModel \n\n boolean isServingRepositories \n boolean isDebugMode \n IStoredSettings getSettings \n RuntimeManager start \n void logTimezone \n boolean updateSettings \n ServerStatus getStatus \n ServerSettings getSettingsModel \n void setBaseFolder \n RuntimeManager stop \n TimeZone getTimezone \n Date getBootDate \n File getBaseFolder", "output": ""}, {"instruction": "Generate java code\ncomputes the quality using diagonal elements the triangular r matrix in the qr decomposition . ", "input": " BlockMatrix64F QR \n QRDecompositionHouseholder_B64 decomp \n\n void invert \n void solve \n boolean modifiesA \n boolean setA \n boolean modifiesB", "output": ""}, {"instruction": "Generate java code\nwrite encoded data to muxer ", "input": " String DIR_NAME \n String mOutputPath \n MediaMuxer mMediaMuxer \n int mStatredCount \n boolean DEBUG \n String TAG \n SimpleDateFormat mDateTimeFormat \n boolean mIsStarted \n int mEncoderCount \n MediaEncoder mAudioEncoder \n MediaEncoder mVideoEncoder \n\n int addTrack \n void prepare \n String getDateTimeString \n void stop \n void addEncoder \n void startRecording \n boolean start \n File getCaptureFile \n boolean isStarted \n String getOutputPath \n void stopRecording", "output": ""}, {"instruction": "Generate java code\ngiven a file filter , expose as a filenamefilter . ", "input": " PlaceHolder placeHolder \n\n List<T> filter \n Filter<String> buildRegexFilterExcludeOverInclude \n Filter<String> buildRegexFilterIncludeOverExclude \n Filter<File> getDirectoryFilter \n Filter<File> getFileExtensionFilter \n Filter<T> fromStringFilter \n Filter<File> getFileExtensionOrDirectoryFilter \n Filter<File> toNormalizedFileFilter \n Filter<File> toFileFilter", "output": ""}, {"instruction": "Generate java code\nparses strings of the form '' ns-uri local-name '' or `` prefix : localname '' as qualifiednames . when using the prefix-version the prefix must be defined inside the current namespacecontext . ", "input": " String localName \n String namespaceUri \n\n String getLocalName \n int hashCode \n boolean equals \n String getNamespaceURI \n String toString \n QualifiedName parseQNameToString \n QualifiedName parsePrefixFormat", "output": ""}, {"instruction": "Generate java code\nformats a value for its usage in xpath expressions ", "input": " PlaceHolder placeHolder \n\n String constructPredicate", "output": ""}, {"instruction": "Generate java code\nreturns the integer value of the specified field . the value is obtained from whichever scan contains the field . ", "input": " Transaction tx \n TableInfo ti \n int nextblknum \n Scan lhsscan \n int chunksize \n int filesize \n Scan prodscan \n Scan rhsscan \n\n boolean next \n Constant getVal \n boolean useNextChunk \n void beforeFirst \n String getString \n void close \n boolean hasField", "output": ""}, {"instruction": "Generate java code\nobtains the url of the http request . ", "input": " Map<String,String> headers \n String charset \n Verb verb \n ParameterList bodyParams \n String url \n byte[] bytePayload \n Long readTimeout \n ParameterList querystringParams \n boolean connectionKeepAlive \n Long connectTimeout \n String CONTENT_LENGTH \n String CONTENT_TYPE \n HttpURLConnection connection \n String payload \n String DEFAULT_CONTENT_TYPE \n\n void addHeaders \n void setCharset \n String getSanitizedUrl \n void addBody \n void addHeader \n void setConnectionKeepAlive \n void setConnectTimeout \n byte[] getByteBodyContents \n Map<String,String> getHeaders \n ParameterList getQueryStringParams \n void setConnection \n void createConnection \n String getCharset \n void addBodyParameter \n void setReadTimeout \n String getCompleteUrl \n Verb getVerb \n void addPayload \n void addPayload \n void addQuerystringParameter \n String toString \n Response doSend \n Response send \n String getBodyContents \n ParameterList getBodyParams", "output": ""}, {"instruction": "Generate java code\nset the relying party of the authentication request ", "input": " boolean passiveAuth \n Map<String,String[]> requestQueryParams \n long serialVersionUID \n String commonAuthCallerPath \n boolean forceAuth \n String type \n Map<String,String> requestHeaders \n String tenantDomain \n boolean isPost \n String relyingParty \n\n void addHeader \n String getRelyingParty \n boolean getForceAuth \n String getCommonAuthCallerPath \n Map<String,String[]> getRequestQueryParams \n void addRequestQueryParam \n void setPost \n void setType \n boolean isPost \n void setTenantDomain \n void appendRequestQueryParams \n boolean getPassiveAuth \n Map<String,String> getRequestHeaders \n String getTenantDomain \n String[] getRequestQueryParam \n String getType \n void setPassiveAuth \n void setCommonAuthCallerPath \n void setForceAuth \n void setRequestQueryParams", "output": ""}, {"instruction": "Generate java code\ngets the property and casts to the appropriate type ", "input": " String variableName \n int objectCounter \n JSObject jsObject \n IJavascriptRuntime runtime \n Map<JSObject,JavascriptObject> peerRegistry \n\n Integer checkInteger \n Object checkUndefined \n Object invokeJavascript \n Object invokeJavascript \n T invokeJavascriptReturnValue \n T invokeJavascriptReturnValue \n void setProperty \n void setProperty \n void setProperty \n boolean isMemberDefined \n String getNextVariableName \n String getVariableName \n Boolean checkBoolean \n JSObject getJSObject", "output": ""}, {"instruction": "Generate java code\nreturns dns names that when resolved , give ip addresses of active peers . ", "input": " int INTERVAL \n String ID_UNITTESTNET \n long MAX_COINS \n int p2shHeader \n int PROTOCOL_VERSION \n BigInteger maxTarget \n int TARGET_SPACING \n String[] dnsSeeds \n String id \n int spendableCoinbaseDepth \n int dumpedPrivateKeyHeader \n int targetTimespan \n int TARGET_TIMESPAN \n String PAYMENT_PROTOCOL_ID_MAINNET \n int addressHeader \n Coin MAX_MONEY \n int bip32HeaderPriv \n byte[] alertSigningKey \n int[] acceptableAddressCodes \n int bip32HeaderPub \n String ID_MAINNET \n long packetMagic \n byte[] SATOSHI_KEY \n Block genesisBlock \n String PAYMENT_PROTOCOL_ID_TESTNET \n int subsidyDecreaseBlockCount \n int port \n String ID_TESTNET \n Map<Integer,Sha256Hash> checkpoints \n int interval \n String ID_REGTEST \n int BIP16_ENFORCE_TIME \n\n NetworkParameters regTests \n boolean allowEmptyPeerChain \n int getDumpedPrivateKeyHeader \n NetworkParameters testNet2 \n int getBip32HeaderPub \n int getBip32HeaderPriv \n NetworkParameters testNet3 \n NetworkParameters unitTests \n String getId \n String getPaymentProtocolId \n int getAddressHeader \n int[] getAcceptableAddressCodes \n NetworkParameters prodNet \n NetworkParameters fromID \n int getTargetTimespan \n int hashCode \n int getSpendableCoinbaseDepth \n NetworkParameters testNet \n boolean isCheckpoint \n int getP2SHHeader \n int getInterval \n Block getGenesisBlock \n int getSubsidyDecreaseBlockCount \n Block createGenesis \n BigInteger getMaxTarget \n long getPacketMagic \n int getPort \n byte[] getAlertSigningKey \n boolean equals \n boolean passesCheckpoint \n NetworkParameters fromPmtProtocolID", "output": ""}, {"instruction": "Generate java code\ngenerates the parameters map . this is the complete parameters for the common case where a header only has a single parameter . otherwise , calling methods can add additional parameters to the map . ", "input": " int sequenceNumber \n Logger LOG \n\n SipHeader createHeader \n String createBranchId \n SipHeader createExpires \n String createCallIdValue \n SipHeader createCSeq \n SipHeader createSupported \n String createCSeqValue \n SipHeader createFrom \n SipHeader createTo \n SipHeader createTo \n SipHeader createContentLength \n SipHeader createSentByVia \n SipHeader createMaxForwards \n SipHeader createContact \n SipHeader createCallId \n List<SipHeaderValue> createHeaderValues \n String createTagValue", "output": ""}, {"instruction": "Generate java code\nchecks whether the client user is the owner of the path . ", "input": " InodeTree mInodeTree \n boolean mPermissionCheckEnabled \n String mFileSystemSuperGroup \n\n void checkPermission \n void checkInode \n void checkSetAttributePermission \n void checkParentPermission \n boolean isPrivilegedUser \n void checkInodeList \n void checkSuperUser \n String getClientUser \n List<String> getGroups \n String toExceptionMessage", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.time java.lang.string . ", "input": " Time time \n\n void testDateRoundTrip \n void testSetNegativeMinutes \n void testFormatTimeWithOneDecimal \n void testSetMinutes \n void testParseTimeWithoutDecimals \n void testGetMinutes \n void testParseTimeWithDecimals \n void testSetInvalidSeconds \n void testSetNegativeHour \n void testToDate \n void testGetSeconds \n void testSetHour \n void testGetHour \n void testSetSeconds \n void testSetTime \n void testGetMilliseconds \n void testSetInvalidHour \n void testSetNegativeSeconds \n void setUp \n void testSetInvalidMinutes \n void testFormatTimeNoDecimals \n void testFormatTimeWithDecimals \n void testEquals", "output": ""}, {"instruction": "Generate java code\naccessor for the socket . ", "input": " Socket m_socket \n\n T accept", "output": ""}, {"instruction": "Generate java code\ncheck if the rules that apply to a source of the given language use dfa . ", "input": " List<RuleSet> ruleSets \n RuleChain ruleChain \n\n boolean usesTypeResolution \n void apply \n void start \n Rule getRuleByName \n RuleSet[] getAllRuleSets \n boolean usesMetrics \n long getChecksum \n void addRuleSet \n int ruleCount \n boolean applies \n Iterator<RuleSet> getRuleSetsIterator \n void end \n void removeDysfunctionalRules \n Set<Rule> getAllRules", "output": ""}, {"instruction": "Generate java code\nreturn true if this tokenprovider implementation is capable of providing a token that corresponds to the given tokentype in a given realm . the realm is ignored in this token provider . ", "input": " boolean returnEntropy \n long lifetime \n Logger LOG \n\n boolean isReturnEntropy \n void setReturnEntropy \n long getLifetime \n int getWSCVersion \n void setLifetime \n TokenProviderResponse createToken", "output": ""}, {"instruction": "Generate java code\nget the name of the message property from which the content type has been extracted . ", "input": " String propertyName \n String contentType \n\n String getContentType", "output": ""}, {"instruction": "Generate java code\nnote : the graphic representation maps x values on row numbers x-axis in vertical direction . ", "input": " Action UP \n Action LEFT \n Action RIGHT \n Action DOWN \n int[] state \n\n void setBoard \n void moveGapDown \n int getGapPosition \n int getAbsPosition \n void moveGapLeft \n XYLocation getLocationOf \n int getYCoord \n int getPositionOf \n int[] getState \n void moveGapUp \n int getValueAt \n int getValueAt \n int hashCode \n boolean equals \n void setValue \n boolean canMoveGap \n List<XYLocation> getPositions \n String toString \n void moveGapRight", "output": ""}, {"instruction": "Generate java code\nruns the given runnable on a new thread and waits for it long milliseconds to finish , otherwise times out with timeoutexception . ", "input": " ExecutorService executorService \n long CONDITION_SLEEP_IN_MILLIS \n int SEMAPHORE_LOOPS_COUNT \n long SEMAPHORE_SLEEP_IN_MILLIS \n\n boolean callConditionAndReturnResult \n void runOnFxThread \n void callCallableAndSetFuture \n void sleepWithException \n void waitForAsyncFx \n T waitForAsyncFx \n void sleep \n T waitForMillis \n Future<Void> async \n Future<T> async \n void runOnThread \n void waitForFxEvents \n void waitForFxEvents \n Future<Void> asyncFx \n Future<T> asyncFx \n void blockFxThreadWithSemaphore \n T waitFor \n T waitFor \n void waitFor \n void waitFor", "output": ""}, {"instruction": "Generate java code\ninduces the decision tree from the specified set of examples ", "input": " String defaultValue \n DecisionTree tree \n\n ConstantDecisonTree majorityValue \n int[] test \n DecisionTree decisionTreeLearning \n boolean allExamplesHaveSameClassification \n String predict \n DecisionTree getDecisionTree \n String chooseAttribute", "output": ""}, {"instruction": "Generate java code\nactivates interest in writing from the selector thread . ", "input": " WriteListener m_listener \n SocketChannel m_socketChannel \n SelectorManager m_selectorManager \n int m_numQueued \n Collection m_buffers \n long m_totalBytes \n boolean m_closed \n WriteListener NO_OP_LISTENER \n long m_startTime \n Logger LOG \n List m_writeBuffers \n\n long getTotalBytes \n void disableWriteLater \n void onWrite \n void writeLater \n void writeLater \n void writeLater \n boolean writeBuffer \n void enableWriteLater \n Collection getBuffers \n void checkForNull \n long getStartTime \n void write \n void write \n void write \n boolean write \n void close \n WriteListener getListener \n int getNumQueued", "output": ""}, {"instruction": "Generate java code\nsets the time to live . ", "input": " long mBlockSizeBytes \n WriteType mWriteType \n Permission mPermission \n long mTtl \n FileWriteLocationPolicy mLocationPolicy \n\n OutStreamOptions setBlockSizeBytes \n UnderStorageType getUnderStorageType \n Permission getPermission \n OutStreamOptions setLocationPolicy \n AlluxioStorageType getAlluxioStorageType \n FileWriteLocationPolicy getLocationPolicy \n OutStreamOptions defaults \n long getBlockSizeBytes \n int hashCode \n boolean equals \n OutStreamOptions setWriteType \n String toString \n OutStreamOptions setPermission \n long getTtl", "output": ""}, {"instruction": "Generate java code\nprovides the data store with an entity classifier . the classifier strongly influences the generation of the entity tree . ", "input": " BoundingBox boundingBox \n Hashtable<Long,MapNode> nodes \n Hashtable<Long,MapWay> ways \n ArrayList<MapEventListener> listeners \n long nextTrackId \n EntityClassifier<EntityViewInfo> entityClassifier \n KDTree entityTree \n Logger LOG \n ArrayList<MapNode> markers \n ArrayList<MapNode> pois \n ArrayList<Track> tracks \n\n void visitEntities \n List<Track> getTracks \n void addNode \n List<MapNode> getWayNodes \n Object[][] getStatistics \n MapNode getNearestWayNode \n void setBoundingBox \n void removeMarker \n void clearTrack \n List<MapEntity> getVisibleMarkersAndTracks \n KDTree getEntityTree \n void fireMapDataEvent \n BoundingBox getBoundingBox \n void clearMarkersAndTracks \n List<MapNode> getMarkers \n int getNodeCount \n void compile \n List<MapNode> getPlaces \n void createTrack \n int getPoiCount \n Collection<MapWay> getWays \n List<MapNode> getPois \n void close \n void addToTrack \n Track getTrack \n Track getTrack \n void clear \n boolean isEmpty \n void addMapDataEventListener \n void applyClassifierAndUpdateTree \n EntityFinder getEntityFinder \n void removeMapDataEventListener \n MapWay getWay \n MapBuilder getBuilder \n int getWayCount \n void addWay \n MapNode getNode \n void updateEntityViewInfo \n MapNode addMarker", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdgparser #setvariation double . ", "input": " HDGSentence hdg \n String EXAMPLE \n\n void testSetDeviationTooHigh \n void testSetHeadingTooHigh \n void testIsTrue \n void testSetHeading \n void testHDGParserTalkerId \n void testConstructor \n void testSetVariationTooLow \n void testGetVariation \n void testSetVariationTooHigh \n void testSetVariationEast \n void testGetDeviation \n void testSetDeviationTooLow \n void setUp \n void testGetHeading \n void testSetDeviationEast \n void testHDGParserString \n void testSetDeviationWest \n void testSetHeadingTooLow", "output": ""}, {"instruction": "Generate java code\nsets the data set id . ", "input": " Long expectedDataUnitId \n Long seqNo \n Long dataSetId \n Long dataUnitId \n String expectedValue \n String actualValue \n Long expectedDataSetId \n String errorCode \n Long testId \n String failedAttributeName \n String srcFileName \n String errorMsg \n\n void setExpectedValue \n String getExpectedValue \n Long getExpectedDataSetId \n void setExpectedDataSetId \n void setActualValue \n Long getDataSetId \n void setSrcFileName \n Long getExpectedDataUnitId \n void setExpectedDataUnitId \n String getSrcFileName \n Long getSeqNo \n String getFailedAttributeName \n void setTestId \n void setFailedAttributeName \n Long getTestId \n void setErrorCode \n String getActualValue \n Long getDataUnitId \n void setSeqNo \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n String toString \n String getErrorMsg", "output": ""}, {"instruction": "Generate java code\nif requested lifetime exceeds shall it fail default or overwrite with maximum lifetime ", "input": " Logger LOG \n long DEFAULT_MAX_LIFETIME \n boolean acceptClientLifetime \n long lifetime \n long maxLifetime \n boolean failLifetimeExceedance \n long futureTimeToLive \n\n long getFutureTimeToLive \n void setFutureTimeToLive \n long getLifetime \n void setMaxLifetime \n void setLifetime \n void setAcceptClientLifetime \n ConditionsBean getConditions \n boolean isAcceptClientLifetime \n String extractAddressFromParticipantsEPR \n List<AudienceRestrictionBean> createAudienceRestrictions \n long getMaxLifetime \n boolean isFailLifetimeExceedance", "output": ""}, {"instruction": "Generate java code\ncan be called in leave _ to do an asynchronous state transition . the current state transition will be on hold in the old state until a final call to transition is made . this will complete the transition and possibly call the other callbacks . ", "input": " Object[] args \n FSM fsm \n boolean async \n String dst \n String src \n boolean cancelled \n String name \n Exception error \n\n Exception cancel", "output": ""}, {"instruction": "Generate java code\nappend a hashcode for a char . ", "input": " int iConstant \n int iTotal \n\n HashCodeBuilder appendSuper \n int toHashCode", "output": ""}, {"instruction": "Generate java code\nreturn the datasourcename via the datasource interface method . both the parameters are ignored ", "input": " Reader reader \n String dataSourceName \n\n String getDataSourceName \n String toString \n InputStream getInputStream \n void setDataSourceName", "output": ""}, {"instruction": "Generate java code\nset the identitymapper object to use . ", "input": " Object encryptionCryptoProperties \n Bus bus \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n Logger LOG \n String issuer \n EncryptionProperties encryptionProperties \n CallbackHandler callbackHandler \n List<Relationship> relationships \n boolean validateUseKey \n RelationshipResolver relationshipResolver \n String callbackHandlerClass \n String signatureUsername \n Crypto encryptionCrypto \n SAMLRealmCodec samlRealmCodec \n String encryptionUsername \n Object signatureCryptoProperties \n IdentityMapper identityMapper \n RealmParser realmParser \n\n RelationshipResolver getRelationshipResolver \n Bus getBus \n void setSamlRealmCodec \n ResourceManager getResourceManager \n void setSignaturePropertiesFile \n void setCallbackHandler \n void setEncryptionProperties \n EncryptionProperties getEncryptionProperties \n boolean isValidateUseKey \n void setSignatureUsername \n List<Relationship> getRelationships \n SAMLRealmCodec getSamlRealmCodec \n String getEncryptionUsername \n void setEncryptionPropertiesFile \n void setEncryptionUsername \n void setCallbackHandlerClass \n Crypto getEncryptionCrypto \n void setRelationships \n SignatureProperties getSignatureProperties \n void setSignatureProperties \n void setRealmParser \n String getIssuer \n void setSignatureCryptoProperties \n void setSignatureCrypto \n IdentityMapper getIdentityMapper \n void setValidateUseKey \n void configureProperties \n void setEncryptionCrypto \n RealmParser getRealmParser \n String getSignatureUsername \n Crypto getSignatureCrypto \n void setIssuer \n CallbackHandler getCallbackHandler \n void setEncryptionCryptoProperties \n void setBus", "output": ""}, {"instruction": "Generate java code\ncomputes eigenvalues only ", "input": " TridiagonalSimilarDecomposition<DenseMatrix64F> decomp \n boolean computeVectors \n SymmetricQREigenHelper helper \n double diag[] \n double values[] \n DenseMatrix64F V \n double offSaved[] \n DenseMatrix64F eigenvectors[] \n SymmetricQrAlgorithm vector \n double diagSaved[] \n boolean computeVectorsWithValues \n double off[] \n\n Complex64F getEigenvalue \n boolean extractSeparate \n DenseMatrix64F getEigenVector \n void setMaxIterations \n int getNumberOfEigenvalues \n boolean decompose \n void setComputeVectorsWithValues \n boolean extractTogether \n boolean inputModified", "output": ""}, {"instruction": "Generate java code\nreturns the claim dialect for claim mappings ", "input": " String CONFIG_APPLICATION_DAO \n String CONFIG_SAML_DAO \n String oauthDAOClassName \n String claimDialect \n String CONFIG_ELEMENT_SP_MGT \n String CONFIG_OAUTH_OIDC_DAO \n String CONFIG_SYSTEM_IDP_DAO \n String samlDAOClassName \n Log log \n String appDAOClassName \n ApplicationMgtSystemConfig instance \n String systemIDPDAPClassName \n String CONFIG_CLAIM_DIALECT \n\n SAMLApplicationDAO getSAMLClientDAO \n ApplicationDAO getApplicationDAO \n IdentityProviderDAO getIdentityProviderDAO \n ApplicationMgtSystemConfig getInstance \n void buildSystemConfiguration \n OAuthApplicationDAO getOAuthOIDCClientDAO", "output": ""}, {"instruction": "Generate java code\ntests the webutils #convertmstoclocktime long method with one hour . ", "input": " PlaceHolder placeHolder \n\n void convertToClockTimeWithOneMinute30Seconds \n void convertToClockTimeWithOneDay4Hours10Minutes45SecondsWithStopwatch \n void convertToClockTimeWithNegativeValue \n void convertToClockTimeWithShortValue \n void convertToClockTimeWithOneDay4Hours10Minutes45Seconds \n void convertToClockTimeWithOneHour10Minutes45Seconds \n void convertToClockTimeWithOneMinute \n void convertToClockTimeWithOneSecond \n void convertToClockTimeWithOneDay", "output": ""}, {"instruction": "Generate java code\nsets the type for the bufferedimage used as output for this renderer ; must be one of the values from java.awt.image.bufferedimage allowed in that class ' constructor as a type argument . see docs forthe type parameter in java.awt.image.bufferedimage #bufferedimage int , int , int . defaults to rgb with no support for transparency . the type is used when the image is first created , so to change the default type do so before calling #getimage . ", "input": " String sourceDocument \n SharedContext sharedContext \n int DEFAULT_DOTS_PER_PIXEL \n Java2DOutputDevice outputDevice \n Map renderingHints \n int NO_HEIGHT \n boolean rendered \n Box root \n float dotsPerPoint \n int DEFAULT_IMAGE_TYPE \n int bufferedImageType \n int width \n Document doc \n BufferedImage outputImage \n int DEFAULT_HEIGHT \n String sourceDocumentBase \n int DEFAULT_DOTS_PER_POINT \n int height \n\n Document loadDocument \n void layout \n void init \n BufferedImage createBufferedImage \n void setDocument \n boolean isHover \n boolean isFocus \n void setRenderingHints \n boolean isActive \n SharedContext getSharedContext \n BufferedImage getImage \n LayoutContext newLayoutContext", "output": ""}, {"instruction": "Generate java code\nclear the current page , and append it to the log file . ", "input": " int LAST_POS \n int FIRST_POS \n Page mypage \n String logfile \n int currentpos \n Block currentblk \n\n int getFirstRecordPosition \n ListIterator<BasicLogRecord> iterator \n void setFirstRecordPosition \n void flush \n void flush \n int size \n void appendVal \n int currentLSN \n void finalizeRecord \n void setLastRecordPosition \n int getLastRecordPosition \n int append", "output": ""}, {"instruction": "Generate java code\nreturns the list of all users available to the login service . ", "input": " IStoredSettings settings \n Map<String,String> legacyBackingServices \n IRuntimeManager runtimeManager \n Logger logger \n IUserService userService \n\n boolean deleteRepositoryRole \n List<String> getAllUsernames \n UserModel getUserModel \n UserModel getUserModel \n boolean updateUserModel \n boolean updateUserModel \n TeamModel getTeamModel \n boolean updateTeamModel \n boolean updateTeamModel \n boolean isInternalAccount \n List<String> getTeamNamesForRepositoryRole \n boolean deleteTeam \n boolean updateUserModels \n List<String> getUsernamesForRepositoryRole \n boolean deleteTeamModel \n UserManager start \n void setUserService \n IUserService createUserService \n List<TeamModel> getAllTeams \n String getCookie \n boolean deleteUserModel \n UserManager stop \n boolean deleteUser \n void setup \n boolean renameRepositoryRole \n List<String> getAllTeamNames \n boolean updateTeamModels", "output": ""}, {"instruction": "Generate java code\ncomputes the quality of the computed decomposition . a value close to or less than 1e-15 is considered to be within machine precision . this function must be called before the original matrix has been modified or else it will produce meaningless results . ", "input": " DenseMatrix64F mat \n EigenDecomposition<DenseMatrix64F> eig \n\n Complex64F getEigenvalue \n T getEigenVector \n EigenDecomposition getEVD \n int getNumberOfEigenvalues \n int getIndexMax \n int getIndexMin", "output": ""}, {"instruction": "Generate java code\nchecks if security is enabled . ", "input": " PlaceHolder placeHolder \n\n boolean isAuthorizationEnabled \n boolean isAuthenticationEnabled", "output": ""}, {"instruction": "Generate java code\nwhether the indices of subsequently tracked nodes should be tracked . ", "input": " Map<Node,Integer> nodeReferenceMap \n int nextIndex \n XPathContext ctx \n boolean atAttribute \n boolean atChild \n boolean trackNodeReferences \n LinkedList<TrackingEntry> levels \n\n void newLevel \n void clearTrackedAttribute \n void clearTrackedAttribute \n void indent \n String getNodeName \n void preloadChildren \n void preloadNodeList \n String toXpathString \n void visitedAttribute \n void trackNode \n void trackAttribute \n void visited \n void reset \n void reset \n void outdent \n void visitedNode \n void preloadChildList", "output": ""}, {"instruction": "Generate java code\nget the local sequence utility for a given cell in the projected q-matrix ", "input": " QMatrix originalMatrix \n List<MatrixPosition> positions \n\n int[] getItemNames \n int getItemUtility \n int getItemUtility \n int getRemainingUtility", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.hdtparser #setheading double . ", "input": " HDTSentence hdt \n String EXAMPLE \n\n void testSetHeadingTooHigh \n void testIsTrue \n void setUp \n void testGetHeading \n void testSetNegativeHeading \n void testConstructor", "output": ""}, {"instruction": "Generate java code\nwhich element in the submatrix was returned by next ", "input": " ReshapeMatrix64F a \n int index \n int subRow \n int minRow \n int minCol \n int size \n int submatrixStride \n boolean rowMajor \n int subCol \n\n Double next \n void set \n boolean isRowMajor \n boolean hasNext \n void remove", "output": ""}, {"instruction": "Generate java code\nreturns a string representation of the enumeration value . ", "input": " CallConcurrencyKindEnum CCK_GUARDED \n CallConcurrencyKindEnum CCK_SEQUENTIAL \n java.util.List typeName \n CallConcurrencyKindEnum CCK_CONCURRENT \n java.lang.String literalName \n\n java.lang.Object readResolve \n CallConcurrencyKind forName \n java.util.List refTypeName \n int hashCode \n boolean equals", "output": ""}, {"instruction": "Generate java code\noperation getcolumn returns the value of the attribute _ column . ", "input": " int edgeOffset \n FigNode figure \n float UPLINK_FACTOR \n List<ClassdiagramNode> uplinks \n int rank \n List<ClassdiagramNode> downlinks \n int NORANK \n int column \n int placementHint \n float weight \n int NOCOLUMN \n int NOWEIGHT \n\n Vector<ClassdiagramNode> getUplinks \n Point getLocation \n boolean isComment \n List<ClassdiagramNode> getUpNodes \n float getWeight \n FigNode getFigure \n Vector<ClassdiagramNode> getDownlinks \n int compareTo \n void setColumn \n void addDownlink \n void setLocation \n void setEdgeOffset \n boolean isStandalone \n float getSubtreeWeight \n float calculateWeight \n void setRank \n void addRank \n int getTypeOrderNumer \n int getEdgeOffset \n int getRank \n void setWeight \n boolean isPackage \n void addUplink \n int getLevel \n Dimension getSize \n void setPlacementHint \n int getPlacementHint \n void setFigure \n List<ClassdiagramNode> getDownNodes", "output": ""}, {"instruction": "Generate java code\nset the signature crypto object ", "input": " CallbackHandler callbackHandler \n Logger LOG \n Crypto signatureCrypto \n SignatureProperties signatureProperties \n String callbackHandlerClass \n String signaturePropertiesFile \n String signatureAlias \n String issuer \n\n String getIssuer \n String getSignatureAlias \n void setCallbackHandlerClass \n void setIssuer \n Crypto getSignatureCrypto \n CallbackHandler getCallbackHandler \n SignatureProperties getSignatureProperties \n void setSignatureAlias \n void setSignaturePropertiesFile \n void setSignatureProperties \n void setCallbackHandler", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rmcparser #setcourse double . ", "input": " String EXAMPLE \n RMCParser rmc \n RMCParser empty \n\n void testSetFaaModeWhenOmitted \n void testSetDirectionOfVariationWithInvalidDirection \n void testGetCorrectedCourse \n void testGetDataStatus \n void testConstructor \n void testGetTime \n void testSetFaaMode \n void testSetVariation \n void setUp \n void testGetMonth \n void testGetCourse \n void testSetDate \n void testGetYear \n void testSetDataStatus \n void testGetDirectionOfVariation \n void testGetDate \n void testGetMagneticVariation \n void testSetPosition \n void testGetPosition \n void testSetDirectionOfVariation \n void testSetTime \n void testGetDay \n void testGetSpeed \n void testGetFaaMode \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\ngets max value . ", "input": " boolean consoleMode \n org.apache.log4j.Logger logger \n int maxValue \n boolean showProgress \n ProgressMonitor progressMonitor \n StringBuffer log \n String currentMessage \n List<String> debugMessages \n TreeSet<String> warnings \n int curValue \n HashMap<String,Integer> warningCounts \n\n void setCurValue \n void setConsoleModeAndParseShowProgress \n void setShowProgress \n void setCurrentMessage \n String getLog \n void logWarning \n ArrayList<String> getWarnings \n void logDebug \n ArrayList<String> getMessages \n boolean isConsoleMode \n List<String> getDebugMessages \n void setMaxValue \n void incrementCurValue \n boolean isRunningOnServer \n String getCurrentMessage \n void setConsoleMode \n int getCurValue \n boolean isShowProgress \n double getPercentComplete", "output": ""}, {"instruction": "Generate java code\nset the time by java.util.date . the date information of is ignored , only hours , minutes and seconds are relevant . notice also that time zone offset is not affected by this method because java.util.date does not contain zone offset . ", "input": " int offsetHours \n int offsetMinutes \n double seconds \n int minutes \n int hour \n String TIME_PATTERN \n\n int getOffsetHours \n Date toDate \n String toISO8601 \n void setMinutes \n void setHour \n long getMilliseconds \n void setOffsetMinutes \n int getMinutes \n double getSeconds \n int hashCode \n void setSeconds \n boolean equals \n int getOffsetMinutes \n int getHour \n String toString \n void setOffsetHours", "output": ""}, {"instruction": "Generate java code\nclose all tags in the stack and end them at the end of the builder . used to close any remaining open tags at the end of parsing , since these tags should run to the end of the text ", "input": " Pattern TAG_OPEN \n SpannableStringBuilder builder \n String BULLET_LIST \n String NUM_LIST \n Map<String,TagStyle> tagStyles \n Pattern TAG_CLOSE \n\n void parseNumberedList \n int openTag \n void parseBulletLists \n int getOffset \n void parsePlainUrls \n int closeTags \n int parseHiddenTag \n int indexOf \n int indexOf \n CharSequence parsebb", "output": ""}, {"instruction": "Generate java code\nreturns the names of all search strategies , which are supported by this factory . the indices correspond to the parameter values of method #createsearch int , int , heuristicfunction . ", "input": " int GBF_SEARCH \n int ASTAR_SEARCH \n SearchFactory instance \n int UC_SEARCH \n int GRAPH_SEARCH \n int HILL_SEARCH \n int BF_SEARCH \n int ID_SEARCH \n int TREE_SEARCH \n int RBF_SEARCH \n int DF_SEARCH \n\n String[] getSearchModeNames \n SearchFactory getInstance \n Search createSearch", "output": ""}, {"instruction": "Generate java code\nset the object . ", "input": " String predicate \n String subject \n String object \n TripleObjectTypeEnum objectType \n\n void setObjectType \n String getSubject \n void setSubject \n void setPredicate \n String getObject \n String getPredicate \n TripleObjectTypeEnum getObjectType", "output": ""}, {"instruction": "Generate java code\nadds an unnamed value to the formatted output . it is strongly encouraged to use #add string , long instead and give value areadable name . ", "input": " ValueHolder next \n ValueHolder holderTail \n String name \n String className \n boolean omitNullValues \n ValueHolder holderHead \n Object value \n\n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper add \n ToStringHelper omitNullValues \n ValueHolder addHolder \n ToStringHelper addHolder \n ToStringHelper addHolder \n T firstNonNull \n ToStringHelper toStringHelper \n ToStringHelper toStringHelper \n ToStringHelper toStringHelper \n String toString", "output": ""}, {"instruction": "Generate java code\ngets the http conduit responsible for a transport-level communication with the remote service . ", "input": " ConduitSelector conduitSelector \n Map<String,Object> requestContext \n Bus bus \n List<Interceptor<? extends Message>> inInterceptors \n long synchronousTimeout \n List<Interceptor<? extends Message>> outInterceptors \n Logger LOG \n List<Interceptor<? extends Message>> inFault \n Map<String,Object> responseContext \n List<Interceptor<? extends Message>> outFault \n\n Bus getBus \n List<Interceptor<? extends Message>> getOutFaultInterceptors \n Endpoint getEndpoint \n long getSynchronousTimeout \n void setConduitSelector \n void setOutInterceptors \n List<Interceptor<? extends Message>> getInInterceptors \n Map<String,Object> getResponseContext \n boolean isResponseExpectedForOneway \n void setOutFaultInterceptors \n Conduit getConduit \n void setSynchronousTimeout \n ConduitSelector getConduitSelector \n List<Interceptor<? extends Message>> getInFaultInterceptors \n List<Interceptor<? extends Message>> getOutInterceptors \n void setInInterceptors \n Map<String,Object> getRequestContext \n void setInFaultInterceptors \n void setBus \n void prepareConduitSelector", "output": ""}, {"instruction": "Generate java code\nreturns available capacity of this buffer . ", "input": " int mode \n ByteBuffer buffer \n ByteBufferAllocator allocator \n int OUTPUT_MODE \n int INPUT_MODE \n\n void expandCapacity \n void setOutputMode \n void expand \n void setInputMode \n boolean hasData \n int length \n void clear \n String toString \n int getMode \n void ensureCapacity \n int capacity", "output": ""}, {"instruction": "Generate java code\nget the private key alias if the key alias is defined in the security configuration take it from there otherwise key alias is taken from the server configuration ", "input": " boolean isServerPrincipalPasswordEncrypted \n String serverPrincipalPassword \n String trustStores \n String allowedRoles \n String keyAlias \n String privateStore \n\n String getTrustStores \n void setTrustStores \n String getServerPrincipalPassword \n void setKeyAlias \n void setServerPrincipalPassword \n String getPrivateStore \n String getAllowedRoles \n void setPrivateStore \n void setAllowedRoles \n void setServerPrincipalPasswordEncrypted \n boolean isServerPrincipalPasswordEncrypted", "output": ""}, {"instruction": "Generate java code\ncomputes the area of a trapezoid . all the lengths should be of the same unit of measure . ", "input": " PlaceHolder placeHolder \n\n float getLatitudeCircum \n float getTrapezoidSideLen \n float getDistToEquator", "output": ""}, {"instruction": "Generate java code\nreturns a map of strings from the specified key . ", "input": " Logger logger \n Properties overrides \n Set<String> removals \n\n Properties read \n int getFilesize \n long getFilesize \n Properties getSettings \n int getInteger \n boolean hasSettings \n String getString \n void removeSetting \n boolean saveSettings \n boolean saveSettings \n List<String> getStrings \n List<String> getStrings \n void overrideSetting \n void overrideSetting \n void overrideSetting \n long getLong \n char getChar \n String getRequiredString \n List<String> getAllKeys \n void merge \n boolean getBoolean \n List<Integer> getIntegers \n List<Integer> getIntegers", "output": ""}, {"instruction": "Generate java code\nget the action that can undo the last user interaction on this project . ", "input": " ProjectActions theInstance \n ActionRemoveFromDiagram removeFromDiagram \n AbstractAction redoAction \n ActionUndo undoAction \n\n void determineRemoveEnabled \n void targetSet \n void jumpToDiagramShowing \n AbstractAction getRedoAction \n void targetRemoved \n AbstractAction getRemoveFromDiagramAction \n void setTarget \n void propertyChange \n ProjectActions getInstance \n void targetAdded", "output": ""}, {"instruction": "Generate java code\ndispatch the tpv event to all listeners . ", "input": " List<SentenceEvent> events \n SentenceReader reader \n List<ProviderListener<T>> listeners \n\n void readingStopped \n boolean hasAll \n T createProviderEvent \n boolean isReady \n boolean isValid \n boolean hasOne \n void readingStarted \n void removeListener \n void readingPaused \n void reset \n void sentenceRead \n List<Sentence> getSentences \n void addListener \n boolean validate", "output": ""}, {"instruction": "Generate java code\nadd elements from the source to the target as long as they do n't already exist there . return the number of items actually added . ", "input": " TypeMap COLLECTION_INTERFACES_BY_NAMES \n TypeMap COLLECTION_CLASSES_BY_NAMES \n\n boolean areEqual \n boolean areSemanticEquals \n boolean valuesAreTransitivelyEqual \n boolean isCollectionType \n boolean isCollectionType \n boolean isEmpty \n boolean isNotEmpty \n Class<?> getCollectionTypeFor \n Set<T> asSet \n Map<V,K> invertedMapFrom \n boolean arraysAreEqual \n Map<K,V> mapFrom", "output": ""}, {"instruction": "Generate java code\nadds a word to the document . ", "input": " Map<O,DocumentElement<O>> data \n int wordCountMultiSet \n String name \n IntegerHolder count \n T object \n\n int multiSetSize \n Iterator<DocumentElement<O>> iterator \n T getObject \n String getName \n int size \n void setWord \n int getCount \n void inc", "output": ""}, {"instruction": "Generate java code\nsets the value of the handlerclass property . ", "input": " FullyQualifiedClassType handlerClass \n List<CString> soapRole \n List<ParamValueType> initParam \n List<DisplayNameType> displayName \n List<XsdQNameType> soapHeader \n List<IconType> icon \n List<DescriptionType> description \n CString handlerName \n java.lang.String id \n\n List<ParamValueType> getInitParam \n List<DisplayNameType> getDisplayName \n void setHandlerName \n void setId \n CString getHandlerName \n FullyQualifiedClassType getHandlerClass \n java.lang.String getId \n List<CString> getSoapRole \n List<DescriptionType> getDescription \n List<XsdQNameType> getSoapHeader \n List<IconType> getIcon", "output": ""}, {"instruction": "Generate java code\nget the individual uri . ", "input": " HashMap<String,TripleIndividualStructure> triples \n String individualUri \n\n void removeTriple \n void setIndividualUri \n void setTriples \n HashMap<String,TripleIndividualStructure> getTriples \n void addTriple", "output": ""}, {"instruction": "Generate java code\npopup an info to the user ex : `` process complete . '' ", "input": " String appName \n Logger logger \n\n void setLogger \n void popupError \n void warning \n void error \n void error \n void error \n void error", "output": ""}, {"instruction": "Generate java code\nreturns the approximate count of elements left in the format . this method does not account for repeat counts or string length encodings - so should be used as a guide only . ", "input": " int formatOff \n boolean isRaw \n int formatRepeatCount \n String format \n\n void checkType \n char getType \n int getLengthFromFormat \n void reset \n String toString \n void consume \n int getIntFromFormat \n boolean hasLength", "output": ""}, {"instruction": "Generate java code\nsets up the server before a test runs . ", "input": " byte sSEPARATOR \n ExpectedException mThrown \n PlainSaslServer mPlainSaslServer \n\n void authenticationNotComplete \n void unauthorizedCallback \n void userPasswordReceive \n void passwordIsNotSet \n void userIsNotSet \n void handle \n void handle \n byte[] getUserInfo", "output": ""}, {"instruction": "Generate java code\nget the sequences from this sequence database . ", "input": " List<SequenceWithUtility> sequences \n\n void printDatabaseStats \n void print \n int size \n Set<Integer> getSequenceIDs \n void loadFile \n String toString \n void addSequence \n void addSequence", "output": ""}, {"instruction": "Generate java code\nreturns result value as boolean . ", "input": " String NAME \n String FAULT \n String MEMBER \n TimeZone tz \n ArrayList<Object> values \n String VALUE \n\n String getStringValue \n ArrayList<Object> parseArray \n List getValues \n Map<String,Object> getStructValue \n Double getDoubleValue \n int getValueCount \n void parse \n Integer getIntegerValue \n HashMap<String,Object> parseStruct \n List<Object> getArrayValue \n Object parseValue \n byte[] getBinaryValue \n Date getDateValue", "output": ""}, {"instruction": "Generate java code\nenable/disable drag/drop ", "input": " int mobileViewStartY \n Activity activity \n DisplayMetrics displayMetrics \n boolean enabled \n int mobileViewCurrentPos \n String LOG_TAG \n int MOVE_DURATION \n int activePointerId \n View mobileView \n boolean dragging \n Drawable dragHighlight \n RecyclerView recyclerView \n int scrollAmount \n int downY \n int downX \n\n boolean cancel \n boolean onInterceptTouchEvent \n boolean move \n void onItemDrop \n void onTouchEvent \n boolean scrollIfNeeded \n int[] getViewRawCoords \n boolean down \n View getViewByPosition \n void switchViewsIfNeeded \n void doSwitch \n void startDrag \n ImageView copyViewAsImage \n void reset \n boolean up \n void onItemSwitch \n void setCustomDragHighlight", "output": ""}, {"instruction": "Generate java code\na wrapper for #valueof string . it returns null instead of throwing an exception . ", "input": " CommandHandler FILE_UPLOAD \n CommandHandler CREATE_FOLDER \n CommandHandler GET_FOLDERS \n CommandHandler GET_FOLDERS_AND_FILES \n Map<String,CommandHandler> postCommands \n String name \n Map<String,CommandHandler> getCommands \n CommandHandler QUICK_UPLOAD \n\n boolean isValidForPost \n String getName \n CommandHandler valueOf \n int hashCode \n boolean equals \n String toString \n boolean isValidForGet", "output": ""}, {"instruction": "Generate java code\nset the subject role classifier type to use . currently accepted values are `` prefix '' or `` classname '' . must be used in conjunction with the subject_role_classifier . the default value is `` prefix '' . ", "input": " String roleClassifierType \n String roleClassifier \n\n void setRoleClassifier \n String getRoleClassifierType \n Set<Principal> parseRolesFromSubject \n String getRoleClassifier", "output": ""}, {"instruction": "Generate java code\nloads a resource for the specified path ", "input": " String LESS_PATH \n String[] LESS_JS \n Map<String,Long> lastModified \n Scriptable scope \n Function parse \n String CLASSPATH_PREFIX \n Pattern PATTERN_THEME_REQUEST \n FilterConfig config \n Map<String,String> cache \n Pattern PATTERN_THEME_REQUEST_PARTS \n\n void init \n URL findResource \n void compile \n void doFilter \n void log \n void log \n void destroy \n Scriptable compileCSS \n long getMaxLastModified", "output": ""}, {"instruction": "Generate java code\nmethods to call during initialization ", "input": " ServerProxy proxy \n MainRegistry modInstance \n\n void preInit \n void postInit", "output": ""}, {"instruction": "Generate java code\ncomputes the greatest common divisor of two bigintegers . ", "input": " PlaceHolder placeHolder \n\n int findLCM \n BigInteger findLCM \n BigInteger findLCM \n byte[] correctSize", "output": ""}, {"instruction": "Generate java code\nsize . ", "input": " Integer count \n long serialVersionUID \n Integer totalCount \n List<T> items \n\n void addItem \n void setTotalCount \n List<T> getItems \n int hashCode \n void setItems \n boolean equals \n void addList \n Integer getTotalCount \n String toString \n Integer getCount", "output": ""}, {"instruction": "Generate java code\nsets the feed id . ", "input": " String reason \n String feedId \n String testId \n String batchId \n String runStatus \n\n boolean isFeedRunnable \n String getReason \n String getRunStatus \n void setReason \n String getBatchId \n String toString \n String getFeedId \n void setBatchId \n void setTestId \n String getTestId \n void setRunStatus", "output": ""}, {"instruction": "Generate java code\na code defining the type of the value as defined above . ", "input": " String _cssText \n RGBColor rgbColorValue \n float floatValue \n Rect rectValue \n Counter counter \n short primitiveType \n\n void setStringValue \n String getStringValue \n FSCssValue getNewIdentValue \n String getCssText \n Rect getRectValue \n void setFloatValue \n float getFloatValue \n short getPrimitiveType \n RGBColor getRGBColorValue \n String toString \n Counter getCounterValue \n void setCssText", "output": ""}, {"instruction": "Generate java code\nget the utility of a cell in the projected q-matrix at a given cell position row , column ", "input": " QMatrix originalMatrix \n List<MatrixPosition> positions \n\n int getLocalSequenceUtility \n int[] getItemNames \n int getRemainingUtility", "output": ""}, {"instruction": "Generate java code\nadds a repository permission to the team . role may be formatted as : myrepo.git this is implicitly rw + rw + : myrepo.git ", "input": " Set<String> repositories \n boolean canAdmin \n AccountType accountType \n List<String> preReceiveScripts \n List<String> postReceiveScripts \n String name \n Map<String,AccessPermission> permissions \n long serialVersionUID \n boolean canFork \n boolean canCreate \n Set<String> users \n Set<String> mailingLists \n\n boolean canDeleteRef \n boolean hasRepositoryPermission \n boolean canCreateRef \n void addRepositoryPermissions \n boolean canClone \n void addUser \n boolean canPush \n int compareTo \n boolean hasUser \n void addUsers \n List<RegistrantAccessPermission> getRepositoryPermissions \n boolean canView \n boolean canRewindRef \n void removeUser \n boolean hasExplicitRepositoryPermission \n boolean canAccess \n void setRepositoryPermission \n boolean isLocalTeam \n AccessPermission removeRepositoryPermission \n String toString \n void addMailingLists \n RegistrantAccessPermission getRepositoryPermission", "output": ""}, {"instruction": "Generate java code\nappend o to l , returning l . ", "input": " PlaceHolder placeHolder \n\n T firstOrElse \n boolean equals \n List<T> nonNullList \n List<T> list \n List<T> list \n List<T> list \n List<T> list \n List<T> list \n List<U> map \n Iterator<Pair<T,T>> pairs", "output": ""}, {"instruction": "Generate java code\nreturns true if this objects chainwork is higher than the others . ", "input": " int COMPACT_SERIALIZED_SIZE \n BigInteger chainWork \n int CHAIN_WORK_BYTES \n Block header \n long serialVersionUID \n byte[] EMPTY_BYTES \n int height \n\n int getHeight \n BigInteger getChainWork \n StoredBlock deserializeCompact \n StoredBlock build \n void serializeCompact \n int hashCode \n boolean equals \n String toString \n StoredBlock getPrev \n Block getHeader", "output": ""}, {"instruction": "Generate java code\nthe id for a place to tag with this content . ", "input": " Uri contentUrl \n String ref \n List<String> peopleIds \n String placeId \n\n List<String> readUnmodifiableStringList \n E setContentUrl \n E setRef \n E readFrom \n String getRef \n Uri getContentUrl \n E setPlaceId \n List<String> getPeopleIds \n E setPeopleIds \n int describeContents \n void writeToParcel", "output": ""}, {"instruction": "Generate java code\nspecifies whether to generate `` a = rtpmap : '' attributes for static rtp/avp format strings . this is recommended but makes messages bigger . the default is not to write such attributes . ", "input": " PlaceHolder placeHolder \n\n void output \n void setEncoding \n void setTypedTime", "output": ""}, {"instruction": "Generate java code\nconverts the specified string to a bytebuffer . the string encoding is assumed to be ascii . ", "input": " CharsetDecoder DECODER \n Logger LOG \n\n Collection<byte[]> splitToByteArrays \n Collection<ByteBuffer> split \n byte[] toByteArray \n void putUnsignedByte \n void putUnsignedByte \n String toAsciiString \n void putUnsignedShort \n void putUnsignedShort \n boolean isUdp \n String getString \n ByteBuffer createBuffer \n void putUnsignedInt \n void putUnsignedInt", "output": ""}, {"instruction": "Generate java code\nrequests a block from the server . this call will read the full block . ", "input": " int WORKER_CAPACITY_BYTES \n BlockWorkerClient mBlockWorkerClient \n BlockMasterClient mBlockMasterClient \n ManuallyScheduleHeartbeat sManuallySchedule \n FileSystem mFileSystem \n LocalAlluxioClusterResource mLocalAlluxioClusterResource \n\n void multiRead \n BlockInfo getFirstBlockInfo \n void read \n void readThroughClientNonExistent \n Collection<Object[]> data \n ByteBuffer readRemotely \n void before \n void readPartialTest1 \n void readPartialTest2 \n void tooLargeOffset \n void assertValid \n void assertValid \n void readThroughClient \n void lengthTooSmall \n void assertError \n void readMultiFiles \n void after \n void negativeOffset \n void readTooLarge", "output": ""}, {"instruction": "Generate java code\nreturn whether this securitytoken is expired or not ", "input": " Date expires \n byte[] data \n String transformedTokenIdentifier \n Date created \n Element unattachedReference \n byte[] secret \n SecurityContext securityContext \n int tokenHash \n Element token \n Crypto crypto \n Principal principal \n long serialVersionUID \n String wsuId \n String issuerAddress \n String encrKeySha1Value \n String id \n X509Certificate x509cert \n String BOOTSTRAP_TOKEN_ID \n String tokenType \n Element attachedReference \n Map<String,Object> properties \n Key key \n\n void setAttachedReference \n String getTokenType \n void setProperties \n void setExpires \n String getIssuerAddress \n void setSHA1 \n String getId \n void setX509Certificate \n String getTransformedTokenIdentifier \n void setTokenHash \n void setPrincipal \n Principal getPrincipal \n String getIdFromSTR \n void setId \n void setIssuerAddress \n byte[] getData \n void setKey \n void setTokenType \n Key getKey \n void setData \n Map<String,Object> getProperties \n void setTransformedTokenIdentifier \n int getTokenHash \n Date getCreated \n Element getUnattachedReference \n void processLifeTime \n void setUnattachedReference \n void setSecurityContext \n Crypto getCrypto \n byte[] getSecret \n void setToken \n void setSecret \n X509Certificate getX509Certificate \n Element getToken \n boolean isAboutToExpire \n void setWsuId \n Date getExpires \n String getWsuId \n Element cloneElement \n Element getAttachedReference \n String getSHA1 \n SecurityContext getSecurityContext", "output": ""}, {"instruction": "Generate java code\nsets the replacement string for any characters outside the ` safe ' range that have no explicit replacement . if unsafereplacement is null then no replacement will occur , ifit is '' '' then the unsafe characters are removed from the output . ", "input": " Escaper NULL_ESCAPER \n Map<Character,String> replacementMap \n char safeMax \n String unsafeReplacement \n char safeMin \n\n Escaper nullEscaper \n Escaper build \n Builder addEscape \n Builder builder \n Builder setSafeRange \n String stringOrNull \n UnicodeEscaper asUnicodeEscaper \n String escape \n char[] escape \n String computeReplacement \n String computeReplacement \n UnicodeEscaper wrap", "output": ""}, {"instruction": "Generate java code\nruns an example . ", "input": " Logger LOG \n\n void printPassInfo", "output": ""}, {"instruction": "Generate java code\nappends a new block to the end of the specified b-tree file , having the specified flag value . ", "input": " Transaction tx \n TableInfo ti \n int slotsize \n Block currentblk \n\n void insertDir \n int getChildNum \n void insert \n void delete \n Block split \n void transferRecs \n int fldpos \n int getNumRecs \n int slotpos \n void close \n int getFlag \n void setVal \n RID getDataRid \n Constant getVal \n void setFlag \n void insertLeaf \n String getString \n void setInt \n int getInt \n void setString \n Constant getDataVal \n void copyRecord \n boolean isFull \n void setNumRecs \n int findSlotBefore", "output": ""}, {"instruction": "Generate java code\ncheck whether finished ", "input": " float xStartPos \n FloatBuffer lModelAmbient \n float zPos \n float yPos \n float MOVE_FORWARD_SPEED \n float yStartPos \n float walkbiasangle \n float walkbias \n int BULLET_INTERVAL \n long bulletTime \n int MAX_BULLETS \n float ROTATE_SPEED \n Monster[] monsters \n float xPos \n float MOVE_BACKWARD_SPEED \n int MAX_MONSTERS \n FloatBuffer lightPosition \n FloatBuffer whiteLight \n boolean[] monstersLiving \n float heading \n float STRAFE_SPEED \n float zStartPos \n ArrayList<Bullet> bullets \n\n void turnRight \n void restart \n void start \n void update \n void fireBullet \n void walkForwards \n void renderFloor \n void walkBackwards \n void strafeLeft \n Level LoadFromFile \n void strafeRight \n void renderWalls \n void turnLeft \n Level ReadFromXML \n void render", "output": ""}, {"instruction": "Generate java code\ndestructor cleans up . ", "input": " String defaultPass \n Object lockObject \n String defaultHost \n String defaultUser \n boolean defaultSsl \n boolean ssl \n OutputStream sout \n Map callCache \n String password \n int port \n String rpcToken \n String host \n InputStream sin \n boolean disableDb \n Socket connection \n int defaultPort \n String username \n\n void disconnect \n Object cacheExecute \n Object execute \n Object readResp \n void reconnect \n void writeCall \n void setup \n String toString \n Task startRpcConn \n RpcConnection getConn \n byte[] getData \n void connect \n Object exec", "output": ""}, {"instruction": "Generate java code\nfrees database connection . ", "input": " Log LOG \n Map<String,Integer> activeConnectionCount \n DataSource ds \n\n DataSource getDataSource \n Long readLongFromResultSet \n void logMessage \n void disableForeignKeyCheck \n DataSource initDataSource \n Integer readIntegerFromResultSet \n void enableForeignKeyCheck \n void setDataSource \n Connection getDbConnection \n Connection getDbConnection \n void closeAll \n void closeAll \n void closeAll \n void closeAll \n Double readDoubleFromResultSet", "output": ""}, {"instruction": "Generate java code\nreturn the optional list of user roles which may have been captured during the authentication process ", "input": " long serialVersionUID \n List<String> roles \n String id \n Map<String,String> properties \n String login \n\n String getLogin \n void setLogin \n Map<String,String> getProperties \n void setProperties \n void setId \n String getId \n void setRoles", "output": ""}, {"instruction": "Generate java code\napplies umask to the mode bits . ", "input": " Mode mMode \n String mOwner \n Mode FILE_UMASK \n String mGroup \n\n Permission applyFileUMask \n Permission setOwnerFromThriftClient \n Permission defaults \n Permission setOwnerFromLoginModule \n int hashCode \n String getGroup \n boolean equals \n String toString \n Mode getMode \n String getOwner \n Permission applyDirectoryUMask", "output": ""}, {"instruction": "Generate java code\ncalls nextstep method in fuzzy tasker . ", "input": " EntityMobWithInventory mob \n int ticker \n World world \n FuzzyInterpreter fin \n FuzzyTasker futa \n EntityPlayer player \n\n void setInputs \n boolean setAction \n void printInputs", "output": ""}, {"instruction": "Generate java code\nget the support of the itemset represented by this utility-list ", "input": " Integer item \n long sumRutils \n long sumIutils \n List<Element> elements \n\n void addElement", "output": ""}, {"instruction": "Generate java code\nright move the drone a little to the right ", "input": " GeneralMotorCon ourInstance \n int spin90Time \n String TAG \n int batLvl \n long threadTimer \n int spinSpeed \n CommandManager cmd \n int hoverTime \n int speed \n int spin90Speed \n ARDrone drone \n int spinTime \n\n void spin90Left \n void spinRight \n void takeoff \n void forward \n void spinLeft \n void lowerAltitude \n void spin90Right \n void landing \n void setDrone \n void left \n void backward \n GeneralMotorCon getInstance \n void setBatLvl \n void waitFor \n int getBatLvl \n void onStop \n void raiseAltitude", "output": ""}, {"instruction": "Generate java code\nif within the scope of a el evaluation call , it gives access to the elevaluator instance performing the el evaluation . this is useful for el function methods to get access to the variables of the evaluator . because of this , elevaluator variables can be used to pass context to el function methods which must be static methods . ", "input": " Map<String,Method> functions \n ThreadLocal<ELEvaluator> current \n Context context \n ExpressionEvaluator evaluator \n Map<String,Object> vars \n\n void setVariables \n Method resolveFunction \n void addFunction \n Object resolveVariable \n void setVariable \n void setVariable \n Object getVariable \n Object getVariable \n Context getContext \n T evaluate", "output": ""}, {"instruction": "Generate java code\nreturns a boolean indicating whether the file manager had to create a new database directory . ", "input": " File dbDirectory \n boolean isNew \n Map<String,FileChannel> openFiles \n\n void read \n int size \n void write \n FileChannel getFile \n Block append", "output": ""}, {"instruction": "Generate java code\nreturns a function that ignores its input and always returns value . java 8 users : use the lambda expression o - > value instead . ", "input": " long serialVersionUID \n Predicate<T> predicate \n V defaultValue \n Function<A,? extends B> f \n Function<B,C> g \n Supplier<T> supplier \n Map<K,? extends V> map \n E value \n\n Function<T,Boolean> forPredicate \n Function<Object,T> forSupplier \n String apply \n Object apply \n V apply \n V apply \n C apply \n Boolean apply \n E apply \n T apply \n Function<A,C> compose \n Function<E,E> identity \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n int hashCode \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n boolean equals \n Function<Object,String> toStringFunction \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n String toString \n Function<K,V> forMap \n Function<K,V> forMap", "output": ""}, {"instruction": "Generate java code\nget the wsse11 tokentype attribute ", "input": " String identifier \n String wsseValueType \n boolean useKeyIdentifier \n boolean useDirectReference \n String wsse11TokenType \n\n void setWsse11TokenType \n void setWsseValueType \n String getIdentifier \n void setIdentifier \n void setUseDirectReference \n boolean isUseKeyIdentifier \n String getWsseValueType \n boolean isUseDirectReference \n void setUseKeyIdentifier", "output": ""}, {"instruction": "Generate java code\nsets the result code . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n byte[] getErrors \n void setFileCount \n BigDecimal getDownloadSize \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\ncreates an rpc connection of the appropriate type and connection details / / @param type rpc type ", "input": " String defaultPass \n Object lockObject \n String defaultHost \n String defaultUser \n boolean defaultSsl \n boolean ssl \n OutputStream sout \n Map callCache \n String password \n int port \n String rpcToken \n String host \n InputStream sin \n boolean disableDb \n Socket connection \n int defaultPort \n String username \n\n void disconnect \n Object cacheExecute \n Object execute \n Object readResp \n void reconnect \n void writeCall \n void setup \n String toString \n void finalize \n Task startRpcConn \n byte[] getData \n void connect \n Object exec", "output": ""}, {"instruction": "Generate java code\ntest finding blacklisted sites from the repository . ", "input": " String uri3 \n String uri1 \n BlacklistedSiteRepository mockRepository \n String uri2 \n DefaultBlacklistedSiteService service \n BlacklistedSite site1 \n BlacklistedSite site2 \n Set<BlacklistedSite> blackListedSitesSet \n\n void prepare \n void isBlacklisted_no", "output": ""}, {"instruction": "Generate java code\nreturns the unsigned int value represented by a string with the given radix . ", "input": " long INT_MASK \n\n int compare \n int compare \n int saturatedCast \n long toLong \n int max \n int decode \n int min \n Comparator<int[]> lexicographicalComparator \n int checkedCast \n String toString \n String toString \n String toString \n int divide \n String join \n int flip \n int remainder", "output": ""}, {"instruction": "Generate java code\nthe authentication in place when this token was created . ", "input": " String QUERY_BY_VALUE \n String code \n String QUERY_EXPIRATION_BY_DATE \n String PARAM_DATE \n AuthenticationHolderEntity authenticationHolder \n Date expiration \n Long id \n\n Date getExpiration \n void setCode \n void setId \n Long getId \n void setAuthenticationHolder \n void setExpiration \n String getCode", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rteparser #setsentencecount int . ", "input": " RTESentence rte \n String EXAMPLE \n RTESentence empty \n\n void testGetWaypointIds \n void testIsActiveRoute \n void testIsFirst \n void testGetSentenceIndex \n void testConstructor \n void testAddWaypointId \n void testGetSentenceCount \n void testSetWaypointIds \n void testSetRouteId \n void testIsWorkingRoute \n void testSetSentenceCount \n void testGetRouteId \n void testSetRouteTypeActive \n void setUp \n void testIsLast \n void testGetWaypointCount \n void testSetSentenceIndex \n void testSetRouteTypeWorking \n void testSetSentenceIndexWithNegativeValue", "output": ""}, {"instruction": "Generate java code\ncreate a program that satisfies an op_checkmultisig program , using pre-encoded signatures . optionally , appends the script program bytes if spending a p2sh output . ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder op \n Script updateScriptWithSignature \n Script createOpReturnScript \n ScriptBuilder data \n ScriptBuilder data \n ScriptBuilder smallNum \n ScriptBuilder smallNum \n Script createRedeemScript \n ScriptBuilder addChunk \n ScriptBuilder addChunk \n Script createInputScript \n Script createInputScript \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript \n Script createMultiSigOutputScript \n Script build \n Script createP2SHMultiSigInputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript", "output": ""}, {"instruction": "Generate java code\nchecks if authentication is enabled . ", "input": " PlaceHolder placeHolder \n\n boolean isSecurityEnabled \n boolean isAuthorizationEnabled", "output": ""}, {"instruction": "Generate java code\nset the referenced revision label in b. ", "input": " String referencedRevisionA \n String referencedRevisionLabelA \n String referencedRevisionLabelB \n String referencedRevisionB \n Triple triple \n SDDTripleStateEnum tripleResolutionState \n ResolutionStateEnum resolutionState \n\n String getReferencedRevisionLabelB \n void setResolutionState \n String getReferencedRevisionLabelA \n void setReferencedRevisionLabelA \n SDDTripleStateEnum getTripleResolutionState \n Triple getTriple \n String getReferencedRevisionB \n void setTripleResolutionState \n void setTriple \n void setReferencedRevisionA \n String getReferencedRevisionA \n ResolutionStateEnum getResolutionState \n void setReferencedRevisionB", "output": ""}, {"instruction": "Generate java code\ncalculates | z i | for all i ", "input": " NaturalRanking naturalRanking \n\n double wilcoxonSignedRank \n double calculateAsymptoticPValue \n double calculateExactPValue \n double wilcoxonSignedRankTest \n double[] calculateDifferences \n void ensureDataConformance", "output": ""}, {"instruction": "Generate java code\nsets the safe range of characters for the escaper . characters in this range that have no explicit replacement are considered ` safe ' and remain unescaped in the output . if safemax < safemin then the safe range is empty . ", "input": " Escaper NULL_ESCAPER \n Map<Character,String> replacementMap \n char safeMax \n String unsafeReplacement \n char safeMin \n\n Builder setUnsafeReplacement \n Escaper nullEscaper \n Escaper build \n Builder addEscape \n Builder builder \n String stringOrNull \n UnicodeEscaper asUnicodeEscaper \n String escape \n char[] escape \n String computeReplacement \n String computeReplacement \n UnicodeEscaper wrap", "output": ""}, {"instruction": "Generate java code\nadd a listener ", "input": " List listeners \n SourceDataLine line \n String filePath \n Thread playerThread \n FLACDecoder decoder \n AudioFormat fmt \n DataLine.Info info \n\n void play \n String play \n void processStreamInfo \n void processPCM \n void stop \n void update \n void run \n void removeListener \n void decode", "output": ""}, {"instruction": "Generate java code\ngets the total time elapsed in milliseconds . ", "input": " long timeElapsed \n HttpServletRequest request \n ArrayList messages \n Date startTime \n Date stopTime \n ArrayList parameters \n\n ArrayList getDebugMessages \n HttpServletRequest getRequest \n String getCompleteLog \n ArrayList getParameters \n void startTimer \n void logMsg \n void logMsg \n void stopTimer \n void addParameter \n void addParameter \n void addParameter", "output": ""}, {"instruction": "Generate java code\napplies any rendering hints configured for these scalingoptions to a graphics2d instance before image operations are called on it . these might be ", "input": " DownscaleQuality downscalingHint \n int targetHeight \n Object renderingHint \n int targetWidth \n\n int getTargetHeight \n boolean sizeMatches \n boolean sizeMatches \n DownscaleQuality getDownscalingHint \n void setTargetWidth \n Object getRenderingHint \n void setTargetDimensions \n Map getRenderingHints \n void setTargetHeight \n int getTargetWidth", "output": ""}, {"instruction": "Generate java code\nget the current classname prefix . ", "input": " String classnamePrefix \n Logger LOG \n Collection obsoleteInnerClasses \n Object component \n int anonymousClassCounter \n Context context \n Object classifier \n Collection obsoleteFeatures \n\n void addClassifierContext \n void addPackageContext \n void removeObsoleteFeatures \n void innerClassifier \n void addComponent \n void outerClassifier \n Object getMethod \n Object getClassifier \n Object getFeature \n void removeObsoleteInnerClasses \n Object getAttribute \n void feature \n Collection getFeatures \n Object getOperation \n Object getComponent \n String anonymousClass \n Context getContext", "output": ""}, {"instruction": "Generate java code\nreads all data from the file and send it to the sink . ", "input": " Logger LOG \n\n String[] fileFormatDescriptions \n void parseMap \n InputStream createFileStream \n SAXParser createParser \n String[] fileFormatExtensions \n void setFilter \n void setFilter", "output": ""}, {"instruction": "Generate java code\nreturns result value as binary data . ", "input": " String NAME \n String FAULT \n String MEMBER \n TimeZone tz \n ArrayList<Object> values \n String VALUE \n\n String getStringValue \n ArrayList<Object> parseArray \n List getValues \n Map<String,Object> getStructValue \n Double getDoubleValue \n int getValueCount \n void parse \n Integer getIntegerValue \n Boolean getBooleanValue \n HashMap<String,Object> parseStruct \n List<Object> getArrayValue \n Object parseValue \n Date getDateValue", "output": ""}, {"instruction": "Generate java code\ncalls blocklockmanager #lockblock long , long , blocklocktype and fails if it does n'thang . ", "input": " BlockLockManager mLockManager \n long TEST_BLOCK_ID \n ExpectedException mThrown \n long TEST_SESSION_ID \n TemporaryFolder mFolder \n\n void lockAcrossSessions \n void stress \n void validateLockIdWithNoRecord \n void unlockNonExistingLock \n void dontReuseLock \n void before \n void reuseLock \n void readBlocksWrite \n void validateLockIdWithWrongBlockId \n void setMaxLocks \n void lockBlock \n void grabManyLocks \n void validateLockIdWithWrongSessionId \n void cleanupSession \n void after", "output": ""}, {"instruction": "Generate java code\nremoves all elements s in the set such that s decends from o ", "input": " Type topType \n List<Type> v \n TypeSystem ts \n\n boolean add \n boolean containsAll \n void clear \n boolean isEmpty \n boolean contains \n Iterator<Type> iterator \n boolean removeAll \n int size \n boolean addAll \n boolean containsSubtype \n Object[] toArray \n U[] toArray \n String toString \n boolean retainAll", "output": ""}, {"instruction": "Generate java code\naccessor for the faultto property . ", "input": " List<QName> mustUnderstand \n EndpointReferenceType replyTo \n EndpointReferenceType faultTo \n AttributedURIType messageID \n AttributedURIType action \n EndpointReferenceType from \n String namespaceURI \n EndpointReferenceType to \n AttributedURIType toURIType \n QName duplicate \n RelatesToType relatesTo \n\n List<QName> getMustUnderstand \n void setAction \n EndpointReferenceType getReplyTo \n void exposeAs \n void setFrom \n void setDuplicate \n RelatesToType getRelatesTo \n AttributedURIType getTo \n AttributedURIType getAction \n void setMessageID \n AttributedURIType getMessageID \n void setReplyTo \n void setFaultTo \n QName getDuplicate \n void setTo \n void setTo \n void setRelatesTo \n EndpointReferenceType getToEndpointReference \n String getNamespaceURI \n String toString \n AddressingProperties createCompatibleResponseProperties \n EndpointReferenceType getFrom", "output": ""}, {"instruction": "Generate java code\nset name of emoji icon ", "input": " int bigIcon \n String emojiText \n int icon \n String name \n Type type \n String iconPath \n String identityCode \n String bigIconPath \n\n String getName \n String getIconPath \n int getBigIcon \n void setBigIcon \n void setType \n void setIdentityCode \n int getIcon \n String getEmojiText \n String getBigIconPath \n void setIcon \n void setBigIconPath \n void setEmojiText \n void setIconPath \n Type getType \n String getIdentityCode \n String newEmojiText", "output": ""}, {"instruction": "Generate java code\ncall once when this seqno is fed back in nak ", "input": " long sequenceNumber \n long lastFeedbacktime \n long k \n\n long getSequenceNumber \n long getK \n int hashCode \n boolean equals \n String toString \n int compareTo \n long getLastFeedbackTime", "output": ""}, {"instruction": "Generate java code\nset the subject role classifier to use . if this value is not specified , then it tries to get roles from the supplied jaas subject if not null using the defaultsecuritycontext in cxf-rt-core . otherwise it uses this value in combination with the subject_role_classifier_type to get the roles from the subject . ", "input": " String roleClassifierType \n String roleClassifier \n\n String getRoleClassifierType \n Set<Principal> parseRolesFromSubject \n String getRoleClassifier \n void setRoleClassifierType", "output": ""}, {"instruction": "Generate java code\ntests writing an increasing byte array one byte at a time . ", "input": " byte[] INCREASING_BYTES \n long BLOCK_LENGTH \n TestBufferedBlockOutStream mTestStream \n ExpectedException mThrown \n\n void byteArrayAtOffset \n void byteArrayWrite \n void before \n void doubleFlush \n void writePastBlock \n void remaining \n void writeToClosed", "output": ""}, {"instruction": "Generate java code\nwrite the given short value 16-bit in big-endian order to the buffer ", "input": " ByteBuffer mWriter \n byte[] mBuffer \n\n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter putLen8 \n BufferedByteWriter putLen16 \n byte[] toByteArray \n void ensureCapacity \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put \n BufferedByteWriter put \n BufferedByteWriter put32 \n BufferedByteWriter put32 \n BufferedByteWriter put32", "output": ""}, {"instruction": "Generate java code\nremoves a file from the bucket containing it if the file is in one of the buckets , otherwise , do nothing . assume that no file in the buckets has ttl value that equals constants #no_ttl . if a file with valid ttl value is inserted to the buckets and its ttl value is going to be set to constants #no_ttl later , be sure to remove the file from the buckets first . ", "input": " ConcurrentSkipListSet<TtlBucket> mBucketList \n\n Set<TtlBucket> getExpiredBuckets \n void removeBuckets \n void insert \n TtlBucket getBucketContaining", "output": ""}, {"instruction": "Generate java code\ngets the value of the norun property . ", "input": " String fail \n String pass \n String moduleName \n String noRun \n int ID \n String value \n String totalTC \n\n String getPass \n void setNoRun \n String getTotalTC \n int getID \n void setFail \n String getFail \n int compareTo \n String getModuleName \n String getValue \n void setValue \n void setID \n void setTotalTC \n void setModuleName \n void setPass", "output": ""}, {"instruction": "Generate java code\nchecks whether a user has permission to perform a specific action on a path . this check will pass if the path is invalid . ", "input": " InodeTree mInodeTree \n boolean mPermissionCheckEnabled \n String mFileSystemSuperGroup \n\n void checkOwner \n void checkInode \n void checkSetAttributePermission \n void checkParentPermission \n boolean isPrivilegedUser \n void checkInodeList \n void checkSuperUser \n String getClientUser \n List<String> getGroups \n String toExceptionMessage", "output": ""}, {"instruction": "Generate java code\nexecute delete query . ", "input": " Endpoint ep \n Logger logger \n\n void executeInsertDeleteQuery \n void createNewBranch \n void executeInsertQuery \n void executeDeleteWhereQuery", "output": ""}, {"instruction": "Generate java code\ntests that an exception is thrown when trying to delete a non-existing lineage via the lineagestore #deletelineage long method . ", "input": " Job mJob \n LineageStore mLineageStore \n ExpectedException mThrown \n\n void before \n void deleteLineage \n void journalEntrySerialization \n void createLineage", "output": ""}, {"instruction": "Generate java code\nreturns whether the socket supports urgent data or not . subclasses should override this method . ", "input": " boolean shutdownInput \n ServalNetworkStack netImpl \n boolean streaming \n ServiceID localServiceID \n InetAddress address \n ServiceID remoteServiceID \n FileDescriptor fd \n\n InetAddress getInetAddress \n ServiceID getServiceID \n void setOption \n int available \n Object getOption \n InputStream getInputStream \n void listen \n void shutdownOutput \n void accept \n void shutdownInput \n void setPerformancePreferences \n void bind \n void bind \n void bind \n void bind \n void sendUrgentData \n ServiceID getLocalServiceID \n FileDescriptor getFileDescriptor \n void create \n OutputStream getOutputStream \n String toString \n void close \n void connect \n void connect \n void connect \n void connect", "output": ""}, {"instruction": "Generate java code\ngets the value of the handlername property . ", "input": " FullyQualifiedClassType handlerClass \n List<CString> soapRole \n List<ParamValueType> initParam \n List<DisplayNameType> displayName \n List<XsdQNameType> soapHeader \n List<IconType> icon \n List<DescriptionType> description \n CString handlerName \n java.lang.String id \n\n List<ParamValueType> getInitParam \n List<DisplayNameType> getDisplayName \n void setHandlerClass \n void setHandlerName \n void setId \n FullyQualifiedClassType getHandlerClass \n java.lang.String getId \n List<CString> getSoapRole \n List<DescriptionType> getDescription \n List<XsdQNameType> getSoapHeader \n List<IconType> getIcon", "output": ""}, {"instruction": "Generate java code\ncaptures sshdisconnectedevent ", "input": " boolean connected \n\n void connected \n void main \n void dataReceived", "output": ""}, {"instruction": "Generate java code\nreturns the message number of the message within its sequence . ", "input": " long messageNumber \n String to \n List<InputStream> attachments \n InputStream content \n\n List<InputStream> getAttachments \n void setAttachments \n void setContent \n void setMessageNumber \n InputStream getContent \n void setTo \n String getTo", "output": ""}, {"instruction": "Generate java code\nget a list of strings that corresponds to the issuer regular expression constraints from a jaxb certificateconstraintstype ", "input": " PlaceHolder placeHolder \n\n CertConstraints createCertConstraints \n List<String> getSubjectConstraints \n CertConstraints.Combinator getSubjectConstraintsCombinator \n CertConstraints.Combinator getIssuerConstraintsCombinator", "output": ""}, {"instruction": "Generate java code\nset the list of registered audiences ", "input": " String clientIpAddress \n String clientId \n List<String> allowedGrantTypes \n boolean isConfidential \n List<String> applicationCertificates \n UserSubject subject \n List<String> redirectUris \n List<String> registeredScopes \n String applicationLogoUri \n long serialVersionUID \n String applicationDescription \n List<String> registeredAudiences \n String applicationWebUri \n String clientSecret \n Map<String,String> properties \n String applicationName \n\n UserSubject getSubject \n String getApplicationName \n void setSubject \n String getClientId \n List<String> getAllowedGrantTypes \n void setApplicationDescription \n void setRegisteredScopes \n void setProperties \n String getClientIpAddress \n String getApplicationDescription \n void setApplicationCertificates \n String getApplicationWebUri \n void setApplicationLogoUri \n void setConfidential \n List<String> getRedirectUris \n void setApplicationWebUri \n void setClientIpAddress \n String getApplicationLogoUri \n void setClientSecret \n void setAllowedGrantTypes \n boolean isConfidential \n String getClientSecret \n void setApplicationName \n Map<String,String> getProperties \n void setRedirectUris \n List<String> getRegisteredAudiences \n List<String> getApplicationCertificates \n void setClientId \n List<String> getRegisteredScopes", "output": ""}, {"instruction": "Generate java code\ncreate a program that satisfies an op_checkmultisig program . ", "input": " List<ScriptChunk> chunks \n\n ScriptBuilder op \n ScriptBuilder op \n Script updateScriptWithSignature \n Script createOpReturnScript \n ScriptBuilder data \n ScriptBuilder data \n Script createMultiSigInputScriptBytes \n Script createMultiSigInputScriptBytes \n ScriptBuilder smallNum \n ScriptBuilder smallNum \n Script createRedeemScript \n ScriptBuilder addChunk \n ScriptBuilder addChunk \n Script createInputScript \n Script createInputScript \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigOutputScript \n Script build \n Script createP2SHMultiSigInputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript", "output": ""}, {"instruction": "Generate java code\nreturns the value of the given int as a long , when treated as unsigned . ", "input": " long INT_MASK \n\n int compare \n int compare \n int saturatedCast \n int max \n int decode \n int parseUnsignedInt \n int parseUnsignedInt \n int min \n Comparator<int[]> lexicographicalComparator \n int checkedCast \n String toString \n String toString \n String toString \n int divide \n String join \n int flip \n int remainder", "output": ""}, {"instruction": "Generate java code\ngets the file descriptor of this socket . ", "input": " boolean shutdownInput \n ServalNetworkStack netImpl \n boolean streaming \n ServiceID localServiceID \n InetAddress address \n ServiceID remoteServiceID \n FileDescriptor fd \n\n InetAddress getInetAddress \n ServiceID getServiceID \n void setOption \n int available \n Object getOption \n InputStream getInputStream \n void listen \n void shutdownOutput \n void accept \n void shutdownInput \n void setPerformancePreferences \n void bind \n void bind \n void bind \n void bind \n void sendUrgentData \n boolean supportsUrgentData \n ServiceID getLocalServiceID \n void create \n OutputStream getOutputStream \n String toString \n void close \n void connect \n void connect \n void connect \n void connect", "output": ""}, {"instruction": "Generate java code\nget one site by id . ", "input": " SiteRepository siteRepository \n Logger log \n\n Site save \n Site findOne \n Page<Site> findAll \n void delete \n Site getWebNauAn", "output": ""}, {"instruction": "Generate java code\ngets a bytebuffer containing an increasing sequence of bytes starting at the givenvalue . ", "input": " Method sCleanerCleanMethod \n Method sByteBufferCleanerMethod \n Logger LOG \n\n boolean equalConstantByteArray \n void fastCopy \n void cleanDirectBuffer \n ByteBuffer sliceByteBuffer \n ByteBuffer sliceByteBuffer \n int byteToInt \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteBuffer \n byte[] getIncreasingByteArray \n byte[] getIncreasingByteArray \n void writeBufferToFile \n List<ByteBuffer> cloneByteBufferList \n ByteBuffer cloneByteBuffer \n byte[] newByteArrayFromByteBuffer \n void putIntByteBuffer \n ByteBuffer generateNewByteBufferFromThriftRPCResults \n ByteBuffer getIncreasingIntBuffer \n ByteBuffer getIncreasingIntBuffer", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.ttmparser #setstatus . ", "input": " String EXAMPLE \n TTMParser ttm \n TTMParser empty \n\n void testGetAcquisitionType \n void testGetDistance \n void testSetNumber \n void testSetDistanceOfCPA \n void testConstructor \n void testGetTime \n void testSetCourse \n void testGetName \n void testGetNumber \n void testGetDistanceOfCPA \n void setUp \n void testGetCourse \n void testSetReferenceTrue \n void testSetReferenceFalse \n void testSetAcquisitionType \n void testSetBearing \n void testGetBearing \n void testSetDistance \n void testSetTimeToCPA \n void testSetTime \n void testGetSpeed \n void testGetStatus \n void testGetTimeToCPA \n void testSetName \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\nchecks if the path is a windows path . this should be platform independent . ", "input": " String SEPARATOR \n long serialVersionUID \n String CUR_DIR \n String WILDCARD \n URI mUri \n AlluxioURI EMPTY_URI \n\n AlluxioURI getParent \n int getDepth \n String getName \n String getScheme \n boolean isRoot \n boolean isPathAbsolute \n boolean containsWildcard \n int compareTo \n String getAuthority \n boolean hasScheme \n int getPort \n String getLeadingPath \n int hashCode \n boolean equals \n String getPath \n boolean isAbsolute \n Map<String,String> getQueryMap \n String toString \n AlluxioURI join \n AlluxioURI join \n String normalizePath \n String getHost \n boolean hasAuthority", "output": ""}, {"instruction": "Generate java code\nfinal computation for a single row of ` v ' : v = y - 1/2 & gamma ; y ^ tu u ", "input": " PlaceHolder placeHolder \n\n void tridiagUpperRow \n void multA_u \n double innerProdRowSymm \n void computeW_row \n void applyReflectorsToRow \n void computeY \n void computeV_blockVector", "output": ""}, {"instruction": "Generate java code\nreturns the url without the port and the query string part . ", "input": " Map<String,String> headers \n String charset \n Verb verb \n ParameterList bodyParams \n String url \n byte[] bytePayload \n Long readTimeout \n ParameterList querystringParams \n boolean connectionKeepAlive \n Long connectTimeout \n String CONTENT_LENGTH \n String CONTENT_TYPE \n HttpURLConnection connection \n String payload \n String DEFAULT_CONTENT_TYPE \n\n void addHeaders \n void setCharset \n void addBody \n void addHeader \n void setConnectionKeepAlive \n void setConnectTimeout \n byte[] getByteBodyContents \n Map<String,String> getHeaders \n ParameterList getQueryStringParams \n void setConnection \n void createConnection \n String getCharset \n void addBodyParameter \n String getUrl \n void setReadTimeout \n String getCompleteUrl \n Verb getVerb \n void addPayload \n void addPayload \n void addQuerystringParameter \n String toString \n Response doSend \n Response send \n String getBodyContents \n ParameterList getBodyParams", "output": ""}, {"instruction": "Generate java code\ncurrent count of white stones . ", "input": " BitSet taken \n BitSet black \n\n int countBlack \n void move \n void set \n boolean get \n boolean checkMove \n boolean onBoard \n OthelloBoard copy \n boolean isDone \n boolean hasMoves \n boolean occupied", "output": ""}, {"instruction": "Generate java code\nreturn the preview associated with the given uuid ", "input": " Book preview \n String QUILL_EXTENSION \n LinkedList<BookPreview> data \n Bookshelf instance \n String TAG \n String TAG \n Storage storage \n Book currentBook \n UUID uuid \n\n int compare \n void backup \n void backup \n void reloadPreview \n void backupDescription \n void setCurrentBook \n void setCurrentBook \n void assertNoCurrentBook \n void importBook \n Bitmap getThumbnail \n void deleteBook \n void exportBook \n String getTitle \n void reload \n UUID getUUID \n Bookshelf getBookshelf \n void newBook \n void sortBookPreviewList \n int getCount \n void importBookDirectory \n String getSummary \n BookPreview getCurrentBookPreview \n void deleteFromStorage \n Book getCurrentBook \n Time getLastModifiedTime \n LinkedList<BookPreview> getBookPreviewList \n void exportCurrentBook \n void createFirstNotebook \n void finalize \n void initialize", "output": ""}, {"instruction": "Generate java code\nchecks with heap is empty or not ", "input": " Map<T,Integer> nodePosition \n List<Node> allNodes \n int weight \n T key \n\n void add \n T min \n void printPositionMap \n void swap \n void updatePositionMap \n Integer getWeight \n Node extractMinNode \n void printHeap \n void main \n T extractMin \n void decrease \n boolean containsData", "output": ""}, {"instruction": "Generate java code\nreturn a dag engine for a system user no user , no group . ", "input": " PlaceHolder placeHolder \n\n void init \n Class<? extends Service> getInterface \n void destroy \n DagEngine getDagEngine", "output": ""}, {"instruction": "Generate java code\ntest of getresourcestream method , of class resourceloader . ", "input": " PlaceHolder placeHolder \n\n placeholderType placeHolder", "output": ""}, {"instruction": "Generate java code\nadds each member of elements as a candidate for the top k elements . thisoperation takes amortized linear time in the length of elements . if all input data to this topkselector is in a single iterable , prefer ordering #leastof iterable , int , which provides a simpler api for that use case . ", "input": " Comparator<? super T> comparator \n T threshold \n int k \n T[] buffer \n int bufferSize \n\n void offer \n List<T> topK \n int partition \n void trim \n void swap \n TopKSelector<T> least \n TopKSelector<T> least \n TopKSelector<T> greatest \n TopKSelector<T> greatest \n TopKSelector<T> combine", "output": ""}, {"instruction": "Generate java code\ncreate an instance of projectvalidation ", "input": " QName _SignCertificateResponse_QNAME \n QName _Access_QNAME \n QName _CheckServiceAccessResponse_QNAME \n QName _SignCertificateRequest_QNAME \n QName _CertificateChainInfo_QNAME \n QName _RegistrationRequest_QNAME \n QName _User_QNAME \n QName _AuthenticateResponse_QNAME \n QName _CheckServiceAccessRequest_QNAME \n QName _ValidateTokenResponse_QNAME \n QName _AuthenticateRequest_QNAME \n QName _Auth_QNAME \n QName _ValidateAccess_QNAME \n QName _RegistrationResponse_QNAME \n QName _Roles_QNAME \n\n ValidateTokenResponse createValidateTokenResponse \n JAXBElement<ValidateTokenResponse> createValidateTokenResponse \n CertificateChainInfo createCertificateChainInfo \n JAXBElement<CertificateChainInfo> createCertificateChainInfo \n RoleList createRoleList \n CheckServiceAccessRequest createCheckServiceAccessRequest \n JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest \n Role createRole \n Token createToken \n CheckServiceAccessResponse createCheckServiceAccessResponse \n JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse \n PasswordCredentials createPasswordCredentials \n AuthenticateResponse createAuthenticateResponse \n JAXBElement<AuthenticateResponse> createAuthenticateResponse \n ValidateAccess createValidateAccess \n JAXBElement<ValidateAccess> createValidateAccess \n AuthenticateRequest createAuthenticateRequest \n JAXBElement<AuthenticateRequest> createAuthenticateRequest \n Auth createAuth \n JAXBElement<Auth> createAuth \n CertificateInfo createCertificateInfo \n UserValidation createUserValidation \n CertificateCredentials createCertificateCredentials \n RegistrationResponse createRegistrationResponse \n JAXBElement<RegistrationResponse> createRegistrationResponse \n User createUser \n JAXBElement<User> createUser \n JAXBElement<RoleList> createRoles \n RegistrationRequest createRegistrationRequest \n JAXBElement<RegistrationRequest> createRegistrationRequest \n Access createAccess \n JAXBElement<Access> createAccess \n SignCertificateResponse createSignCertificateResponse \n JAXBElement<SignCertificateResponse> createSignCertificateResponse \n SignCertificateRequest createSignCertificateRequest \n JAXBElement<SignCertificateRequest> createSignCertificateRequest", "output": ""}, {"instruction": "Generate java code\nadd key-value pair to map , both key and value need not null or empty ", "input": " String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR \n String DEFAULT_KEY_AND_VALUE_SEPARATOR \n\n K getKeyByValue \n boolean putMapNotNullKeyAndValue \n Map<String,String> parseKeyAndValueToMap \n Map<String,String> parseKeyAndValueToMap \n Map<String,String> parseKeyAndValueToMap \n String toJson \n Boolean mapObjectContainName \n boolean putMapNotNullKey \n Boolean mapContainName \n boolean isEmpty \n Boolean mapStringContainName \n boolean putMapNotEmptyKey \n boolean putMapNotEmptyKeyObject", "output": ""}, {"instruction": "Generate java code\nreturn the first not null value , or null if both are null . defined for el as ` object firstnotnull object , object ' . ", "input": " int SUBMIT_MINUTES \n long KB \n long MB \n int SUBMIT_DAYS \n int SUBMIT_HOURS \n long PB \n long TB \n long GB \n\n String trim \n String concat \n String urlEncode \n String timestamp", "output": ""}, {"instruction": "Generate java code\ngets the value of the csr property . ", "input": " byte[] projectSecret \n String csr \n String project \n\n void setCsr \n byte[] getProjectSecret \n void setProject \n void setProjectSecret \n String getProject", "output": ""}, {"instruction": "Generate java code\nsend an error log message . ", "input": " String TAG_CONTENT_PRINT \n boolean sIsLogEnabled \n String sApplicationTag \n\n StackTraceElement getCurrentStackTraceElement \n String getTagContentPrint \n void d \n void d \n void d \n String getContent \n void i \n void i \n String getsApplicationTag \n void setsIsLogEnabled \n boolean issIsLogEnabled \n void trace \n void v \n void w \n void w \n String getContents \n void traceStack \n void traceStack \n void setsApplicationTag", "output": ""}, {"instruction": "Generate java code\ngetter for the recently granted permissions . ", "input": " Set<String> recentlyDeniedPermissions \n AccessToken accessToken \n Set<String> recentlyGrantedPermissions \n\n Set<String> getRecentlyDeniedPermissions \n AccessToken getAccessToken", "output": ""}, {"instruction": "Generate java code\nreturns true if the monetary value represented by this instance is less than that of the given other coin , otherwise false . ", "input": " MonetaryFormat FRIENDLY_FORMAT \n MonetaryFormat PLAIN_FORMAT \n int SMALLEST_UNIT_EXPONENT \n long value \n String currencyCode \n\n Fiat add \n int signum \n boolean isNegative \n String getCurrencyCode \n Fiat valueOf \n Fiat subtract \n boolean isGreaterThan \n boolean isPositive \n int smallestUnitExponent \n String toPlainString \n int compareTo \n long longValue \n long getValue \n String toFriendlyString \n Fiat[] divideAndRemainder \n Fiat negate \n int hashCode \n boolean equals \n boolean isZero \n Fiat divide \n long divide \n String toString \n Fiat multiply \n Fiat parseFiat", "output": ""}, {"instruction": "Generate java code\nset the type of the request ", "input": " boolean passiveAuth \n Map<String,String[]> requestQueryParams \n long serialVersionUID \n String commonAuthCallerPath \n boolean forceAuth \n String type \n Map<String,String> requestHeaders \n String tenantDomain \n boolean isPost \n String relyingParty \n\n void setRelyingParty \n void addHeader \n String getRelyingParty \n boolean getForceAuth \n String getCommonAuthCallerPath \n Map<String,String[]> getRequestQueryParams \n void addRequestQueryParam \n void setPost \n boolean isPost \n void setTenantDomain \n void appendRequestQueryParams \n boolean getPassiveAuth \n Map<String,String> getRequestHeaders \n String getTenantDomain \n String[] getRequestQueryParam \n String getType \n void setPassiveAuth \n void setCommonAuthCallerPath \n void setForceAuth \n void setRequestQueryParams", "output": ""}, {"instruction": "Generate java code\ngenerates an md5 key for the given text . ", "input": " PlaceHolder placeHolder \n\n void deleteAllKeys \n String getText \n void purgeOldKeys \n int cacheText", "output": ""}, {"instruction": "Generate java code\nwrite the given int value 32-bit in big-endian order to the buffer ", "input": " ByteBuffer mWriter \n byte[] mBuffer \n\n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter put24 \n BufferedByteWriter putLen8 \n BufferedByteWriter put16 \n BufferedByteWriter put16 \n BufferedByteWriter putLen16 \n byte[] toByteArray \n void ensureCapacity \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put64 \n BufferedByteWriter put \n BufferedByteWriter put", "output": ""}, {"instruction": "Generate java code\ngenerate `` final '' keyword for final operations or attributes . ", "input": " PlaceHolder placeHolder \n\n String generateParameter \n String generatePath \n String generateVisibility \n String generateVisibility \n String generateExpression \n String generateAbstract \n String generateLeaf \n String generateClassifierRef \n String generateScope \n String generateUninterpreted", "output": ""}, {"instruction": "Generate java code\nreturns a diagonal matrix with the singular values . the singular values are ordered from largest to smallest . ", "input": " SingularValueDecomposition<DenseMatrix64F> svd \n DenseMatrix64F mat \n T U \n T V \n T W \n\n T getV \n SingularValueDecomposition getSVD \n double getSingleValue \n int rank \n SimpleMatrix nullSpace \n int nullity \n T getU \n double quality", "output": ""}, {"instruction": "Generate java code\ncreates and maintains a singleton instance of openidclaimmapper ", "input": " String OPENID_CLAIM_MAPPER_FILE_PATH \n String LN_AXSCHEMA \n OpenIDClaimMapper instance \n String LN_SREG \n String LN_OPENID_SCHEMA \n HashMap<String,String> sregMapping \n HashMap<String,String> axMapping \n String LN_CLAIM_MAPPER \n String LN_CLAIM \n\n void process \n void process \n HashMap<String,String> getSregMapping \n HashMap<String,String> getAxMapping", "output": ""}, {"instruction": "Generate java code\nfrees a hessian 2.0 deserializer ", "input": " SerializerFactory _serializerFactory \n SerializerFactory _defaultSerializerFactory \n Logger log \n HessianFreeList<HessianInput> _freeHessianInput \n HessianFreeList<HessianOutput> _freeHessianOutput \n HessianFreeList<Hessian2Input> _freeHessian2Input \n HessianFreeList<Hessian2Output> _freeHessian2Output \n\n Hessian2Input createHessian2Input \n Hessian2Output createHessian2Output \n Hessian2StreamingOutput createHessian2StreamingOutput \n void freeHessian2StreamingOutput \n void setSerializerFactory \n OutputStream createHessian2DebugOutput \n SerializerFactory getSerializerFactory \n Hessian2StreamingInput createHessian2StreamingInput \n void freeHessian2Output \n HessianOutput createHessianOutput \n HessianInput createHessianInput \n void freeHessian2Input", "output": ""}, {"instruction": "Generate java code\nmain method for sshexample ", "input": " boolean connected \n\n void connected \n void disconnected \n void dataReceived", "output": ""}, {"instruction": "Generate java code\nremoves all punctuation marks from a post ", "input": " int VocabularySize \n int CountofWordsInTwenties \n int CountofWordsInThirties \n StopWord stopWord \n int CountofWordsInTeens \n\n void updateNaiveBayesMapForSinglePost \n int getCountofWordsInTeens \n void setCountofWordsInThirties \n HashMap<String,HashMap<String,Integer>> trainNaiveBayes \n void updateClassWordCount \n void setVocabularySize \n void setCountofWordsInTwenties \n int getVocabularySize \n String[] cleanPost \n void setCountofWordsInTeens \n int getCountofWordsInTwenties \n int getCountofWordsInThirties \n void updateNaiveBayesMap", "output": ""}, {"instruction": "Generate java code\ngets the abstraction with which the sink has been reached ", "input": " Abstraction abstraction \n Value sinkValue \n Stmt sinkStmt \n\n Stmt getSinkStmt \n int hashCode \n boolean equals \n Value getSinkValue", "output": ""}, {"instruction": "Generate java code\ncompares this bucket 's ttl interval start time to that of another bucket . ", "input": " Set<InodeFile> mFiles \n long sTtlIntervalMs \n long mTtlIntervalStartTimeMs \n\n void removeFile \n long getTtlIntervalMs \n int hashCode \n boolean equals \n Set<InodeFile> getFiles \n long getTtlIntervalStartTimeMs \n long getTtlIntervalEndTimeMs \n void addFile", "output": ""}, {"instruction": "Generate java code\nextract the content and metadata from the input stream . depending on media type validation , the detector could be run against input stream in order to ensure that parser supports this type of content . ", "input": " LuceneDocumentMetadata defaultDocumentMetadata \n TikaContentExtractor extractor \n\n Field getContentField \n Field getField \n Document extractMetadata \n Document extractMetadata \n Document extractAll \n Document extractContent", "output": ""}, {"instruction": "Generate java code\nreturns the top k elements offered to this topkselector , or all elements if fewer than k have been offered , in the order specified by the factory used to createthis topkselector . the returned list is an unmodifiable copy and will not be affected by further changes to this topkselector . this method returns in o k log k time . ", "input": " Comparator<? super T> comparator \n T threshold \n int k \n T[] buffer \n int bufferSize \n\n void offer \n int partition \n void trim \n void swap \n void offerAll \n void offerAll \n TopKSelector<T> least \n TopKSelector<T> least \n TopKSelector<T> greatest \n TopKSelector<T> greatest \n TopKSelector<T> combine", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.zdaparser #gettime . ", "input": " String EXAMPLE \n ZDAParser zda \n ZDAParser empty \n\n void testGetYear \n void testGetDate \n void testGetLocalZoneMinutes \n void testSetTimeAndLocalZone \n void testConstructor \n void testToDate \n void testSetLocalZoneMinutes \n void testSetLocalZoneHours \n void testSetTime \n void testGetDay \n void setUp \n void testGetMonth \n void testSetDate \n void testGetLocalZoneHours", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #getday . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nchecks that the expected languageversion can be found by thecombination of #tersename and #version . ", "input": " LanguageVersion expected \n String name \n String version \n String simpleTerseName \n String terseName \n\n void testRegisteredRulesets \n void testFindVersionsForLanguageNameAndVersion", "output": ""}, {"instruction": "Generate java code\nreplaces the wildcards with java 's regex semantics . ", "input": " Pattern SPECIAL_REGEX_CHARS \n\n List<AlluxioURI> getAlluxioURIs \n List<AlluxioURI> getAlluxioURIs \n String getFilePath \n boolean match \n boolean match \n String validatePath \n List<File> getFiles \n List<File> getFiles \n String escape", "output": ""}, {"instruction": "Generate java code\nsets the exp data unit id . ", "input": " BigDecimal expDataUnitId \n BigDecimal dataUnitId \n Timestamp createTimeStamp \n String actValue \n String errorCode \n String srcFileName \n String errorMsg \n String failedAttrib \n BigDecimal expDataSetId \n RegPCLTestResultEntity regPclTestResult \n BigDecimal dataSetId \n RegPCLTestResultDetailsEntityPK id \n long serialVersionUID \n String expValue \n\n void updateCreateTimeStamp \n void setActValue \n BigDecimal getDataSetId \n RegPCLTestResultDetailsEntityPK getId \n void setSrcFileName \n RegPCLTestResultEntity getRegPclTestResult \n void setExpValue \n String getSrcFileName \n void setErrorCode \n BigDecimal getDataUnitId \n void setErrorMsg \n String getErrorCode \n void setDataUnitId \n void setId \n void setFailedAttrib \n BigDecimal getExpDataSetId \n String getErrorMsg \n String getActValue \n void setRegPclTestResult \n String getExpValue \n void setCreateTimeStamp \n BigDecimal getExpDataUnitId \n Timestamp getCreateTimeStamp \n String getFailedAttrib \n void setExpDataSetId \n void setDataSetId", "output": ""}, {"instruction": "Generate java code\nreturns the object used to calculate the metric . @return the calculator . ", "input": " PackageStats TOP_LEVEL_PACKAGE \n OperationMetric calculator \n\n PackageStats getTopLevelPackageStats \n double get \n double get", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.gsvparser #getsentenceindex . ", "input": " GSVSentence gsv \n String EXAMPLE \n GSVSentence empty \n\n void testSetSatelliteCount \n void testIsFirst \n void testSetSatelliteInfo \n void testGetSatelliteCount \n void testConstructor \n void testGetSatelliteInfo \n void testParserGlonassGSV \n void testGetSentenceCount \n void testGetSatelliteInfoWithEmptyFields \n void testSetSentenceCount \n void testGetSatelliteInfoWithShortSentence \n void setUp \n void testIsLast \n void testSatelliteInfo", "output": ""}, {"instruction": "Generate java code\nsave a siteurl . ", "input": " SiteUrlRepository siteUrlRepository \n String EMPTY_PROCEDURE \n String EMPTY_THUMBNAIL \n String EMPTY_INGREDIENT_SEARCH \n Logger log \n String parseNotesString \n String EMPTY_PREPARATION \n String EMPTY_OVERVIEW \n CustomSiteUrlRepository customSiteUrlRepository \n String MULTIPLE \n\n boolean isEmptyProcedure \n Page<SiteUrl> findBySite \n Page<SiteUrl> findEmptyProcedure \n Page<SiteUrl> findEmptyPreparation \n SiteUrl findOne \n void updateParseNote \n boolean isMultiple \n Page<SiteUrl> findAll \n void delete \n Page<SiteUrl> findEmptyOverview \n boolean isEmptyPreparationOrProcedure \n boolean urlExists \n SiteUrl findByUrl \n Page<SiteUrl> findByParseNote \n Page<SiteUrl> findMultiple \n void removeAllDocuments \n boolean isContentEmpty", "output": ""}, {"instruction": "Generate java code\ncreates a default block request message , just allocates the message header , and no attribute is set . the message is not ready to be sent . ", "input": " ByteBuffer mData \n int REQUEST_HEADER_LENGTH \n int RESPONSE_HEADER_LENGTH \n int ERROR_RESPONSE_HEADER_LENGTH \n long mOffset \n RPCResponse.Status mStatus \n long mLockId \n boolean mToSendData \n long mLength \n long mBlockId \n int HEADER_PREFIX_LENGTH \n long mSessionId \n RPCMessage.Type mMessageType \n boolean mIsMessageReady \n ByteBuffer mHeader \n Logger LOG \n\n void checkReady \n long getOffset \n void setLockId \n RPCResponse.Status getStatus \n DataServerMessage createBlockResponseMessage \n DataServerMessage createBlockResponseMessage \n boolean finishSending \n long getLockId \n int recv \n long getBlockId \n void generateHeader \n ByteBuffer getReadOnlyData \n long getLength \n void isSend \n long getSessionId \n void close \n void send \n boolean isMessageReady", "output": ""}, {"instruction": "Generate java code\ncheck if transaction is active ", "input": " EntityManager entityManager \n\n void closeTrx \n String getConnection \n boolean contains \n boolean isClosed \n String getFlushMode \n boolean isDetached \n void beginTrx \n EntityManager getEntityManager \n void commitTrx \n void rollbackTrx", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.ttmparser #gettimetocpa . ", "input": " String EXAMPLE \n TTMParser ttm \n TTMParser empty \n\n void testGetAcquisitionType \n void testGetDistance \n void testSetStatus \n void testSetNumber \n void testSetDistanceOfCPA \n void testConstructor \n void testGetTime \n void testSetCourse \n void testGetName \n void testGetNumber \n void testGetDistanceOfCPA \n void setUp \n void testGetCourse \n void testSetReferenceTrue \n void testSetReferenceFalse \n void testSetAcquisitionType \n void testSetBearing \n void testGetBearing \n void testSetDistance \n void testSetTimeToCPA \n void testSetTime \n void testGetSpeed \n void testGetStatus \n void testSetName \n void testSetSpeed", "output": ""}, {"instruction": "Generate java code\ncaptures sshdisconnectedevent ", "input": " boolean connected \n\n void connected \n void main \n void dataReceived", "output": ""}, {"instruction": "Generate java code\nget the value value . ", "input": " String value \n\n void setValue \n String toString", "output": ""}, {"instruction": "Generate java code\nmoves to the next record , which in this case means moving the index to the next record satisfying the selection constant , and returning false if there are no more such index records . if there is a next record , the method moves the tablescan to the corresponding data record . ", "input": " Constant val \n Index idx \n TableScan ts \n\n int getInt \n Constant getVal \n void beforeFirst \n String getString \n void close \n boolean hasField", "output": ""}, {"instruction": "Generate java code\ntests the understoreblockinstream #seek long method for the last block of the file . ", "input": " long BLOCK_LENGTH \n String TEST_FILENAME \n UnderStoreBlockInStream mEOFBlockStream \n File mFile \n UnderStoreBlockInStream mBlockStream \n long FILE_LENGTH \n TemporaryFolder mFolder \n\n void singleByteReadInternal \n void skipEOF \n void seekInternal \n void before \n void arrayReadInternal \n void arrayFullRead \n void skip \n void seek \n void singleByteReadEOF \n void arrayFullReadEOF \n void skipInternal \n void arrayReadEOF \n void arrayFullReadInternal \n InputStream create \n void after \n void singleByteRead \n void close \n void arrayRead", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #setmonth int . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testConstructor \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay", "output": ""}, {"instruction": "Generate java code\nreturns the best individual in the specified population , according to the specified fitness-fn and number of iterations . ", "input": " String ITERATIONS \n String POPULATION_SIZE \n int individualLength \n double mutationProbability \n Character[] finiteAlphabet \n Metrics metrics \n Random random \n\n String randomSelection \n String mutate \n void setIterations \n int randomOffset \n String retrieveBestIndividual \n Metrics getMetrics \n int getPopulationSize \n String reproduce \n void setPopulationSize \n int getIterations \n void validatePopulation \n String ga \n void clearInstrumentation", "output": ""}, {"instruction": "Generate java code\ngets the rppa value . ", "input": " RPPA rppaValue \n mutations isMutated \n String gene \n String mutationType \n String caseId \n CNA cnaValue \n GeneticEventComparator geneticEventComparator \n MRNA mrnaValue \n\n boolean isMutated \n boolean isRPPADownRegulated \n String caseCaseId \n mutations getMutationValue \n MRNA getMrnaValue \n boolean isCnaAmplified \n void setGeneticEventComparator \n String getGene \n boolean isCnaHeterozygousDeleted \n boolean equals \n CNA getCnaValue \n boolean isMRNADownRegulated \n String toString \n boolean isRPPAUpRegulated \n String getMutationType \n boolean isCnaHomozygouslyDeleted \n boolean isMRNAUpRegulated", "output": ""}, {"instruction": "Generate java code\nmoves from the current node to the given attribute . ", "input": " String OPEN \n String expression \n String PI \n String TEXT \n short type \n String EMPTY \n Map<String,String> uri2Prefix \n Map<QName,Level> attributes \n Deque<Level> path \n String SEP \n String COMMENT \n String xpath \n String ATTR \n List<Level> children \n QName name \n String CLOSE \n\n void navigateToParent \n String getName \n QName getName \n QName getName \n void appendChildren \n Map<String,String> invert \n void addAttribute \n short getType \n short getType \n void addAttributes \n XPathContext clone \n Level clone \n int add1OrIncrement \n String getXPath \n String getXPath \n void navigateToChild \n void setChildren", "output": ""}, {"instruction": "Generate java code\nget the encryptionproperties to be used to encrypt tokens issued for this service ", "input": " EncryptionProperties encryptionProperties \n Collection<Pattern> endpointPatterns \n Logger LOG \n String tokenType \n String keyType \n\n boolean isAddressInEndpoints \n String getTokenType \n void setTokenType \n String getKeyType \n void setEndpoints \n void setKeyType \n void setEncryptionProperties", "output": ""}, {"instruction": "Generate java code\ngets the access token of the shared test user with the tag for the application with the requested permissions . ", "input": " Map<String,JSONObject> appTestAccounts \n String testApplicationId \n String LOG_TAG \n String testApplicationSecret \n\n String getTestApplicationId \n String getTestApplicationSecret \n String getAppAccessToken \n AccessToken getAccessTokenForPrivateUser \n AccessToken getAccessTokenForUser \n String getSharedTestAccountIdentifier \n String getPermissionsString \n String validNameStringFromInteger \n JSONObject createTestAccount \n void storeTestAccount \n void retrieveTestAccountsForAppIfNeeded \n void populateTestAccounts \n JSONObject findOrCreateSharedTestAccount \n JSONObject findTestAccountMatchingIdentifier", "output": ""}, {"instruction": "Generate java code\ncloses a closeable , with control over whether an ioexception may be thrown.this is primarily useful in a finally block , where a thrown exception needs to be logged but not propagated otherwise the original exception will be lost . if swallowioexception is true then we never throw ioexception but merely logit . example : public void usestreamnicely throws ioexception somestream stream = new somestream `` foo '' ; boolean threw = true ; try / / ... code which does something with the stream ... threw = false ; finally / / if an exception occurs , rethrow it only if threw == false : closeables.close stream , threw ; ", "input": " Logger logger \n\n void closeQuietly \n void closeQuietly", "output": ""}, {"instruction": "Generate java code\nsetter for a property . if the property already exists , the value will be overridden . hint : this method is intended as an alternative way to set properties programmatically instead of using the fckeditor.properties . it should never used inside fckeditor.java !!! ", "input": " Properties properties \n Logger logger \n\n String getProperty", "output": ""}, {"instruction": "Generate java code\nall get methods ", "input": " String _language \n String _link \n String _rss_link \n String _title \n String _image \n List<RSSItem> _items \n String _description \n\n void set_image \n String getLink \n String getLanguage \n String getTitle \n void setItems \n String get_image \n String getDescription \n String getRSSLink", "output": ""}, {"instruction": "Generate java code\nadds an item stack into the inventory ", "input": " int limit \n int count \n Map<Item,Integer> invMap \n\n void printInventory \n ItemStack[] getItemStacks \n void dumpAll \n boolean isFull", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.util.date #date . ", "input": " Date instance \n GregorianCalendar cal \n\n void testConstructorWithString \n void testSetMonth \n void testSetYearThreeDigits \n void testToStringFourDigitYear \n void testEqualsAfterInit \n void testEqualsWrongType \n void testSetYearTwoDigit \n void testEqualsWhenChanged \n void testToISO8601WithTime \n void setUp \n void testGetMonth \n void testEqualsItself \n void testSetYearNegative \n void testConstructorWithValues \n void testSetDayOutOfBounds \n void testGetYear \n void testToISO8601WithTimeAndZeroZone \n void testToISO8601FourDigitYear \n void testSetDay \n void testSetYearFourDigit \n void testToStringTwoDigitYear \n void testToISO8601WithTimeAndPositiveOffset \n void testToISO8601TwoDigitYear \n void testSetYearFiveDigits \n void testToISO8601WithTimeAndNegativeOffset \n void testGetDay \n void testSetMonthOutOfBounds", "output": ""}, {"instruction": "Generate java code\nreturn value on the top of the stack without popping it . ", "input": " int real_next \n Stack<Integer> vstack \n Stack<Symbol> real_stack \n\n void pop \n void get_from_real \n void push \n boolean empty", "output": ""}, {"instruction": "Generate java code\nreturn everything in the path up to the last slash in a uri . ", "input": " int RADIX \n byte ESCAPE_CHAR \n byte PLUS_CHAR \n\n String pathDecode \n String urlDecode \n String urlDecode \n String urlDecode \n int digit16 \n String urlEncode \n String urlEncode \n Map<String,String> parseQueryString", "output": ""}, {"instruction": "Generate java code\ntests the setattributeoptions #defaults method . ", "input": " PlaceHolder placeHolder \n\n void setOwnerToEmptyShouldFail \n void fields \n void setGroupToEmptyShouldFail \n void equalsTest", "output": ""}, {"instruction": "Generate java code\nreturns the uint32 encoded form of the path element , including the most significant bit . ", "input": " int i \n ChildNumber ZERO \n ChildNumber ONE \n ChildNumber ZERO_HARDENED \n int HARDENED_BIT \n\n int hashCode \n int num \n boolean equals \n int i \n boolean hasHardenedBit \n boolean isHardened \n String toString", "output": ""}, {"instruction": "Generate java code\nsets custom produces media types ; can be used to override static produces annotation value set on the provider . ", "input": " List<String> produceMediaTypes \n Bus bus \n List<String> consumeMediaTypes \n boolean enableStreaming \n ResourceBundle BUNDLE \n boolean enableBuffering \n Logger LOG \n\n void init \n Bus getBus \n void setConsumeMediaTypes \n void setEnableBuffering \n boolean getEnableStreaming \n List<String> getProduceMediaTypes \n void setEnableStreaming \n void setBus \n List<String> getConsumeMediaTypes \n boolean getEnableBuffering \n boolean isPayloadEmpty \n boolean isPayloadEmpty \n void reportEmptyContentLength", "output": ""}, {"instruction": "Generate java code\nchecks if this is a valid command or not . mainly if its just an empty string ", "input": " String rawParameters \n boolean hasArgs \n HashMap<String,String> params \n String command \n String rawCommand \n\n String[] getExternalArgs \n long getLong \n int getInt \n boolean hasArguments \n boolean isSet \n String getCommand \n String[] getExternalCommand \n String toString \n String getString \n String parameters \n boolean getBool \n void parseCommand", "output": ""}, {"instruction": "Generate java code\ntest case for s3aunderfilesystem #delete string , boolean . ", "input": " TransferManager mManager \n String BUCKET_PREFIX \n AmazonS3Client mClient \n String DST \n S3AUnderFileSystem mS3UnderFileSystem \n String SRC \n String ACCOUNT_OWNER \n String PATH \n String BUCKET_NAME \n short BUCKET_MODE \n\n void renameOnAmazonClientException \n void before \n void deleteNonRecursiveOnAmazonClientException", "output": ""}, {"instruction": "Generate java code\nallows third party apps to specify the camera id , rather than determine it automatically based on available cameras and their orientation . ", "input": " int MAX_FRAME_WIDTH \n String TAG \n int requestedFramingRectHeight \n AutoFocusManager autoFocusManager \n int requestedCameraId \n int MAX_FRAME_HEIGHT \n CameraConfigurationManager configManager \n PreviewCallback previewCallback \n Rect framingRectInPreview \n int MIN_FRAME_HEIGHT \n Context context \n Rect framingRect \n boolean initialized \n int requestedFramingRectWidth \n OpenCamera camera \n boolean previewing \n int MIN_FRAME_WIDTH \n\n void requestPreviewFrame \n void stopPreview \n void startPreview \n boolean isOpen \n Rect getFramingRect \n void setManualFramingRect \n int findDesiredDimensionInRange \n PlanarYUVLuminanceSource buildLuminanceSource \n void closeDriver \n void setTorch \n void openDriver \n Rect getFramingRectInPreview", "output": ""}, {"instruction": "Generate java code\nclones a list of bytebuffer s. ", "input": " Method sCleanerCleanMethod \n Method sByteBufferCleanerMethod \n Logger LOG \n\n boolean equalConstantByteArray \n ByteBuffer getIncreasingByteBuffer \n ByteBuffer getIncreasingByteBuffer \n void fastCopy \n void cleanDirectBuffer \n ByteBuffer sliceByteBuffer \n ByteBuffer sliceByteBuffer \n int byteToInt \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteArray \n boolean equalIncreasingByteBuffer \n byte[] getIncreasingByteArray \n byte[] getIncreasingByteArray \n void writeBufferToFile \n ByteBuffer cloneByteBuffer \n byte[] newByteArrayFromByteBuffer \n void putIntByteBuffer \n ByteBuffer generateNewByteBufferFromThriftRPCResults \n ByteBuffer getIncreasingIntBuffer \n ByteBuffer getIncreasingIntBuffer", "output": ""}, {"instruction": "Generate java code\ngets the optional title for the dialog ", "input": " ActionType actionType \n String data \n ArrayList<String> suggestions \n String to \n Filters filters \n Creator<GameRequestContent> CREATOR \n String message \n String title \n String objectId \n\n ActionType getActionType \n Builder readFrom \n Builder readFrom \n Builder setData \n String getMessage \n GameRequestContent[] newArray \n Builder setTitle \n String getTo \n GameRequestContent createFromParcel \n Builder setObjectId \n Builder setMessage \n int describeContents \n String getObjectId \n ArrayList<String> getSuggestions \n Builder setActionType \n GameRequestContent build \n Builder setFilters \n Filters getFilters \n Builder setTo \n Builder setSuggestions \n void writeToParcel \n String getData", "output": ""}, {"instruction": "Generate java code\nadds a directed labeled edge to the graph . the end points of the edge are specified by vertex labels . new vertices are automatically identified and added to the graph . ", "input": " List<VertexLabelType> vertexLabels \n Hashtable<VertexLabelType,Hashtable<VertexLabelType,EdgeLabelType>> globalEdgeLookup \n\n List<VertexLabelType> getVertexLabels \n List<VertexLabelType> getSuccessors \n EdgeLabelType get \n boolean isVertexLabel \n void clear \n Hashtable<VertexLabelType,EdgeLabelType> checkForNewVertex \n void addVertex \n void remove", "output": ""}, {"instruction": "Generate java code\ncreate error object to be passed back to the js callback . ", "input": " PlaceHolder placeHolder \n\n WritableMap getInvalidValueError \n WritableMap getDBError \n WritableMap getInvalidKeyError", "output": ""}, {"instruction": "Generate java code\nreturns a list of all loggers that will be accessed by xrlog . each entry is a string with a logger name , which can be used to retrieve the logger using the corresponding logging api ; example name might be `` org.xhtmlrenderer.config '' ", "input": " String CONFIG \n String MATCH \n String RENDER \n String CSS_PARSE \n List LOGGER_NAMES \n String EXCEPTION \n boolean loggingEnabled \n String XML_ENTITIES \n String JUNIT \n String INIT \n XRLogger loggerImpl \n String LOAD \n String LAYOUT \n String GENERAL \n String CASCADE \n boolean initPending \n\n void exception \n void exception \n XRLogger getLoggerImpl \n void init \n void init \n void init \n void init \n void junit \n void junit \n void junit \n void cssParse \n void cssParse \n void cssParse \n void log \n void log \n void cascade \n void cascade \n void cascade \n void match \n void match \n void match \n void main \n String registerLoggerByName \n void setLevel \n void layout \n void layout \n void layout \n void setLoggingEnabled \n void general \n void general \n void general \n void load \n void load \n void load \n void setLoggerImpl \n void render \n void render \n void render \n void xmlEntities \n void xmlEntities \n void xmlEntities \n boolean isLoggingEnabled", "output": ""}, {"instruction": "Generate java code\nadds a jobsgroup to the queue , and starts immediately to execute jobs on that group . if there was a previously group running , this method finishes that execution first . ", "input": " ActionsController controller \n Hashtable<Long,JobsGroup> jobs \n\n void groupFinished \n void finishRunningJobs", "output": ""}, {"instruction": "Generate java code\nreturn the offset of the workflows being returned . for pagination purposes . ", "input": " int total \n int len \n List<CoordinatorJobBean> jobs \n int start \n\n List<CoordinatorJobBean> getCoordJobs \n int getLen \n int getTotal", "output": ""}, {"instruction": "Generate java code\nset the mappings from namespace uri to javascript name prefixes . ", "input": " File output \n String wsdlVersion \n UriPrefixPair[] packagePrefixes \n String prefix \n File catalog \n File dependencies[] \n String uri \n String validate \n\n void setWsdlVersion \n String getPrefix \n void setValidate \n void setOutputDir \n UriPrefixPair[] getPackagePrefixes \n File[] getDependencies \n void setUri \n void setDependencies \n void setCatalog \n File getOutputDir \n File getCatalog \n String getValidate \n void setPrefix \n String getWsdlVersion \n void merge \n String toString \n String getUri \n void setOutput \n File getOutput", "output": ""}, {"instruction": "Generate java code\nsets the seq id . ", "input": " long testId \n long serialVersionUID \n long seqId \n\n long getSeqId \n int hashCode \n boolean equals \n void setTestId \n long getTestId", "output": ""}, {"instruction": "Generate java code\ngets the new merged profile data object . ", "input": " String VALUE_SEPARATOR \n String TYPE_VALUE_SEPARATOR \n ProfileData profileData \n\n void mergeProfiles \n void createUnion \n String determineAlteredStatus \n String createKey", "output": ""}, {"instruction": "Generate java code\ncreates a reflector from the provided vector and gamma . q = i - & gamma ; u ut in practice org.ejml.alg.dense.mult.vectorvectormult #householder double , org.ejml.data.d1matrix64f , org.ejml.data.d1matrix64f , org.ejml.data.d1matrix64f multhouseholder should be used for performance reasons since there is no need to calculate q explicitly . ", "input": " PlaceHolder placeHolder \n\n void subvector \n double elementSumSq \n double diffNormP1 \n DenseMatrix64F pivotMatrix \n DenseMatrix64F copyChangeRow \n double diffNormF \n double qualityTriangular \n double diffNormF_fast \n void addIdentity \n double diagProd \n DenseMatrix64F copyTriangle \n DenseMatrix64F[] splitIntoVectors", "output": ""}, {"instruction": "Generate java code\ncreates a new mode by applying the given umask mode to this mode . ", "input": " Bits mOwnerBits \n Bits mGroupBits \n Bits[] SVALS \n Bits mOtherBits \n String mString \n\n Bits extractOtherBits \n boolean tryParseInt \n boolean imply \n Bits or \n void set \n Bits extractOwnerBits \n void setOtherBits \n Bits getOtherBits \n Mode getDefault \n Mode createFullAccess \n Bits getGroupBits \n Bits extractGroupBits \n Bits getOwnerBits \n void setOwnerBits \n Bits not \n void fromShort \n Bits and \n int hashCode \n void setGroupBits \n boolean equals \n Mode getUMask \n String toString \n String toString \n short toShort \n Mode createNoAccess", "output": ""}, {"instruction": "Generate java code\nconvenience method for creating a waypoint based in the position . ", "input": " double altitude \n double latitude \n Datum datum \n double longitude \n\n CompassPoint getLatitudeHemisphere \n double haversine \n double getLongitude \n double getAltitude \n boolean isLatitudeNorth \n double getLatitude \n boolean isLongitudeEast \n double distanceTo \n void setLatitude \n void setAltitude \n CompassPoint getLongitudeHemisphere \n Datum getDatum \n String toString \n void setLongitude", "output": ""}, {"instruction": "Generate java code\nsets the test id . ", "input": " long testId \n long serialVersionUID \n long seqId \n\n long getSeqId \n int hashCode \n void setSeqId \n boolean equals \n long getTestId", "output": ""}, {"instruction": "Generate java code\nsets if it should internally save the w matrix before performing the decomposition . must be set before decomposition the matrix . saving w can result in about a 5 % savings when solving systems around a height of 5k . the price is that it needs to save a matrix the size of the input matrix . ", "input": " D1Submatrix64F A \n boolean saveW \n BlockMatrix64F dataW \n BlockMatrix64F dataWTA \n D1Submatrix64F Y \n int blockLength \n D1Submatrix64F W \n BlockMatrix64F dataA \n double temp[] \n D1Submatrix64F WTA \n double gammas[] \n\n void setW \n void applyQ \n void applyQ \n boolean decompose \n void setup \n BlockMatrix64F getQ \n BlockMatrix64F getQR \n BlockMatrix64F initializeQ \n BlockMatrix64F getR \n boolean inputModified \n void applyQTran \n void updateA", "output": ""}, {"instruction": "Generate java code\nsets the protocol handler to use for this connection . ", "input": " SocketChannel m_socketChannel \n SelectorManager m_selectorManager \n Logger LOG \n List m_closeListeners \n WriteHandlerImpl m_writeHandler \n ReadHandlerImpl m_readHandler \n boolean m_closed \n\n void handleKey \n InetSocketAddress getLocalSocketAddress \n SocketChannel getSocketChannel \n void writeLater \n void writeLater \n void writeLater \n void registerRead \n void notifyCloseListeners \n void addCloseListener \n boolean isClosed \n int hashCode \n boolean equals \n String toString \n void close \n void write \n void write \n void write \n InetSocketAddress getRemoteSocketAddress", "output": ""}, {"instruction": "Generate java code\nretrieves a byte array field from the stream . creates a new byte array that is the size of the object being retrieved . ", "input": " boolean isRaw \n int valueLen \n PackFormatInputStream format \n int valueOff \n byte[] value \n\n void getByteArrayInternal \n int getByteArrayLength \n byte getByte \n short getShort \n String getString \n long getLong \n byte[] getValue \n int getInt \n int unpackInt \n short unpackShort \n String getFormat \n long getRecord \n long unpackLong", "output": ""}, {"instruction": "Generate java code\ngetinstance method of logoutrequestsender , as it is a singleton ", "input": " LogoutRequestSender instance \n Log log \n ExecutorService threadPool \n SingleLogoutRequestDTO logoutReqDTO \n\n void sendLogoutRequests \n void run \n int derivePortFromAssertionConsumerURL", "output": ""}, {"instruction": "Generate java code\nreturns numerator ", "input": " int denom \n int num \n\n boolean isOne \n int getScaled \n boolean equals \n int getDenom", "output": ""}, {"instruction": "Generate java code\ngets the final component of the alluxiouri . ", "input": " String SEPARATOR \n long serialVersionUID \n String CUR_DIR \n String WILDCARD \n URI mUri \n AlluxioURI EMPTY_URI \n\n AlluxioURI getParent \n int getDepth \n String getScheme \n boolean isRoot \n boolean isPathAbsolute \n boolean containsWildcard \n int compareTo \n String getAuthority \n boolean hasScheme \n int getPort \n String getLeadingPath \n int hashCode \n boolean hasWindowsDrive \n boolean equals \n String getPath \n boolean isAbsolute \n Map<String,String> getQueryMap \n String toString \n AlluxioURI join \n AlluxioURI join \n String normalizePath \n String getHost \n boolean hasAuthority", "output": ""}, {"instruction": "Generate java code\ncopies request id to response as per xkms specification http://www.w3.org/tr/xkms2/#xkms_2_0_section_1 ", "input": " PlaceHolder placeHolder \n\n ResultType copyOpaqueClientData \n String generateUniqueID \n ResultType createResponse \n T createResponse \n ResultType copyServiceName", "output": ""}, {"instruction": "Generate java code\njsobject will return the string `` undefined '' at certain times , so we need to make sure we 're not getting a value that looks valid , but is n't . ", "input": " String variableName \n int objectCounter \n JSObject jsObject \n IJavascriptRuntime runtime \n Map<JSObject,JavascriptObject> peerRegistry \n\n Integer checkInteger \n Object getProperty \n T getProperty \n Object invokeJavascript \n Object invokeJavascript \n T invokeJavascriptReturnValue \n T invokeJavascriptReturnValue \n void setProperty \n void setProperty \n void setProperty \n boolean isMemberDefined \n String getNextVariableName \n String getVariableName \n Boolean checkBoolean \n JSObject getJSObject", "output": ""}, {"instruction": "Generate java code\nredraw the page ", "input": " HandwriterView view \n RectF mRectF \n Rect mRect \n\n boolean getOnlyPenInput \n float getScaledPenThickness \n boolean onTouchEvent \n Page getPage \n boolean getDoubleTapWhileWriting \n boolean getMoveGestureWhileWriting \n void drawPinchZoomPreview \n void destroy \n Transformation pinchZoomTransform \n void draw \n boolean useForWriting \n float pinchZoomScaleFactor \n boolean useForTouch \n void interrupt \n Context getContext \n int getMoveGestureMinDistance", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.positionparser #setlatitude int , double . ", "input": " PositionParser instance \n\n void testParseHemisphereLat \n void testSetPositionValuesSW \n void testParseLongitude \n void testSetLonHemisphere \n void setUp \n void testSetLongitude \n void testSetLatHemisphere \n void testSetPositionValuesNE \n void testParseHemisphereLon \n void testParseLatitude", "output": ""}, {"instruction": "Generate java code\ndisconnect this undo/redo from the text view . ", "input": " LinkedList<EditItem> mmHistory \n TextView mTextView \n int mmMaxHistorySize \n EditHistory mEditHistory \n CharSequence mmAfter \n CharSequence mmBefore \n boolean mIsUndoOrRedo \n int mmPosition \n EditTextChangeListener mChangeListener \n CharSequence mBeforeChange \n CharSequence mAfterChange \n int mmStart \n\n void add \n EditItem getPrevious \n void onTextChanged \n void storePersistentState \n void clear \n boolean getCanRedo \n void afterTextChanged \n void redo \n EditItem getNext \n boolean getCanUndo \n void trimHistory \n boolean restorePersistentState \n void undo \n void clearHistory \n void beforeTextChanged \n boolean doRestorePersistentState \n void setMaxHistorySize \n void setMaxHistorySize", "output": ""}, {"instruction": "Generate java code\nadd a high level change renaming . if the difference group identifier already exists the old high level change renaming will be overwritten . ", "input": " HashMap<String,HighLevelChangeRenaming> highLevelChangesRenaming \n\n void removeHighLevelChangeRenaming \n HashMap<String,HighLevelChangeRenaming> getHighLevelChangesRenaming \n void clear \n void setHighLevelChangesRenaming", "output": ""}, {"instruction": "Generate java code\nmake a request to the facebook graph api with the given string parameters using an http get default method . see http://developers.facebook.com/docs/api note that this method is asynchronous and the callback will be invoked in a background thread ; operations that affect the ui will need to be posted to the ui thread or an appropriate handler . this method is deprecated . see facebook and com.facebook.request for more info . ", "input": " Facebook fb \n\n void onFileNotFoundException \n void logout \n void logout \n void onComplete \n void onIOException \n void onMalformedURLException \n void onFacebookError", "output": ""}, {"instruction": "Generate java code\nsets the rotation . ", "input": " List<StateListener> listeners \n Rotation DEFAULT_ROTATION \n Rotation rotation \n double DEFAULT_POWER \n double DEFAULT_DIRECTION \n String DEFAULT_TEXT \n String text \n double power \n double direction \n\n double getPower \n double getDirection \n String getText \n Rotation getRotation \n void reset \n void setPower \n void removeListener \n void setDirection \n void addListener \n void setText", "output": ""}, {"instruction": "Generate java code\nreturns the length of the matched token . it is not required to be meaningful unless addchar has returned true and hasfreepart returned false or endchar returned true . ", "input": " char match[] \n char pattern[] \n\n boolean addChar \n boolean hasFreePart \n void reset \n boolean endChar \n int getPeekCount", "output": ""}, {"instruction": "Generate java code\nsets up a new bytebuffer before a test runs . ", "input": " ByteBuffer mBuffer \n int LENGTH \n\n void nettyOutput \n void length \n void readOnlyByteBuffer", "output": ""}, {"instruction": "Generate java code\ntest method for net.sf.marineapi.nmea.parser.rteparser #isfirst . ", "input": " RTESentence rte \n String EXAMPLE \n RTESentence empty \n\n void testGetWaypointIds \n void testIsActiveRoute \n void testGetSentenceIndex \n void testConstructor \n void testSetSentenceCountWithNegativeValue \n void testAddWaypointId \n void testGetSentenceCount \n void testSetWaypointIds \n void testSetRouteId \n void testIsWorkingRoute \n void testSetSentenceCount \n void testGetRouteId \n void testSetRouteTypeActive \n void setUp \n void testIsLast \n void testGetWaypointCount \n void testSetSentenceIndex \n void testSetRouteTypeWorking \n void testSetSentenceIndexWithNegativeValue", "output": ""}, {"instruction": "Generate java code\nall set methods ", "input": " String _language \n String _link \n String _rss_link \n String _title \n String _image \n List<RSSItem> _items \n String _description \n\n void set_image \n List<RSSItem> getItems \n String getLink \n String getLanguage \n String getTitle \n String get_image \n String getDescription \n String getRSSLink", "output": ""}, {"instruction": "Generate java code\nsets entrez gene id for gene b. ", "input": " String interactionType \n String experimentTypes \n long geneB \n String pmids \n long geneA \n String source \n\n void setSource \n String toSif \n void setExperimentTypes \n void setGeneA \n String getInteractionType \n long getGeneA \n long getGeneB \n void setPmids \n String getSource \n String toString \n void setInteractionType \n String getExperimentTypes \n String getPmids", "output": ""}, {"instruction": "Generate java code\ntests that a closedchannelexception is thrown when trying to append to a channel afterclosing it . ", "input": " LocalFileBlockWriter mWriter \n ExpectedException mThrown \n TemporaryFolder mFolder \n long TEST_BLOCK_SIZE \n String mTestFilePath \n\n void before \n void getChannel \n void append", "output": ""}, {"instruction": "Generate java code\ntests that the blockid #createblockid long , long method works correctly when creating ablock with the maximum sequence number . ", "input": " long MAX_SEQUENCE_NUMBER \n\n void getMaxSequenceNumber \n void createBlockId \n void getContainerIdAndSequenceNumber", "output": ""}, {"instruction": "Generate java code\nthis tests everything that the test for the static file above tests , but it also does the full download . ", "input": " Logger LOG \n\n void verifyResults \n void runJsonTest \n void testJsonInputStream \n void testHandleInputStream \n void runFullTest \n void runTest", "output": ""}, {"instruction": "Generate java code\nparse a string into a stmt ast node , applying substitutions . ", "input": " ExtensionInfo ext \n int EXPR \n int DECL \n Position pos \n int MEMB \n int STMT \n int TYPE \n int FILE \n\n TypeNode parseType \n TypeNode parseType \n ClassMember parseMember \n ClassMember parseMember \n QQParser parser \n ClassDecl parseDecl \n ClassDecl parseDecl \n SourceFile parseFile \n SourceFile parseFile \n Position type_position \n Node parse \n Lexer lexer \n Expr parseExpr \n Expr parseExpr", "output": ""}, {"instruction": "Generate java code\ngets a list of uris the authorizationservice may return the authorization code to ", "input": " String clientIpAddress \n String clientId \n List<String> allowedGrantTypes \n boolean isConfidential \n List<String> applicationCertificates \n UserSubject subject \n List<String> redirectUris \n List<String> registeredScopes \n String applicationLogoUri \n long serialVersionUID \n String applicationDescription \n List<String> registeredAudiences \n String applicationWebUri \n String clientSecret \n Map<String,String> properties \n String applicationName \n\n UserSubject getSubject \n String getApplicationName \n void setSubject \n String getClientId \n List<String> getAllowedGrantTypes \n void setApplicationDescription \n void setRegisteredScopes \n void setProperties \n String getClientIpAddress \n String getApplicationDescription \n void setApplicationCertificates \n String getApplicationWebUri \n void setApplicationLogoUri \n void setConfidential \n void setApplicationWebUri \n void setClientIpAddress \n String getApplicationLogoUri \n void setClientSecret \n void setAllowedGrantTypes \n boolean isConfidential \n String getClientSecret \n void setApplicationName \n Map<String,String> getProperties \n void setRedirectUris \n List<String> getRegisteredAudiences \n void setRegisteredAudiences \n List<String> getApplicationCertificates \n void setClientId \n List<String> getRegisteredScopes", "output": ""}, {"instruction": "Generate java code\ngets the errors . ", "input": " Timestamp endDate \n BigDecimal feedConfigId \n String resultCode \n long serialVersionUID \n String resultMessage \n BigDecimal fileCount \n Timestamp maxReceiptDate \n BigDecimal downloadSize \n BigDecimal feedId \n String configInfo \n long runId \n byte[] errors \n String runStatus \n Timestamp startDate \n\n BigDecimal getFeedConfigId \n Timestamp getStartDate \n void setFeedId \n String getResultCode \n void setFeedConfigId \n void setMaxReceiptDate \n long getRunId \n Timestamp getEndDate \n void setErrors \n String getConfigInfo \n void setEndDate \n void setFileCount \n BigDecimal getDownloadSize \n String getResultMessage \n void setResultMessage \n BigDecimal getFileCount \n String getRunStatus \n void setRunStatus \n void setStartDate \n BigDecimal getFeedId \n void setResultCode \n void setRunId \n Timestamp getMaxReceiptDate \n void setConfigInfo \n void setDownloadSize", "output": ""}, {"instruction": "Generate java code\ncompare two cancer studies . ", "input": " Log log \n\n UserDetails getUserDetails \n List<CancerStudy> getCancerStudies \n List<CancerStudy> isAccessibleCancerStudy", "output": ""}, {"instruction": "Generate java code\nperforms domain-match as defined by the rfc2965 . host a 's name domain-matches host b 's if their host name strings string-compare equal ; or a is a hdn string and has the form nb , where n is a non-empty name string , b has the form . b ' , and b ' is a hdn string . so , x.y.com domain-matches . y.com but not y.com . ", "input": " PlaceHolder placeHolder \n\n boolean match \n void parse \n void validate", "output": ""}, {"instruction": "Generate java code\nreturns an iterator for the log records , which will be returned in reverse order starting with the most recent . ", "input": " int LAST_POS \n int FIRST_POS \n Page mypage \n String logfile \n int currentpos \n Block currentblk \n\n int getFirstRecordPosition \n void setFirstRecordPosition \n void flush \n void flush \n int size \n void appendVal \n void appendNewBlock \n int currentLSN \n void finalizeRecord \n void setLastRecordPosition \n int getLastRecordPosition \n int append", "output": ""}, {"instruction": "Generate java code\ncreate an instance of getofferdetailsresponse.return.detailofferdata.merchant.addresses ", "input": " PlaceHolder placeHolder \n\n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos \n GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia \n GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue \n GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData \n GetOfferDetailsResponse createGetOfferDetailsResponse \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem \n GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts \n GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage \n GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses \n GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos \n GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion \n GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant \n GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo \n GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "output": ""}, {"instruction": "Generate java code\nappends the contents of the page to the specified file . ", "input": " int BLOCK_SIZE \n ByteBuffer contents \n FileMgr filemgr \n int INT_SIZE \n\n int getInt \n void setString \n void read \n int STR_SIZE \n String getString \n void write \n void setInt", "output": ""}, {"instruction": "Generate java code\na single node is always valid ", "input": " int actualNumNodes \n int expectedNumNodes \n\n void resetCounter \n void noMoreNodes", "output": ""}, {"instruction": "Generate java code\nset the number of not approved conflicts . ", "input": " int differencesResolutionChanged \n int conflictsNotApproved \n\n int getDifferencesResolutionChanged \n void incrementCounterDifferencesResolutionChanged \n void incrementCounterConflictsNotApproved \n void setDifferencesResolutionChanged \n void decrementCounterDifferencesResolutionChanged \n int getConflictsNotApproved", "output": ""}, {"instruction": "Generate java code\nremoves an edge from the graph . ", "input": " List<VertexLabelType> vertexLabels \n Hashtable<VertexLabelType,Hashtable<VertexLabelType,EdgeLabelType>> globalEdgeLookup \n\n void set \n List<VertexLabelType> getVertexLabels \n List<VertexLabelType> getSuccessors \n EdgeLabelType get \n boolean isVertexLabel \n void clear \n Hashtable<VertexLabelType,EdgeLabelType> checkForNewVertex \n void addVertex", "output": ""}, {"instruction": "Generate java code\nattempts to move the ai to the attack target . ", "input": " EntityMobWithInventory mob \n EntityLivingBase attackTarget \n World world \n int cooldown \n int currCooldown \n\n double getDistanceSqFromTarget \n void nextStep \n boolean hasAttackTarget", "output": ""}, {"instruction": "Generate java code\ntries to pull the gitblit server settings from the remote gitblit instance . ", "input": " Type USERS_TYPE \n Type SETTINGS_TYPE \n Type REPOSITORIES_TYPE \n Type TEAMS_TYPE \n Logger LOGGER \n\n Map<String,RepositoryModel> getRepositories \n String asLink \n String asLink \n Map<String,String> getScripts \n boolean acknowledgeStatus \n List<UserModel> getUsers \n List<FederationModel> getFederationRegistrations \n boolean poke \n FederationProposalResult propose \n List<TeamModel> getTeams", "output": ""}, {"instruction": "Generate java code\ntrue when a valid surrogate pair starts at the given index in the given string . out-of-range indexes return false . ", "input": " PlaceHolder placeHolder \n\n String nullToEmpty \n String padStart \n String commonPrefix \n boolean isNullOrEmpty \n String repeat \n String commonSuffix \n String emptyToNull \n String padEnd", "output": ""}, {"instruction": "Generate java code\ngets the actual bind hostname on rpc service used by unit test only . ", "input": " Supplier<String> mClientSupplier \n String mJournalFolder \n ClientPool mClientPool \n AlluxioMaster mAlluxioMaster \n Thread mMasterThread \n Logger LOG \n String mHostname \n\n AlluxioMaster getInternalMaster \n int getRPCLocalPort \n String getWebBindHost \n String uniquePath \n void start \n FileSystem getClient \n void kill \n String getJournalFolder \n void stop \n int getWebLocalPort \n String get \n boolean isServing \n LocalAlluxioMaster create \n LocalAlluxioMaster create \n InetSocketAddress getAddress \n void clearClients \n String getUri", "output": ""}, {"instruction": "Generate java code\nreturns a string that would replace the given character in the specified escaper , or null if no replacement should be made . this method is intended for use in tests throughthe escaperasserts class ; production users of unicodeescaper should limitthemselves to its public interface . ", "input": " Escaper NULL_ESCAPER \n Map<Character,String> replacementMap \n char safeMax \n String unsafeReplacement \n char safeMin \n\n Builder setUnsafeReplacement \n Escaper nullEscaper \n Escaper build \n Builder addEscape \n Builder builder \n Builder setSafeRange \n String stringOrNull \n UnicodeEscaper asUnicodeEscaper \n String escape \n char[] escape \n UnicodeEscaper wrap", "output": ""}, {"instruction": "Generate java code\ntest case for ossunderfilesystem #rename string , string . ", "input": " String BUCKET_PREFIX \n OSSClient mClient \n String DST \n String SRC \n OSSUnderFileSystem mOSSUnderFileSystem \n String PATH \n String BUCKET_NAME \n\n void before \n void deleteNonRecursiveOnServiceException \n void deleteRecursiveOnServiceException", "output": ""}, {"instruction": "Generate java code\nadds the given opcode to the end of the program . ", "input": " List<ScriptChunk> chunks \n\n Script updateScriptWithSignature \n Script createOpReturnScript \n ScriptBuilder data \n ScriptBuilder data \n Script createMultiSigInputScriptBytes \n Script createMultiSigInputScriptBytes \n ScriptBuilder smallNum \n ScriptBuilder smallNum \n Script createRedeemScript \n ScriptBuilder addChunk \n ScriptBuilder addChunk \n Script createInputScript \n Script createInputScript \n Script createOutputScript \n Script createOutputScript \n Script createMultiSigInputScript \n Script createMultiSigInputScript \n Script createMultiSigOutputScript \n Script build \n Script createP2SHMultiSigInputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript \n Script createP2SHOutputScript", "output": ""}, {"instruction": "Generate java code\ntests the creation of the greedyallocator via the allocator.factory #create blockmetadatamanagerview method . ", "input": " BlockMetadataManagerView mManagerView \n TemporaryFolder mTestFolder \n\n void createRoundRobinAllocator \n void createMaxFreeAllocator \n void before \n void createDefaultAllocator \n void after", "output": ""}, {"instruction": "Generate java code\nset content encoding for the message ", "input": " Map<String,Object> headers \n byte body[] \n long deliveryTag \n String replyTo \n String contentEncoding \n String messageId \n String correlationId \n String soapAction \n String contentType \n\n String getCorrelationId \n String getContentEncoding \n void setHeaders \n Map<String,Object> getHeaders \n byte[] getBody \n String getReplyTo \n void setCorrelationId \n long getDeliveryTag \n void setMessageId \n void setSoapAction \n void setBody \n String getMessageId \n void setReplyTo \n void setDeliveryTag \n String getContentType \n void setContentType \n String getSoapAction", "output": ""}, {"instruction": "Generate java code\nsubclasses must call this method after finishing character processing , in order to ensure that any unterminated line in the buffer is passed to #handleline . ", "input": " boolean sawReturn \n StringBuilder line \n\n void add \n boolean finishLine \n void handleLine", "output": ""}, {"instruction": "Generate java code\nincrement the use count . ", "input": " String _stack_type \n String _name \n int _index \n int _use_count \n\n int use_count \n String stack_type \n String name \n boolean is_non_term \n int index \n String toString", "output": ""}, {"instruction": "Generate java code\nmoves to the next valid document . ", "input": " String fragmentFileName \n File[] documents \n Logger logger \n int i \n FragmentsFileFilter fileFilter \n File directory \n\n Document<O> next \n Document<O> getDocument \n boolean hasNext \n boolean directoryOfDirectoriesMode \n O readObjectFromStringLine \n Iterator<Document<O>> getDocumentsFromDirectory \n boolean isParsableLine \n void remove \n boolean accept", "output": ""}, {"instruction": "Generate java code\nput transaction hash into result intent . meant for usage by bitcoin wallet applications . ", "input": " int NANOCOINS_PER_COIN \n String INTENT_EXTRA_TRANSACTION_HASH \n String INTENT_EXTRA_TRANSACTION_HASH_OLD \n\n void request \n void request \n void startForResult \n String transactionHashFromResult \n Intent makeIntent \n void redirectToDownload \n void start \n void requestForResult \n void requestForResult", "output": ""}, {"instruction": "Generate java code\nreturns an iterator over orders line items . ", "input": " OrderType order \n\n AddressFacade getSellerAddress \n AddressFacade getBuyerAddress \n String getSellerName \n String getBuyerContact \n String getBuyerName \n PartyNameType getSellerParty \n String getLongDate \n XMLGregorianCalendar getCalendar", "output": ""}, {"instruction": "Generate java code\nset the value of checkedflag ", "input": " FolderInfo.CheckedFlag checkedFlag \n String artist \n String album \n double rating \n int errorLevel \n\n FolderInfo.CheckedFlag getCheckedFlag \n void setArtist \n int getErrorLevel \n void setErrorLevel \n String getArtist \n void setAlbum \n String toString \n void setRating \n String getAlbum \n double getRating", "output": ""}, {"instruction": "Generate java code\ncalled to ask the presenter to save its current dynamic state , so itcan later be reconstructed in a new instance of its process is restarted . ", "input": " T mVista \n\n void onDestroy \n void onStart \n void restoreState \n void stop \n void start \n T getVista \n void onStop", "output": ""}, {"instruction": "Generate java code\nreturns the string value stored at the specified offset of the specified block . the method first obtains an slock on the block , then it calls the buffer to retrieve the value . ", "input": " RecoveryMgr recoveryMgr \n BufferList myBuffers \n ConcurrencyMgr concurMgr \n int END_OF_FILE \n int txnum \n int nextTxNum \n\n void rollback \n int getInt \n void setString \n void recover \n void pin \n int size \n void commit \n void unpin \n int nextTxNumber \n Block append \n void setInt", "output": ""}, {"instruction": "Generate java code\ndeserializes only the header in case packet meta data is needed before decoding the payload . this method assumes you have already called seekpastmagicbytes ", "input": " Map<Class<? extends Message>,String> names \n int size \n Logger log \n boolean parseLazy \n int HEADER_LENGTH \n byte[] checksum \n byte[] header \n NetworkParameters params \n int COMMAND_LEN \n String command \n boolean parseRetain \n\n void seekPastMagicBytes \n void serialize \n void serialize \n Message makeMessage \n Message deserializePayload \n boolean isParseLazyMode \n boolean isParseRetainMode \n Message deserialize", "output": ""}, {"instruction": "Generate java code\nadd the given rule if it wants to participate in the rulechain . ", "input": " Map<Language,RuleChainVisitor> languageToRuleChainVisitor \n\n RuleChainVisitor getRuleChainVisitor \n void apply", "output": ""}, {"instruction": "Generate java code\nactivates the event . ", "input": " Character character \n String sprite \n int id \n TriggerType triggerType \n String map \n Array<EventAction> actions \n String layer \n boolean collidable \n\n void read \n void setLayer \n void setActions \n String getLayer \n int getId \n Array<EventAction> getActions \n void setSprite \n String getMap \n String getSprite \n void setCollidable \n boolean isCollidable \n void setTriggerType \n boolean equals \n void setMap \n void setId \n Character getCharacter \n void setCharacter \n TriggerType getTriggerType \n void write", "output": ""}, {"instruction": "Generate java code\n< a > < b > < b > < / a > ", "input": " OpenTagRegister tagList \n int elmId \n\n void openedIsolatedTag \n void interleavedTags \n void newRegister \n void testSimpleNesting \n void unopenedTags \n ASTElement element", "output": ""}]